var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbilitiesGuard.html",[0,4.727,1,4.132]],["body/guards/AbilitiesGuard.html",[1,5.606,2,5.174,3,0.032,4,0.032,5,0.029,6,5.174,7,0.468,8,2.256,9,3.454,10,7.896,11,3.069,12,4.663,13,8.554,14,8.133,15,6.562,16,0.694,17,5.174,18,2.311,19,0.004,20,2.204,21,0.947,22,2.283,23,5.951,24,7.326,25,5.174,26,4.076,27,1.621,28,4.904,29,0.309,30,7.116,31,4.327,32,2.058,33,5.174,34,0.953,35,4.076,36,2.425,37,2.383,38,5.174,39,2.425,40,0.032,41,0.301,42,2.383,43,3.169,44,2.745,45,5.174,46,5.174,47,6.414,48,5.174,49,2.778,50,4.187,51,1.641,52,4.663,53,5.174,54,4.327,55,5.174,56,2.611,57,5.174,58,5.174,59,5.174,60,2.719,61,3.457,62,5.174,63,2.468,64,2.383,65,5.174,66,7.116,67,5.174,68,5.174,69,5.174,70,0.003,71,0.003]],["title/injectables/AbilityFactory.html",[15,3.929,32,1.517]],["body/injectables/AbilityFactory.html",[3,0.027,4,0.027,5,0.024,7,0.389,8,1.981,15,4.679,16,0.42,18,1.397,19,0.004,20,1.333,21,1.074,22,1.381,27,1.349,29,0.34,31,3.599,32,1.807,34,0.793,40,0.046,41,0.251,44,2.305,49,1.365,51,1.981,54,6.151,64,1.982,70,0.002,71,0.002,72,1.8,73,3.599,74,6.247,75,6.247,76,4.303,77,3.035,78,6.247,79,6.247,80,4.303,81,6.247,82,5.631,83,2.017,84,2.829,85,2.053,86,3.223,87,3.085,88,3.085,89,1.674,90,2.017,91,3.479,92,1.949,93,5.905,94,3.223,95,2.613,96,3.696,97,1.917,98,3.755,99,1.949,100,1.949,101,1.722,102,2.053,103,2.499,104,1.651,105,3.599,106,4.324,107,2.541,108,1.19,109,2.017,110,2.927,111,2.13,112,2.017,113,3.879,114,8.938,115,2.017,116,3.879,117,5.631,118,5.509,119,3.39,120,6.247,121,4.303,122,6.247,123,4.303,124,3.39,125,6.247,126,3.879,127,4.303,128,6.247,129,4.303,130,4.303,131,4.303,132,4.303,133,4.303]],["title/modules/AbilityModule.html",[134,1.606,135,3.759]],["body/modules/AbilityModule.html",[3,0.044,4,0.044,5,0.039,15,8.114,19,0.004,29,0.292,34,1.295,39,3.294,40,0.044,41,0.409,70,0.003,71,0.003,134,2.662,135,7.501,136,2.94,137,3.81,138,6.336,139,6.336,140,6.336,141,3.937,142,3.183,143,3.183,144,7.03,145,3.937,146,4.569]],["title/entities/Account.html",[147,1.811,148,2.756]],["body/entities/Account.html",[3,0.031,4,0.031,5,0.027,7,0.448,16,0.937,19,0.004,21,1.342,29,0.304,40,0.031,41,0.289,51,2.52,70,0.003,71,0.003,103,2.976,104,1.9,147,2.384,148,3.629,149,2.243,150,4.954,151,1.012,152,4.628,153,5.478,154,4.694,155,5.115,156,5.485,157,4.822,158,1.815,159,1.843,160,4.614,161,4.954,162,4.954,163,4.954,164,7.123,165,3.88,166,6.905,167,4.954,168,7.164,169,4.954,170,6.905,171,4.954,172,2.216,173,4.954,174,4.465,175,3.975,176,3.005,177,4.143,178,4.465,179,4.954,180,4.466,181,1.482,182,1.244]],["title/controllers/AccountController.html",[183,1.811,184,4.387]],["body/controllers/AccountController.html",[3,0.034,4,0.034,5,0.03,7,0.498,8,2.352,16,0.819,18,1.786,19,0.004,20,1.703,21,0.732,22,1.765,27,2.63,29,0.315,34,1.013,40,0.034,41,0.32,44,2.325,49,2.662,70,0.003,71,0.003,111,2.862,148,2.89,154,4.38,155,4.774,159,1.61,183,1.899,184,6.204,185,1.875,186,5.5,187,2.623,188,7.418,189,8.099,190,5.048,191,5.5,192,7.783,193,5.782,194,3.801,195,5.5,196,5.5,197,5.5,198,2.623,199,2.722,200,2.722,201,3.79,202,3.056,203,6.288,204,4.957,205,5.5,206,3.79,207,4.957,208,3.942,209,2.233,210,5.112,211,4.6,212,2.41,213,5.5,214,2.45,215,1.999,216,5.5,217,5.5,218,2.968,219,5.5,220,5.5,221,5.5]],["title/modules/AccountModule.html",[134,1.606,222,3.929]],["body/modules/AccountModule.html",[3,0.036,4,0.036,5,0.032,19,0.004,29,0.342,34,1.066,40,0.036,41,0.337,70,0.003,71,0.003,134,2.35,136,2.421,137,3.364,141,3.476,142,2.621,143,2.621,145,3.476,146,4.034,184,7.203,185,2.618,203,7.896,204,5.217,222,7.942,223,5.217,224,5.217,225,5.217,226,5.217,227,6.312,228,6.523,229,5.792,230,5.788,231,3.661,232,5.788,233,3.332,234,2.578,235,4.56,236,4.841,237,4.56,238,4.56,239,5.217,240,5.788]],["title/classes/AccountRepository.html",[41,0.305,238,4.132]],["body/classes/AccountRepository.html",[3,0.048,4,0.048,5,0.043,19,0.004,29,0.31,40,0.048,41,0.45,70,0.003,71,0.003,148,4.062,181,2.313,182,2.312,238,7.256,241,0.811,242,7.729,243,4.455,244,4.15,245,7.729,246,7.729]],["title/injectables/AccountService.html",[32,1.517,203,3.929]],["body/injectables/AccountService.html",[3,0.014,4,0.014,5,0.012,7,0.201,8,1.181,9,4.198,11,1.606,16,0.809,18,2.442,19,0.004,20,2.329,21,0.899,22,2.413,27,2.449,29,0.285,32,1.077,34,0.41,40,0.014,41,0.13,43,3.349,44,2.874,49,2.274,50,1.146,51,0.706,56,3.944,60,4.107,61,4.202,63,4.199,64,3.716,70,0.001,71,0.001,72,0.931,77,3.796,148,3.55,151,0.546,153,4.305,154,4.615,155,5.334,157,4.351,158,1.644,172,2.167,174,2.006,189,3.356,203,2.789,208,4.477,209,0.904,210,1.534,215,2.04,218,2.246,234,0.991,238,4.422,239,2.006,247,2.006,248,4.801,249,3.723,250,3.356,251,3.723,252,3.723,253,5.612,254,4.801,255,5.059,256,3.723,257,2.225,258,4.615,259,4.769,260,3.937,261,3.937,262,3.723,263,3.723,264,3.723,265,2.225,266,3.303,267,3.723,268,2.225,269,3.723,270,2.225,271,3.723,272,2.225,273,3.723,274,2.225,275,2.225,276,2.225,277,2.225,278,2.225,279,3.723,280,2.225,281,3.596,282,3.429,283,1.314,284,1.195,285,1.314,286,1.861,287,2.332,288,1.48,289,2.566,290,1.432,291,1.753,292,1.861,293,1.534,294,2.789,295,1.48,296,1.595,297,4.655,298,1.432,299,2.225,300,6.246,301,3.917,302,2.225,303,1.595,304,4.801,305,4.204,306,4.015,307,6.246,308,6.246,309,2.225,310,2.225,311,2.225,312,2.225,313,1.917,314,1.667,315,2.669,316,2.225,317,2.225,318,4.839,319,3.723,320,2.225,321,2.225,322,2.476,323,4.204,324,4.204,325,3.192,326,2.225,327,3.723,328,3.723,329,3.723,330,2.225,331,2.006,332,3.723,333,3.356,334,2.225,335,2.476,336,3.723,337,3.782,338,2.225,339,2.225,340,1.861,341,2.225,342,1.999,343,3.723,344,2.225,345,2.476,346,2.006,347,1.861,348,3.723,349,3.114,350,1.861,351,2.225,352,1.861,353,2.006,354,2.225,355,2.225,356,1.861,357,2.225]],["title/controllers/ActivitiesController.html",[183,1.811,358,4.387]],["body/controllers/ActivitiesController.html",[3,0.021,4,0.021,5,0.019,7,0.308,8,1.664,16,0.9,18,2.935,19,0.004,20,2.8,21,1.203,22,2.9,27,2.892,29,0.304,34,0.628,40,0.021,41,0.199,49,2.927,70,0.002,71,0.002,108,1.451,111,1.162,158,1.752,159,1.771,183,1.177,185,1.162,187,1.626,190,4.037,193,6.595,194,2.897,198,2.503,199,1.687,200,1.687,201,2.349,209,1.384,212,1.494,214,1.518,215,1.239,218,3.278,358,4.388,359,3.408,360,2.349,361,4.729,362,4.729,363,4.388,364,4.388,365,4.729,366,3.275,367,3.275,368,3.777,369,3.072,370,6.732,371,3.408,372,3.408,373,3.072,374,3.408,375,3.408,376,2.85,377,5.114,378,3.408,379,3.408,380,3.072,381,4.484,382,3.408,383,3.408,384,4.729,385,3.072,386,5.114,387,3.408,388,3.408,389,3.072,390,6.137,391,3.408,392,3.408,393,2.127,394,3.616,395,3.408,396,2.127,397,3.761,398,3.408,399,2.127,400,6.942,401,3.761,402,3.408,403,2.127,404,2.553,405,2.349,406,4.792,407,3.072,408,5.66,409,2.553,410,2.685,411,2.685,412,3.072,413,2.685,414,4.388,415,3.408,416,6.488,417,3.072,418,3.072,419,3.408,420,5.811,421,3.072,422,3.408,423,3.408,424,3.072,425,3.408,426,3.408,427,3.408,428,3.408,429,3.408,430,3.408,431,3.408,432,3.408,433,2.349,434,3.408,435,3.408,436,2.443,437,3.408,438,2.443,439,3.408,440,2.443,441,3.408]],["title/modules/ActivitiesModule.html",[134,1.606,442,3.929]],["body/modules/ActivitiesModule.html",[3,0.036,4,0.036,5,0.032,19,0.004,29,0.349,34,1.057,40,0.036,41,0.334,70,0.003,71,0.003,77,2.789,134,2.337,136,2.401,137,3.346,141,3.457,142,2.599,143,2.599,145,3.457,185,2.603,231,3.641,233,3.305,234,2.557,358,7.174,406,7.33,407,5.174,442,7.768,443,5.174,444,5.174,445,5.174,446,7.015,447,6.298,448,5.74,449,5.74,450,6.014,451,5.174,452,8.24,453,6.014,454,5.174,455,3.956,456,6.014,457,5.174,458,6.014,459,5.174,460,3.956,461,5.74,462,4.522,463,4.801]],["title/injectables/ActivitiesService.html",[32,1.517,406,3.929]],["body/injectables/ActivitiesService.html",[3,0.017,4,0.017,5,0.015,7,0.25,8,1.41,9,3.768,11,1.918,16,0.866,18,2.819,19,0.004,20,2.688,21,1.156,22,2.785,27,2.72,29,0.335,32,1.286,34,0.819,40,0.017,41,0.161,43,3.508,44,2.918,51,2.813,56,1.394,70,0.002,71,0.002,72,1.155,77,1.342,106,4.561,108,1.23,158,1.359,172,2.404,181,0.826,190,3.135,209,1.121,212,1.21,215,1.616,218,2.233,234,1.23,243,1.251,266,3.229,282,1.516,283,1.631,285,1.631,290,1.777,294,2.069,295,1.837,296,1.98,301,3.283,361,4.007,362,4.007,364,3.718,365,4.007,366,2.775,367,2.775,368,2.625,369,2.489,370,5.646,373,2.489,377,4.376,380,2.489,381,3.483,384,2.489,385,2.489,386,3.992,389,2.489,390,4.791,393,1.724,396,1.724,399,1.724,400,5.523,406,3.33,408,5.039,409,2.069,410,2.176,411,2.176,412,2.489,413,2.176,414,3.718,450,6.205,451,2.489,452,5.765,453,6.205,454,2.489,455,3.064,456,6.205,457,2.489,458,6.205,459,2.489,460,3.064,464,2.762,465,4.446,466,2.489,467,5.369,468,5.646,469,5.068,470,2.762,471,2.762,472,2.762,473,4.446,474,2.762,475,2.762,476,2.762,477,2.762,478,2.762,479,2.762,480,2.762,481,2.762,482,2.176,483,2.762,484,2.176,485,2.069,486,2.176,487,1.903,488,2.489,489,3.777,490,1.903,491,2.489,492,1.903,493,2.489,494,1.903,495,2.489,496,2.762,497,2.762,498,2.762,499,2.762,500,1.903,501,2.176,502,2.176,503,2.176,504,1.155,505,2.762,506,1.138,507,2.762,508,6.396,509,7.01,510,6.319,511,6.396,512,6.319,513,5.58,514,2.762,515,5.58,516,4,517,5.58,518,4.446]],["title/classes/Activity.html",[41,0.305,519,3.097]],["body/classes/Activity.html",[3,0.03,4,0.03,5,0.027,7,0.438,16,0.966,19,0.004,21,1.398,29,0.163,40,0.03,41,0.282,70,0.002,71,0.002,151,0.996,157,5.791,158,2.013,159,1.9,181,1.448,241,0.508,467,3.469,504,3.993,506,3.933,516,6.842,519,4.012,520,4.84,521,6.842,522,6.842,523,7.52,524,6.842,525,10.634,526,4.84,527,4.84,528,5.163,529,4.84,530,4.84,531,4.84,532,4.84,533,4.84,534,4.84,535,4.84,536,6.793,537,4.84,538,8.511,539,4.84,540,7.075,541,4.84,542,4.84,543,4.84]],["title/classes/Activity-1.html",[41,0.254,519,2.579,544,2.811]],["body/classes/Activity-1.html",[3,0.026,4,0.026,5,0.023,7,0.382,16,0.998,19,0.004,21,1.379,29,0.269,40,0.026,41,0.246,50,4.114,70,0.002,71,0.002,103,2.251,151,0.902,152,3.666,157,4.41,158,1.934,159,1.963,160,4.772,172,3.074,175,5.109,176,2.558,181,1.262,182,1.545,218,2.463,241,0.442,290,2.714,485,5.445,504,3.04,506,2.995,516,5.21,519,3.635,521,5.21,522,4.412,523,5.727,524,4.412,528,3.734,545,4.217,546,5.727,547,3.406,548,4.41,549,7.269,550,3.903,551,4.849,552,6.296,553,4.217,554,4.217,555,4.217,556,4.217,557,4.217,558,4.217,559,4.217,560,5.21,561,4.611,562,4.217,563,4.217,564,4.217,565,4.217,566,4.217,567,2.804,568,4.834,569,3.322,570,2.714,571,3.322,572,3.023,573,3.322,574,2.804,575,3.159,576,4.412]],["title/classes/AddBankAccountDTO.html",[41,0.305,192,4.132]],["body/classes/AddBankAccountDTO.html",[3,0.044,4,0.044,5,0.039,7,0.632,16,0.845,19,0.004,21,1.153,29,0.235,40,0.044,41,0.504,70,0.003,71,0.003,151,1.269,154,5.557,155,6.056,158,1.907,159,1.661,192,6.821,206,6.486,241,0.733,577,9.411,578,6.983,579,4.753,580,6.983,581,6.983,582,2.915,583,2.949,584,2.113]],["title/entities/Admin.html",[147,1.811,585,3.182]],["body/entities/Admin.html",[3,0.045,4,0.045,5,0.039,7,0.645,16,0.695,19,0.004,21,0.949,29,0.319,40,0.045,41,0.415,51,2.78,70,0.003,71,0.003,88,5.107,105,5.959,147,3.027,149,3.227,151,1.285,152,4.096,159,1.367,160,4.3,181,2.132,182,1.789,585,5.318,586,7.125,587,6.545,588,8.559,589,7.125]],["title/controllers/AdminController.html",[183,1.811,590,4.387]],["body/controllers/AdminController.html",[3,0.031,4,0.031,5,0.027,7,0.448,8,2.19,16,0.839,18,2.242,19,0.004,20,2.139,22,2.216,27,2.694,29,0.323,34,0.912,40,0.031,41,0.289,49,2.969,70,0.003,71,0.003,111,1.689,152,3.9,159,1.65,183,1.711,185,1.689,187,2.363,194,2.243,198,2.363,199,2.452,200,2.452,208,3.551,210,3.414,214,2.207,215,1.801,218,2.763,261,2.72,293,3.414,585,3.005,590,5.775,591,4.954,592,6.224,593,7.75,594,7.75,595,6.224,596,4.465,597,4.954,598,4.954,599,6.224,600,4.954,601,4.954,602,4.954,603,4.954,604,4.465,605,4.954,606,4.954,607,2.243,608,4.143,609,4.465,610,3.414,611,3.005,612,3.414,613,3.414,614,4.143,615,3.711,616,5.954,617,4.465,618,4.954,619,4.954,620,4.954,621,4.954,622,4.954,623,4.954,624,4.954,625,4.954,626,4.954,627,4.954,628,6.648,629,7.949,630,4.954,631,6.905,632,4.954,633,4.954,634,4.954,635,4.954,636,4.954,637,4.954]],["title/modules/AdminModule.html",[134,1.606,638,3.929]],["body/modules/AdminModule.html",[3,0.034,4,0.034,5,0.03,19,0.004,29,0.348,34,0.989,40,0.034,41,0.313,70,0.003,71,0.003,134,2.235,136,2.247,137,3.2,141,3.306,142,2.433,143,2.433,145,3.306,185,2.49,227,6.177,229,5.669,231,3.483,233,3.093,234,2.393,235,4.233,237,4.233,447,6.177,462,4.233,519,3.173,590,6.937,616,7.191,617,4.843,638,8.033,639,4.843,640,4.843,641,4.843,642,6.881,643,6.177,644,6.616,645,5.373,646,5.373,647,4.233,648,4.843,649,5.373,650,4.843,651,5.373]],["title/classes/AdminRepository.html",[41,0.305,652,4.132]],["body/classes/AdminRepository.html",[3,0.038,4,0.038,5,0.034,7,0.551,8,2.517,16,0.861,18,2.867,19,0.004,20,2.735,21,1.176,22,2.833,27,2.767,29,0.267,40,0.038,41,0.355,49,2.8,70,0.003,71,0.003,158,1.928,172,2.833,181,1.822,182,1.993,218,3.176,241,0.639,243,3.999,244,3.27,506,3.27,585,3.695,652,6.253,653,6.091,654,6.639,655,6.253,656,7.154,657,6.639,658,6.091,659,6.253,660,6.091,661,7.154,662,6.091,663,5.108,664,6.091,665,6.091,666,6.614]],["title/injectables/AdminService.html",[32,1.517,616,3.929]],["body/injectables/AdminService.html",[3,0.022,4,0.022,5,0.019,7,0.312,8,1.68,9,4.195,11,2.286,16,0.761,18,2.094,19,0.004,20,1.998,21,0.706,22,2.069,27,2.267,29,0.325,32,1.533,34,0.636,40,0.022,41,0.201,43,3.819,44,2.687,49,2.719,56,3.651,60,3.802,61,4.299,63,3.451,70,0.002,71,0.002,72,1.444,77,2.574,157,2.095,158,1.25,181,1.033,215,3.117,218,2.581,234,1.538,243,3.276,258,5.518,261,4.708,266,3.332,285,2.039,291,2.72,293,2.38,301,4.129,313,2.728,314,2.587,315,2.475,335,5.703,345,2.296,467,2.475,469,5.518,482,2.72,519,2.039,585,3.912,593,6.52,594,6.52,595,4.777,604,4.777,613,2.38,614,2.888,615,2.587,616,3.97,650,3.112,667,3.453,668,5.3,669,3.453,670,5.703,671,6.147,672,3.453,673,5.3,674,5.3,675,3.453,676,3.453,677,3.453,678,3.453,679,3.453,680,3.799,681,3.112,682,4.175,683,4.831,684,3.112,685,2.888,686,3.453,687,3.453,688,3.453,689,4.777,690,3.453,691,4.777,692,3.453,693,5.3,694,3.453,695,5.813,696,3.453,697,5.813,698,3.453,699,5.3,700,2.222,701,3.453,702,3.112,703,3.453,704,3.453,705,3.453,706,3.453,707,5.3]],["title/entities/AirtimeActivity.html",[147,1.811,487,3.615]],["body/entities/AirtimeActivity.html",[3,0.037,4,0.037,5,0.033,7,0.534,16,0.848,19,0.004,21,1.313,29,0.323,40,0.037,41,0.344,51,3.046,70,0.003,71,0.003,103,2.975,104,2.264,106,5.26,107,3.485,147,2.685,149,2.673,151,1.14,159,1.668,160,3.521,165,4.369,180,4.886,181,1.766,182,1.482,360,4.068,487,5.359,489,3.485,519,4.592,708,7.282,709,4.65,710,6.514,711,3.398,712,3.398,713,4.65,714,7.775,715,4.65,716,6.503,717,4.65,718,4.65,719,2.145,720,5.902]],["title/classes/AirtimeActivityRepository.html",[41,0.305,450,4.132]],["body/classes/AirtimeActivityRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.308,40,0.048,41,0.447,70,0.003,71,0.003,181,2.296,182,2.302,241,0.805,243,4.441,244,4.12,450,7.224,487,5.288,488,6.916,489,4.531,721,7.673,722,6.045,723,7.673]],["title/entities/Announcement.html",[147,1.811,724,3.929]],["body/entities/Announcement.html",[3,0.036,4,0.036,5,0.032,7,0.517,16,0.927,19,0.004,21,1.265,29,0.288,40,0.036,41,0.333,50,3.916,70,0.003,71,0.003,147,2.626,149,2.585,151,1.115,152,4.608,158,1.964,159,1.823,160,4.645,175,4.379,176,3.463,181,1.708,182,1.433,548,5.189,561,4.277,576,4.092,711,3.287,712,3.287,719,2.075,724,5.698,725,5.709,726,7.71,727,8.554,728,3.81,729,6.739,730,5.709,731,5.709,732,6.407,733,5.709,734,5.709,735,5.709,736,4.092,737,4.277,738,5.709]],["title/controllers/AnnouncementController.html",[183,1.811,739,4.387]],["body/controllers/AnnouncementController.html",[3,0.026,4,0.026,5,0.023,7,0.373,8,1.921,16,0.772,18,2.568,19,0.004,20,2.45,21,1.212,22,2.538,27,2.479,29,0.314,34,0.76,40,0.026,41,0.24,44,1.898,49,2.508,51,1.308,63,1.968,64,1.9,70,0.002,71,0.002,108,1.676,111,1.407,152,3.412,158,0.8,159,1.517,183,1.425,185,1.407,187,1.968,193,5.421,194,3.582,198,4.018,199,2.042,200,2.042,209,1.675,212,1.808,214,1.838,215,1.5,218,1.651,282,3.325,283,2.436,313,3.118,322,2.743,420,3.09,433,2.843,610,2.843,611,2.503,612,2.843,724,3.09,736,4.342,737,3.09,739,5.066,740,3.718,741,5.46,742,4.537,743,5.46,744,4.125,745,5.669,746,4.125,747,4.125,748,8.391,749,4.125,750,4.125,751,4.125,752,6.231,753,3.25,754,4.125,755,4.125,756,4.125,757,4.125,758,6.057,759,4.125,760,3.718,761,4.125,762,2.957,763,3.25,764,2.743,765,5.377,766,3.718,767,5.066,768,3.25,769,6.003,770,6.003,771,4.125,772,4.125,773,6.47,774,3.718,775,3.718,776,4.125,777,4.125,778,3.718,779,4.125,780,4.125,781,4.125,782,4.125,783,4.125,784,4.125,785,4.125,786,4.125,787,4.125,788,4.125,789,4.125,790,4.125,791,4.125]],["title/modules/AnnouncementModule.html",[134,1.606,792,3.929]],["body/modules/AnnouncementModule.html",[3,0.042,4,0.042,5,0.037,19,0.004,29,0.343,34,1.241,40,0.042,41,0.392,70,0.003,71,0.003,134,2.592,136,2.817,137,3.71,141,3.834,142,3.05,143,3.05,145,3.834,185,2.887,231,3.213,233,3.878,234,3,739,7.744,765,7.652,766,6.072,792,7.652,793,6.072,794,6.072,795,6.736,796,6.736,797,5.307,798,6.072,799,6.072,800,5.634,801,6.736]],["title/classes/AnnouncementQueryDto.html",[41,0.305,752,4.132]],["body/classes/AnnouncementQueryDto.html",[3,0.043,4,0.043,5,0.038,7,0.626,16,0.675,19,0.004,21,1.305,29,0.289,40,0.054,41,0.546,70,0.003,71,0.003,151,1.262,152,3.712,158,1.668,159,1.326,241,0.725,582,2.902,583,3.072,584,2.092,728,3.079,729,5.447,732,7.018,737,5.179,745,4.956,752,6.779,802,7.756,803,5.782,804,4.316,805,6.914,806,4.032]],["title/classes/AnnouncementReository.html",[41,0.305,797,4.132]],["body/classes/AnnouncementReository.html",[3,0.048,4,0.048,5,0.043,19,0.004,29,0.31,40,0.048,41,0.45,70,0.003,71,0.003,181,2.313,182,2.312,241,0.811,243,4.455,244,4.15,724,5.79,797,7.256,807,7.729,808,7.729,809,7.729]],["title/injectables/AnnouncementService.html",[32,1.517,765,3.929]],["body/injectables/AnnouncementService.html",[3,0.025,4,0.025,5,0.022,7,0.355,8,1.851,9,3.994,11,2.518,16,0.844,18,2.68,19,0.004,20,2.556,21,1.225,22,2.648,27,2.419,29,0.309,32,1.688,34,0.723,40,0.025,41,0.229,43,3.439,44,2.185,49,2.448,56,2.946,60,3.068,61,3.75,63,2.785,64,1.808,70,0.002,71,0.002,72,1.642,77,4.351,108,1.615,151,0.856,158,1.351,209,1.593,212,1.72,215,2.534,234,1.748,266,2.689,285,2.318,301,3.383,313,3.589,314,2.94,315,2.813,325,5.488,345,3.882,506,3.691,548,2.381,700,3.757,724,4.373,726,3.538,732,5.783,736,4.185,737,2.94,741,5.262,742,4.373,743,5.262,745,5.534,764,2.61,765,4.373,767,4.883,768,3.092,769,3.283,770,3.283,797,6.082,798,3.538,799,8.074,800,3.283,810,3.538,811,3.925,812,5.838,813,5.838,814,5.838,815,3.925,816,5.838,817,3.925,818,5.838,819,3.925,820,5.838,821,3.925,822,3.925,823,3.925,824,3.925,825,5.838,826,5.838,827,5.838,828,3.925,829,5.838,830,3.925,831,3.925,832,3.925]],["title/interfaces/ApiSuccessResponse.html",[833,2.336,834,4.387]],["body/interfaces/ApiSuccessResponse.html",[3,0.047,4,0.047,5,0.042,7,0.684,19,0.004,21,1.21,40,0.047,70,0.003,71,0.003,77,4.912,151,1.333,158,1.889,313,5.206,833,3.368,834,7.603,835,5.958,836,7.562,837,8.152]],["title/modules/AppModule.html",[134,1.606,838,4.132]],["body/modules/AppModule.html",[1,3.674,3,0.018,4,0.018,5,0.016,19,0.004,29,0.352,34,0.54,35,2.31,40,0.018,41,0.171,50,2.401,70,0.002,71,0.002,134,1.428,135,5.514,136,1.226,137,2.044,141,2.112,142,1.328,143,1.328,145,1.328,156,1.778,222,5.762,227,4.95,228,5.115,229,4.542,231,2.224,260,1.609,284,1.574,403,2.911,405,2.02,442,5.762,446,5.514,447,4.95,638,5.762,642,5.514,643,4.95,644,5.301,792,5.762,838,8.535,839,2.642,840,2.642,841,5.762,842,5.762,843,5.514,844,5.762,845,5.762,846,5.762,847,5.514,848,5.514,849,5.514,850,5.762,851,5.514,852,5.762,853,5.514,854,2.932,855,2.452,856,2.932,857,2.932,858,2.31,859,2.452,860,2.932,861,2.932,862,2.932,863,2.932,864,2.932,865,2.932,866,2.642,867,2.932,868,2.932,869,2.932,870,2.932,871,2.932,872,2.932,873,2.932,874,2.932,875,2.932,876,3.674,877,4.663,878,2.101,879,2.101,880,2.642,881,4.203,882,5.806,883,2.932,884,2.932,885,2.932,886,2.932,887,2.932,888,2.932,889,2.452,890,2.932,891,2.932,892,2.932,893,2.31,894,2.932,895,2.932,896,4.663,897,2.932,898,2.932,899,3.674,900,2.932,901,2.932,902,8.626,903,2.932,904,2.932,905,2.932,906,2.932,907,2.932,908,2.932,909,2.642,910,2.642,911,2.932,912,2.932,913,2.932,914,2.452,915,2.932,916,2.932,917,1.778,918,2.932,919,2.642,920,2.932,921,2.932,922,2.932,923,2.101,924,4.663,925,4.663]],["title/classes/Auth.html",[41,0.305,611,3.182]],["body/classes/Auth.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,611,5.79,926,8.214]],["title/controllers/AuthController.html",[183,1.811,927,4.387]],["body/controllers/AuthController.html",[3,0.032,4,0.032,5,0.028,7,0.455,8,2.211,9,3.995,16,0.781,18,2.601,19,0.004,20,2.481,21,0.669,22,2.57,27,2.51,29,0.324,34,0.925,40,0.032,41,0.293,44,2.51,49,2.54,70,0.003,71,0.003,77,3.388,152,3.455,159,1.537,183,1.735,185,1.714,187,2.397,193,6.053,194,2.276,198,3.327,201,3.463,202,2.07,214,2.238,215,1.827,266,3.212,301,2.202,403,3.137,404,3.764,405,4.806,420,3.764,506,2.873,610,3.463,611,4.231,612,3.463,917,3.048,927,5.833,928,5.025,929,6.286,930,6.286,931,6.286,932,5.025,933,5.025,934,5.025,935,5.025,936,5.025,937,5.025,938,5.025,939,8.225,940,6.974,941,5.025,942,4.203,943,4.529,944,4.203,945,4.529,946,5.52,947,4.529,948,5.025,949,5.025,950,5.025,951,6.974,952,5.025,953,5.025,954,5.025,955,5.025,956,5.025,957,5.025,958,5.025,959,4.999,960,5.025]],["title/modules/AuthModule.html",[134,1.606,841,3.929]],["body/modules/AuthModule.html",[3,0.035,4,0.035,5,0.031,9,2.354,19,0.004,29,0.343,34,1.021,40,0.035,41,0.323,70,0.003,71,0.003,134,2.283,136,2.318,137,3.268,141,3.377,142,2.51,143,2.51,145,3.377,185,2.543,229,5.721,231,4.02,260,4.949,284,2.976,841,7.844,858,4.367,859,6.237,927,7.049,946,6.677,947,4.996,961,4.996,962,4.996,963,5.543,964,7.633,965,7.633,966,5.543,967,3.82,968,5.543,969,7.457,970,3.973,971,5.543,972,4.636,973,5.543,974,5.543,975,5.543,976,3.567,977,4.996,978,4.996,979,4.996,980,5.543,981,5.543,982,5.543]],["title/injectables/AuthService.html",[32,1.517,946,3.615]],["body/injectables/AuthService.html",[3,0.021,4,0.021,5,0.019,7,0.304,8,1.645,9,4.086,11,2.238,16,0.752,18,2.502,19,0.004,20,2.387,21,1.026,22,2.473,27,2.234,29,0.259,32,1.5,34,0.619,40,0.021,41,0.196,43,2.311,44,2.748,49,2.692,51,3.051,56,3.889,60,4.05,61,4.466,63,4.183,64,2.919,70,0.002,71,0.002,72,1.405,77,4.26,87,2.408,88,2.408,118,6.569,119,2.646,124,2.646,148,2.727,158,1.865,172,2.288,215,1.221,261,4.472,266,3.284,282,3.48,283,1.984,301,3.57,313,2.671,315,2.408,322,2.234,345,3.45,506,3.356,585,2.038,778,4.676,917,4.941,929,4.676,930,4.676,946,3.576,959,5.839,972,2.809,983,3.359,984,5.188,985,5.188,986,3.359,987,8.491,988,3.359,989,5.188,990,3.359,991,5.188,992,3.359,993,5.188,994,3.359,995,5.188,996,3.359,997,2.809,998,3.886,999,2.809,1000,3.886,1001,3.359,1002,3.359,1003,3.359,1004,3.359,1005,3.359,1006,3.359,1007,4.676,1008,4.676,1009,5.188,1010,4.676,1011,5.188,1012,3.359,1013,3.028,1014,3.359,1015,2.809,1016,3.359,1017,3.359]],["title/classes/AuthorizeDepositData.html",[41,0.305,1018,4.132]],["body/classes/AuthorizeDepositData.html",[3,0.034,4,0.034,5,0.03,7,0.485,16,0.974,19,0.004,21,1.33,29,0.278,40,0.046,41,0.482,70,0.003,71,0.003,151,1.069,158,1.985,159,1.916,182,2.079,241,0.562,287,3.541,504,3.049,506,3.003,568,6.526,582,2.566,583,2.596,584,1.622,1018,5.743,1019,4.83,1020,7.057,1021,6.127,1022,6.096,1023,6.096,1024,6.096,1025,6.096,1026,3.521,1027,5.359,1028,4.83,1029,4.83,1030,4.83,1031,4.83,1032,4.222,1033,4.83,1034,4.83,1035,4.83,1036,3.841,1037,5.743,1038,5.46,1039,4.482,1040,4.222]],["title/classes/AuthorizeDepositDto.html",[41,0.305,1041,4.132]],["body/classes/AuthorizeDepositDto.html",[3,0.033,4,0.033,5,0.029,7,0.472,16,0.994,19,0.004,21,1.356,29,0.24,40,0.033,41,0.417,70,0.003,71,0.003,151,1.049,158,2.01,159,1.954,182,1.796,241,0.547,287,3.475,504,2.992,506,2.947,568,6.598,579,3.926,582,2.529,583,2.559,584,1.578,959,5.853,1018,6.923,1020,6.714,1021,4.929,1022,5.982,1023,5.982,1024,5.982,1025,5.982,1026,3.495,1028,4.698,1029,4.698,1030,4.698,1031,4.698,1032,4.107,1033,4.698,1034,4.698,1035,4.698,1041,5.635,1042,8.165,1043,4.107,1044,7.36,1045,5.212,1046,5.212,1047,5.212,1048,4.698]],["title/classes/Bank.html",[41,0.305,206,3.615]],["body/classes/Bank.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,206,6.578,241,0.862,1049,8.214]],["title/controllers/BankController.html",[183,1.811,1050,4.387]],["body/controllers/BankController.html",[3,0.043,4,0.043,5,0.038,19,0.004,29,0.33,34,1.273,40,0.043,41,0.403,49,2.192,70,0.003,71,0.003,111,2.358,148,3.634,183,2.387,185,2.358,187,3.298,194,3.131,198,3.298,199,3.422,200,3.422,206,4.765,214,3.079,215,2.513,335,6.23,742,5.179,855,5.782,942,5.782,1050,7.197,1051,6.914,1052,6.232,1053,6.232,1054,4.765,1055,5.93,1056,5.447,1057,5.782,1058,6.914,1059,6.914,1060,6.914,1061,6.914,1062,6.914,1063,6.914]],["title/modules/BankModule.html",[134,1.606,642,3.759]],["body/modules/BankModule.html",[3,0.038,4,0.038,5,0.033,19,0.004,29,0.333,34,1.106,40,0.038,41,0.35,70,0.003,71,0.003,134,2.407,136,2.511,137,3.446,141,3.561,142,2.719,143,2.719,145,3.561,146,4.132,185,2.681,227,6.377,228,6.59,231,3.751,235,4.73,236,5.021,335,7.048,642,7.638,643,6.377,647,4.73,1050,7.334,1053,5.411,1064,5.411,1065,5.411,1066,5.411,1067,6.003,1068,6.003,1069,6.003]],["title/injectables/BankService.html",[32,1.517,335,3.488]],["body/injectables/BankService.html",[3,0.025,4,0.025,5,0.022,7,0.365,8,1.891,9,3.941,11,2.572,16,0.764,18,1.311,19,0.004,20,1.251,21,0.794,22,1.296,27,1.869,29,0.312,32,1.724,34,0.744,40,0.025,41,0.235,43,4.026,44,2.453,49,2.248,56,3.009,60,3.134,61,3.803,63,3.734,64,2.746,70,0.002,71,0.002,72,1.689,77,4.057,151,0.874,215,2.577,258,5.817,259,6.012,260,2.217,266,2.746,281,5.31,282,3.892,283,2.385,284,2.168,289,4.109,290,2.599,291,3.181,292,3.377,297,5.395,298,2.599,301,3.66,323,5.31,324,5.864,325,3.965,335,3.965,484,3.181,546,6.167,548,3.617,670,6.012,685,3.377,878,5.986,879,2.895,976,2.599,1070,3.64,1071,6.389,1072,7.527,1073,7.056,1074,3.377,1075,5.963,1076,4.698,1077,4.038,1078,4.038,1079,3.181,1080,3.181,1081,3.025,1082,3.181,1083,7.527,1084,3.64,1085,4.038,1086,3.64,1087,3.64,1088,4.987,1089,5.374,1090,5.374,1091,3.64,1092,3.64,1093,3.64,1094,3.64,1095,3.64,1096,3.64,1097,3.64,1098,3.64,1099,4.038,1100,4.038,1101,4.038,1102,3.64,1103,4.038]],["title/classes/BouquetChangeDto.html",[41,0.305,1104,4.132]],["body/classes/BouquetChangeDto.html",[3,0.035,4,0.035,5,0.031,7,0.507,16,0.968,19,0.004,21,1.322,29,0.188,40,0.035,41,0.437,70,0.003,71,0.003,151,1.101,158,2.033,159,1.904,172,2.41,241,0.588,547,3.971,550,4.549,579,4.123,582,3.075,583,3.111,584,1.696,806,3.52,1026,3.04,1104,5.917,1105,9.093,1106,5.602,1107,4.362,1108,4.116,1109,6.074,1110,4.276,1111,6.675,1112,5.602,1113,5.602,1114,3.713,1115,5.602,1116,2.827,1117,5.602,1118,5.602,1119,5.602,1120,5.602]],["title/classes/BouquetRenewalDto.html",[41,0.305,1121,4.132]],["body/classes/BouquetRenewalDto.html",[3,0.035,4,0.035,5,0.031,7,0.504,16,0.967,19,0.004,21,1.32,29,0.187,40,0.035,41,0.436,70,0.003,71,0.003,151,1.097,158,2.031,159,1.902,172,2.401,241,0.585,504,3.534,547,3.96,550,4.537,579,4.109,582,3.121,583,3.106,584,1.687,806,3.96,1026,3.032,1105,9.082,1107,4.35,1108,4.105,1110,4.264,1111,6.657,1114,3.28,1116,2.812,1121,5.896,1122,5.573,1123,4.174,1124,5.573,1125,5.573,1126,5.573,1127,5.573,1128,5.573,1129,5.573,1130,5.573]],["title/classes/BuyAirtimeDto.html",[41,0.305,377,3.274]],["body/classes/BuyAirtimeDto.html",[3,0.035,4,0.035,5,0.03,7,0.499,16,0.965,19,0.004,21,1.371,29,0.185,40,0.035,41,0.433,70,0.003,71,0.003,103,2.603,151,1.09,158,2.028,159,1.897,172,2.384,241,0.579,377,4.638,504,3.516,547,3.939,582,3.114,583,3.098,584,1.669,806,4.633,1108,4.083,1110,4.242,1114,3.257,1116,2.783,1131,7.53,1132,3.953,1133,5.246,1134,3.667,1135,4.97,1136,6.043,1137,4.612,1138,4.97,1139,4.97,1140,4.97,1141,4.97,1142,4.97]],["title/classes/BuyAirtimeDto-1.html",[41,0.254,377,2.726,544,2.811]],["body/classes/BuyAirtimeDto-1.html",[3,0.035,4,0.035,5,0.03,7,0.499,16,0.965,19,0.004,21,1.371,29,0.185,40,0.035,41,0.433,70,0.003,71,0.003,103,2.603,151,1.09,158,2.028,159,1.897,172,2.384,241,0.579,377,4.638,504,3.516,547,3.939,582,3.114,583,3.098,584,1.669,806,4.633,1108,4.083,1110,4.242,1114,3.257,1116,2.783,1132,3.953,1133,5.246,1134,3.667,1135,4.97,1136,6.043,1137,4.612,1138,4.97,1139,4.97,1140,4.97,1141,4.97,1142,4.97,1143,10.052]],["title/classes/BuyAirtimeDto-2.html",[41,0.254,377,2.726,1144,3.653]],["body/classes/BuyAirtimeDto-2.html",[3,0.04,4,0.04,5,0.035,7,0.574,16,0.927,19,0.004,21,1.265,29,0.213,40,0.04,41,0.475,70,0.003,71,0.003,151,1.195,158,1.95,159,1.823,172,2.616,241,0.666,377,5.089,504,3.767,547,4.221,579,4.476,582,3.045,583,2.978,584,1.921,806,3.821,1108,4.375,1110,4.545,1114,3.573,1116,3.204,1132,4.551,1137,5.31,1145,7.046,1146,5.722,1147,6.349,1148,6.349,1149,6.349]],["title/classes/BuyDSTVGOTV.html",[41,0.305,370,3.759]],["body/classes/BuyDSTVGOTV.html",[3,0.03,4,0.03,5,0.027,7,0.435,16,0.978,19,0.004,21,1.372,29,0.162,40,0.03,41,0.394,70,0.002,71,0.002,103,2.422,151,0.991,158,2.052,159,1.922,172,2.169,241,0.504,370,4.846,411,7.981,547,3.665,550,4.199,582,3.062,583,3.14,584,1.455,804,3,806,4.633,1026,2.425,1107,4.026,1108,3.799,1109,5.606,1110,3.946,1111,6.161,1114,2.963,1116,2.425,1131,7.588,1133,4.881,1136,5.754,1150,4.332,1151,4.332,1152,4.332,1153,4.332,1154,4.332,1155,3.787,1156,4.332,1157,4.332,1158,4.332,1159,4.332,1160,4.332,1161,4.332]],["title/classes/BuyDSTVGOTV-1.html",[41,0.254,370,3.131,544,2.811]],["body/classes/BuyDSTVGOTV-1.html",[3,0.03,4,0.03,5,0.027,7,0.435,16,0.978,19,0.004,21,1.372,29,0.162,40,0.03,41,0.394,70,0.002,71,0.002,103,2.422,151,0.991,158,2.052,159,1.922,172,2.169,241,0.504,370,4.846,411,7.981,547,3.665,550,4.199,582,3.062,583,3.14,584,1.455,804,3,806,4.633,1026,2.425,1107,4.026,1108,3.799,1109,5.606,1110,3.946,1111,6.161,1114,2.963,1116,2.425,1133,4.881,1136,5.754,1150,4.332,1151,4.332,1152,4.332,1153,4.332,1154,4.332,1155,3.787,1156,4.332,1157,4.332,1158,4.332,1159,4.332,1160,4.332,1161,4.332,1162,9.131]],["title/classes/BuyDataDto.html",[41,0.305,386,3.274]],["body/classes/BuyDataDto.html",[3,0.033,4,0.033,5,0.029,7,0.48,16,0.972,19,0.004,21,1.373,29,0.178,40,0.033,41,0.422,70,0.003,71,0.003,103,2.552,151,1.061,158,2.06,159,1.911,241,0.557,386,4.518,547,3.861,550,4.424,582,3.086,583,3.166,584,1.605,804,3.311,806,4.669,1026,1.903,1107,4.242,1108,4.003,1110,4.158,1114,2.325,1116,2.677,1131,7.568,1133,5.143,1136,5.963,1163,4.437,1164,4.781,1165,4.437,1166,4.781,1167,4.781,1168,4.781,1169,4.781,1170,4.781,1171,4.781]],["title/classes/BuyDataDto-1.html",[41,0.254,386,2.726,544,2.811]],["body/classes/BuyDataDto-1.html",[3,0.033,4,0.033,5,0.029,7,0.48,16,0.972,19,0.004,21,1.373,29,0.178,40,0.033,41,0.422,70,0.003,71,0.003,103,2.552,151,1.061,158,2.06,159,1.911,241,0.557,386,4.518,547,3.861,550,4.424,582,3.086,583,3.166,584,1.605,804,3.311,806,4.669,1026,1.903,1107,4.242,1108,4.003,1110,4.158,1114,2.325,1116,2.677,1133,5.143,1136,5.963,1163,4.437,1164,4.781,1165,4.437,1166,4.781,1167,4.781,1168,4.781,1169,4.781,1170,4.781,1171,4.781,1172,10.104]],["title/classes/BuyDataDto-2.html",[41,0.254,386,2.726,1144,3.653]],["body/classes/BuyDataDto-2.html",[3,0.038,4,0.038,5,0.034,7,0.549,16,0.946,19,0.004,21,1.291,29,0.204,40,0.038,41,0.461,70,0.003,71,0.003,151,1.162,158,2.03,159,1.86,241,0.637,386,4.945,547,4.132,550,4.734,579,4.349,582,3.002,583,3.115,584,1.838,804,3.791,806,4.132,1026,2.179,1107,4.539,1108,4.283,1110,4.45,1114,2.661,1116,3.065,1145,7.126,1163,5.079,1165,5.079,1173,6.073,1174,6.073,1175,6.073,1176,6.073]],["title/classes/BuyElectricityDto.html",[41,0.305,381,3.274]],["body/classes/BuyElectricityDto.html",[3,0.036,4,0.036,5,0.032,7,0.525,16,0.958,19,0.004,21,1.307,29,0.195,40,0.036,41,0.448,70,0.003,71,0.003,151,1.127,158,2.014,159,1.883,172,2.468,241,0.609,381,4.8,504,3.607,547,4.041,550,4.63,579,4.734,582,3.102,583,3.076,584,1.757,806,4.041,1026,2.082,1107,4.44,1108,4.19,1110,4.352,1114,3.37,1116,2.929,1123,4.348,1131,7.502,1177,4.854,1178,5.231,1179,5.231,1180,5.231,1181,4.854,1182,5.231,1183,5.231]],["title/classes/BuyElectricityDto-1.html",[41,0.254,381,2.726,544,2.811]],["body/classes/BuyElectricityDto-1.html",[3,0.033,4,0.033,5,0.029,7,0.48,16,0.972,19,0.004,21,1.373,29,0.178,40,0.033,41,0.422,70,0.003,71,0.003,103,2.552,151,1.061,158,2.06,159,1.911,241,0.557,381,4.518,547,3.861,550,4.424,582,3.086,583,3.166,584,1.605,804,3.311,806,4.669,1026,1.903,1107,4.242,1108,4.003,1110,4.158,1114,2.325,1116,2.677,1133,5.143,1136,5.963,1177,4.437,1181,4.437,1184,10.104,1185,5.305,1186,5.305,1187,5.305,1188,5.305,1189,5.305,1190,5.305,1191,5.305]],["title/classes/BuyElectricityDto-2.html",[41,0.254,381,2.726,1144,3.653]],["body/classes/BuyElectricityDto-2.html",[3,0.036,4,0.036,5,0.032,7,0.525,16,0.958,19,0.004,21,1.307,29,0.195,40,0.036,41,0.448,70,0.003,71,0.003,151,1.127,158,2.014,159,1.883,172,2.468,241,0.609,381,4.8,504,3.607,547,4.041,550,4.63,579,4.734,582,3.102,583,3.076,584,1.757,806,4.041,1026,2.082,1107,4.44,1108,4.19,1110,4.352,1114,3.37,1116,2.929,1123,4.348,1145,7.178,1177,4.854,1178,5.231,1179,5.231,1180,5.231,1181,4.854,1182,5.231,1183,5.231]],["title/classes/BuyShowmaxDto.html",[41,0.305,1192,4.132]],["body/classes/BuyShowmaxDto.html",[3,0.036,4,0.036,5,0.032,7,0.525,16,0.958,19,0.004,21,1.307,29,0.195,40,0.036,41,0.448,70,0.003,71,0.003,151,1.127,158,2.014,159,1.883,172,2.468,241,0.609,504,3.607,547,4.041,550,4.63,579,4.734,582,3.102,583,3.076,584,1.757,806,4.041,1026,2.082,1107,4.44,1108,4.19,1110,4.352,1114,3.37,1116,2.929,1123,4.348,1145,7.178,1192,6.058,1193,4.854,1194,5.804,1195,5.804,1196,5.804,1197,4.854,1198,5.804,1199,5.804]],["title/classes/BuyShowmaxStartimesDto.html",[41,0.305,1200,4.132]],["body/classes/BuyShowmaxStartimesDto.html",[3,0.031,4,0.031,5,0.028,7,0.451,16,0.973,19,0.004,21,1.37,29,0.168,40,0.031,41,0.404,70,0.003,71,0.003,103,2.471,151,1.017,158,2.044,159,1.913,172,2.227,241,0.523,547,3.739,550,4.284,582,3.041,583,3.124,584,1.51,804,3.114,806,4.672,1026,1.79,1107,4.108,1108,3.876,1109,5.719,1110,4.026,1114,3.041,1116,2.518,1131,7.563,1133,4.98,1136,5.834,1155,3.931,1193,4.173,1197,4.173,1200,5.467,1201,9.1,1202,4.497,1203,4.497,1204,4.497,1205,4.497,1206,4.497,1207,4.497,1208,4.497,1209,4.497]],["title/classes/BuyShowmaxStartimesDto-1.html",[41,0.254,544,2.811,1200,3.441]],["body/classes/BuyShowmaxStartimesDto-1.html",[3,0.031,4,0.031,5,0.028,7,0.451,16,0.973,19,0.004,21,1.37,29,0.168,40,0.031,41,0.404,70,0.003,71,0.003,103,2.471,151,1.017,158,2.044,159,1.913,172,2.227,241,0.523,547,3.739,550,4.284,582,3.041,583,3.124,584,1.51,804,3.114,806,4.672,1026,1.79,1107,4.108,1108,3.876,1109,5.719,1110,4.026,1114,3.041,1116,2.518,1133,4.98,1136,5.834,1155,3.931,1162,9.1,1193,4.173,1197,4.173,1200,5.467,1201,9.1,1202,4.497,1203,4.497,1204,4.497,1205,4.497,1206,4.497,1207,4.497,1208,4.497,1209,4.497]],["title/classes/BuyStartimesDto.html",[41,0.305,1210,4.132]],["body/classes/BuyStartimesDto.html",[3,0.038,4,0.038,5,0.034,7,0.549,16,0.946,19,0.004,21,1.291,29,0.204,40,0.038,41,0.461,70,0.003,71,0.003,151,1.162,158,2.03,159,1.86,241,0.637,547,4.132,550,4.734,579,4.841,582,3.079,583,3.115,584,1.838,806,3.713,1026,2.179,1107,4.539,1108,4.283,1110,4.45,1114,2.661,1116,3.065,1145,7.126,1210,6.241,1211,6.073,1212,6.073,1213,6.073,1214,6.073,1215,6.073,1216,6.073]],["title/classes/BuyWAECDto.html",[41,0.305,1217,4.132]],["body/classes/BuyWAECDto.html",[3,0.038,4,0.038,5,0.033,7,0.548,16,0.945,19,0.004,21,1.289,29,0.204,40,0.038,41,0.461,70,0.003,71,0.003,151,1.159,158,1.989,159,1.858,172,2.537,241,0.635,504,3.683,547,4.126,550,4.728,579,4.341,582,3.077,583,3.035,584,1.833,806,4.126,1026,2.173,1108,4.277,1110,4.443,1114,3.465,1116,3.056,1123,4.536,1145,7.12,1217,6.23,1218,6.055,1219,6.055,1220,6.055,1221,6.055,1222,6.055,1223,6.055]],["title/classes/ConfirmPhoneNumberDto.html",[41,0.305,1224,4.387]],["body/classes/ConfirmPhoneNumberDto.html",[3,0.048,4,0.048,5,0.043,7,0.697,16,0.751,19,0.004,21,1.025,40,0.048,41,0.449,70,0.003,71,0.003,151,1.347,158,1.781,241,0.808,1108,4.464,1224,7.686,1225,9.19,1226,6.441,1227,6.769,1228,6.941]],["title/classes/CreateAccountDto.html",[41,0.305,208,3.759]],["body/classes/CreateAccountDto.html",[3,0.038,4,0.038,5,0.034,7,0.549,16,0.988,19,0.004,29,0.204,40,0.038,41,0.461,70,0.003,71,0.003,151,1.162,153,6.077,154,5.207,155,5.674,157,5.349,159,1.943,208,5.679,241,0.637,287,4.283,333,7.948,335,5.864,582,3.18,583,3.173,584,1.838,609,9.255,1026,3.567,1114,3.472,1134,4.039,1229,4.353,1230,4.784,1231,4.784,1232,5.079,1233,4.784,1234,5.079,1235,5.079,1236,4.784]],["title/classes/CreateActivityDto.html",[41,0.305,390,3.929]],["body/classes/CreateActivityDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,390,7.134,1237,8.182,1238,7.374]],["title/classes/CreateAirtimeDto.html",[41,0.305,1239,4.387]],["body/classes/CreateAirtimeDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1132,5.865,1239,7.965,1240,8.182]],["title/classes/CreateAnnouncementDto.html",[41,0.305,745,3.759]],["body/classes/CreateAnnouncementDto.html",[3,0.041,4,0.041,5,0.036,7,0.596,16,0.814,19,0.004,21,1.22,29,0.281,40,0.052,41,0.534,70,0.003,71,0.003,151,1.224,152,4.381,158,1.868,159,1.602,241,0.691,579,4.583,582,2.838,583,3.019,584,1.994,728,4.082,729,7.22,732,6.253,737,4.935,745,5.984,752,5.19,802,8.26,803,5.51,806,3.912,1241,6.588,1242,6.588]],["title/classes/CreateAuthDto.html",[41,0.305,1243,4.387]],["body/classes/CreateAuthDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1243,7.965,1244,8.182,1245,7.374]],["title/classes/CreateBillDto.html",[41,0.305,1246,4.387]],["body/classes/CreateBillDto.html",[3,0.038,4,0.038,5,0.034,7,0.553,16,0.948,19,0.004,21,1.369,29,0.205,40,0.038,41,0.463,70,0.003,71,0.003,103,2.739,151,1.166,158,1.993,159,1.863,172,2.552,241,0.641,342,4.747,504,3.698,582,3.084,583,3.043,584,1.849,1026,3.36,1114,3.485,1133,5.519,1134,4.062,1246,6.651,1247,8.327,1248,6.108,1249,6.108,1250,6.108,1251,6.108,1252,6.108,1253,6.108]],["title/classes/CreateElectricitybillDto.html",[41,0.305,1254,4.387]],["body/classes/CreateElectricitybillDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1254,7.965,1255,8.182,1256,7.374]],["title/classes/CreateEmailDto.html",[41,0.305,1257,3.929]],["body/classes/CreateEmailDto.html",[3,0.039,4,0.039,5,0.034,7,0.564,16,0.954,19,0.004,21,1.301,29,0.21,40,0.039,41,0.469,70,0.003,71,0.003,151,1.182,158,2.039,159,1.875,241,0.654,579,5.366,582,3.101,583,3.137,584,1.887,728,3.978,1257,6.037,1258,10.012,1259,4.912,1260,8.049,1261,8.049,1262,5.62,1263,6.235,1264,6.235,1265,6.235,1266,5.62]],["title/classes/CreateHealthDto.html",[41,0.305,1267,4.387]],["body/classes/CreateHealthDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1267,7.965,1268,8.182,1269,7.374]],["title/classes/CreateLogDto.html",[41,0.305,1270,3.929]],["body/classes/CreateLogDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1270,7.134,1271,8.182,1272,7.374]],["title/classes/CreateMerchantApiDto.html",[41,0.305,1273,3.929]],["body/classes/CreateMerchantApiDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.473,70,0.003,71,0.003,156,4.925,241,0.852,1273,7.102,1274,5.399,1275,8.118,1276,7.317]],["title/classes/CreateMobiledatumDto.html",[41,0.305,1277,4.387]],["body/classes/CreateMobiledatumDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1277,7.965,1278,8.182,1279,7.374]],["title/classes/CreateMonnifyDto.html",[41,0.305,1280,4.132]],["body/classes/CreateMonnifyDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1280,7.503,1281,7.374,1282,7.374]],["title/classes/CreateNodemailerDto.html",[41,0.305,1283,4.387]],["body/classes/CreateNodemailerDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1283,7.965,1284,8.182,1285,7.374]],["title/classes/CreatePaystackDto.html",[41,0.305,1286,3.929]],["body/classes/CreatePaystackDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1286,7.134,1287,7.374,1288,7.374]],["title/classes/CreateReceiveTransferPermission.html",[41,0.305,1289,2.502]],["body/classes/CreateReceiveTransferPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.999,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.326,109,1.532,110,3.775,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,2.424,1290,1.56,1291,4.656,1292,2.263,1293,3.27,1294,3.27,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56]],["title/classes/CreateReferralDto.html",[41,0.305,1319,3.929]],["body/classes/CreateReferralDto.html",[3,0.044,4,0.044,5,0.039,7,0.638,16,0.85,19,0.004,21,1.16,29,0.237,40,0.044,41,0.507,70,0.003,71,0.003,151,1.277,159,1.672,172,3.168,241,0.74,582,2.928,584,2.135,1114,4.143,1146,7.853,1319,6.526,1320,9.453,1321,6.358,1322,7.907,1323,7.907,1324,7.053,1325,7.053]],["title/classes/CreateReservedAccountDto.html",[41,0.305,1326,3.615]],["body/classes/CreateReservedAccountDto.html",[3,0.041,4,0.041,5,0.036,7,0.594,16,0.939,19,0.004,29,0.221,40,0.041,41,0.485,50,3.381,70,0.003,71,0.003,151,1.222,159,1.846,241,0.689,318,5.889,506,3.77,582,3.076,583,2.868,584,1.988,1021,6.307,1026,2.989,1229,4.708,1230,5.174,1231,5.174,1233,5.174,1236,5.174,1247,8.307,1326,5.742,1327,7.44,1328,7.654,1329,5.919,1330,5.174,1331,6.564,1332,5.972]],["title/classes/CreateReservedAccountDto-1.html",[41,0.254,544,2.811,1326,3.01]],["body/classes/CreateReservedAccountDto-1.html",[3,0.037,4,0.037,5,0.033,7,0.537,16,0.982,19,0.004,29,0.2,40,0.037,41,0.455,70,0.003,71,0.003,151,1.144,153,6.009,159,1.932,241,0.623,318,5.611,346,7.859,349,7.293,350,7.293,352,7.293,353,7.859,582,3.165,583,3.156,584,1.796,1026,3.544,1229,4.255,1230,4.676,1231,4.676,1232,4.964,1233,4.676,1234,4.964,1235,4.964,1236,4.676,1281,9.21,1326,5.379,1327,7.654,1330,4.676,1331,6.149]],["title/classes/CreateRoleDto.html",[41,0.305,1333,4.387]],["body/classes/CreateRoleDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1333,7.965,1334,8.182,1335,7.374]],["title/classes/CreateSendTransferPermission.html",[41,0.305,1304,2.502]],["body/classes/CreateSendTransferPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.475,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.326,109,1.532,110,3.775,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,2.424,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1336,3.27,1337,3.27]],["title/classes/CreateSettingDto.html",[41,0.305,680,3.759]],["body/classes/CreateSettingDto.html",[3,0.04,4,0.04,5,0.035,7,0.576,16,0.88,19,0.004,20,2.794,21,1.267,29,0.32,40,0.04,41,0.525,70,0.003,71,0.003,151,1.198,159,1.73,241,0.668,290,4.098,485,6.756,582,2.947,583,2.827,584,1.927,680,5.856,681,8.576,1026,2.931,1081,4.77,1292,4.017,1330,5.017,1331,6.436,1338,5.74,1339,8.13,1340,6.119,1341,6.368,1342,7.106,1343,6.368,1344,6.368,1345,4.77]],["title/classes/CreateTransactionDto.html",[41,0.305,1346,3.759]],["body/classes/CreateTransactionDto.html",[3,0.041,4,0.041,5,0.036,7,0.591,16,0.89,19,0.004,21,1.215,29,0.219,40,0.041,41,0.483,70,0.003,71,0.003,151,1.217,158,1.996,159,1.751,241,0.685,342,3.504,504,3.816,506,3.76,582,3.071,583,3.009,584,1.975,1026,2.977,1114,2.86,1329,5.883,1332,5.949,1346,5.949,1347,8.031,1348,5.459,1349,9.124,1350,5.883,1351,6.526,1352,6.526]],["title/classes/CreateTransferDto.html",[41,0.305,1353,3.929]],["body/classes/CreateTransferDto.html",[3,0.045,4,0.045,5,0.04,7,0.654,16,0.932,19,0.004,21,1.272,40,0.045,41,0.421,70,0.003,71,0.003,151,1.296,158,1.93,172,2.837,241,0.758,504,3.996,1353,6.622,1354,9.955,1355,6.041,1356,8.611,1357,7.991,1358,7.223,1359,7.223,1360,7.223]],["title/classes/CreateTransferRecipientDto.html",[41,0.305,1361,4.132]],["body/classes/CreateTransferRecipientDto.html",[3,0.038,4,0.038,5,0.033,7,0.545,16,0.943,19,0.004,20,2.72,21,1.365,29,0.202,40,0.038,41,0.459,70,0.003,71,0.003,101,3.968,151,1.155,158,2.027,159,1.855,241,0.632,287,4.266,579,5.307,582,3.072,583,3.108,584,1.822,1287,8.939,1361,6.206,1362,6.021,1363,6.577,1364,7.914,1365,6.021,1366,6.021,1367,6.021,1368,6.021,1369,6.021]],["title/classes/CreateTransferRequestPermission.html",[41,0.305,1312,2.502]],["body/classes/CreateTransferRequestPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.999,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.326,109,1.532,110,3.775,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,2.424,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1370,3.27,1371,3.27]],["title/classes/CreateTvsubscriptionDto.html",[41,0.305,1372,4.387]],["body/classes/CreateTvsubscriptionDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1372,7.965,1373,8.182,1374,7.374]],["title/classes/CreateTwillioDto.html",[41,0.305,1375,4.132]],["body/classes/CreateTwillioDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1375,7.503,1376,8.182,1377,7.374]],["title/classes/CreateUserDto.html",[41,0.305,613,3.615]],["body/classes/CreateUserDto.html",[3,0.036,4,0.036,5,0.032,7,0.521,16,0.956,19,0.004,21,1.304,29,0.194,40,0.036,41,0.445,70,0.003,71,0.003,151,1.121,158,2.041,159,1.879,241,0.604,506,3.539,582,3.033,583,3.132,584,1.742,613,5.271,614,8.359,663,5.527,804,3.593,806,3.584,917,5.21,1026,3.082,1032,4.535,1332,5.482,1378,5.188,1379,6.767,1380,6.767,1381,6.767,1382,5.756,1383,5.756,1384,5.756,1385,5.756,1386,5.756,1387,7.648,1388,5.756,1389,5.756,1390,5.188,1391,5.756]],["title/classes/CreateUserPermission.html",[41,0.305,1299,2.502]],["body/classes/CreateUserPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.495,104,1.254,108,2.326,109,1.532,110,3.775,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,2.424,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1392,3.27,1393,3.27]],["title/classes/CreateVirtualAccountDto.html",[41,0.305,1394,4.387]],["body/classes/CreateVirtualAccountDto.html",[3,0.035,4,0.035,5,0.031,7,0.502,16,0.995,19,0.004,29,0.186,40,0.035,41,0.434,50,2.854,70,0.003,71,0.003,151,1.093,153,5.808,159,1.956,241,0.582,318,5.423,349,7.049,350,7.049,352,7.049,582,3.192,583,3.154,584,1.678,1021,5.808,1026,3.552,1229,3.973,1230,4.367,1231,4.367,1232,4.636,1233,4.367,1234,4.636,1235,4.636,1236,4.367,1328,7.049,1330,5.875,1331,6.64,1347,8.618,1394,6.237,1395,9.288,1396,8.428,1397,8.428,1398,5.543,1399,5.543]],["title/classes/CreateVtpassDto.html",[41,0.305,1400,3.929]],["body/classes/CreateVtpassDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1400,7.134,1401,8.182,1402,7.374]],["title/classes/CreateWalletDto.html",[41,0.305,1403,3.929]],["body/classes/CreateWalletDto.html",[3,0.051,4,0.051,5,0.045,19,0.004,40,0.051,41,0.477,70,0.003,71,0.003,241,0.858,1403,7.134,1404,8.182,1405,7.374]],["title/classes/CreateWithdrawalPermission.html",[41,0.305,1316,2.458]],["body/classes/CreateWithdrawalPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.414,92,1.481,95,1.368,96,3.283,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.326,109,1.532,110,3.775,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,2.381,1317,1.56,1318,1.56,1406,3.27,1407,3.27]],["title/injectables/CustomLogger.html",[32,1.517,1408,4.132]],["body/injectables/CustomLogger.html",[3,0.024,4,0.024,5,0.021,7,0.34,8,1.794,11,2.44,16,0.862,18,2.765,19,0.004,20,2.637,21,1.176,22,2.732,26,8.348,27,2.54,29,0.272,32,1.636,34,0.693,40,0.024,41,0.219,43,3.028,44,1.179,61,4.136,70,0.002,71,0.002,72,1.574,151,0.829,158,2.09,182,1.42,215,2.471,260,4.849,284,2.02,313,5.166,587,5.586,719,1.368,1408,5.355,1409,9.088,1410,3.392,1411,6.798,1412,8.833,1413,5.657,1414,4.865,1415,5.657,1416,5.099,1417,3.763,1418,6.323,1419,7.56,1420,6.103,1421,5.657,1422,5.657,1423,3.763,1424,7.121,1425,6.385,1426,5.657,1427,7.56,1428,3.763,1429,5.657,1430,3.763,1431,5.657,1432,3.763,1433,5.657,1434,3.392,1435,3.763,1436,3.763,1437,3.763,1438,3.392,1439,3.392,1440,3.763,1441,3.763,1442,3.392,1443,3.763,1444,3.763,1445,3.763,1446,3.763,1447,3.763,1448,3.763,1449,8.105,1450,3.763,1451,3.763,1452,5.657]],["title/entities/Customer.html",[103,1.624,147,1.811]],["body/entities/Customer.html",[3,0.016,4,0.016,5,0.014,7,0.229,16,0.938,19,0.004,21,1.28,29,0.318,40,0.016,41,0.241,50,2.131,51,1.312,70,0.002,71,0.002,86,1.894,88,1.813,91,3.082,92,1.145,93,4.615,94,1.894,95,1.731,96,2.889,97,1.126,98,3.593,99,1.145,100,1.145,101,2.429,103,1.627,106,3.831,107,1.493,126,2.279,147,1.429,148,3.52,149,1.145,151,0.607,152,4.598,156,5.669,158,1.177,159,1.845,160,3.033,165,1.421,180,2.325,181,0.757,182,0.635,202,2.502,305,5.017,340,4.394,455,1.743,460,1.743,487,4.615,489,3.585,490,4.615,492,4.615,494,4.615,519,4.678,576,1.813,587,3.621,708,1.992,711,1.456,712,1.456,719,0.919,959,3.766,1274,1.682,1345,1.894,1381,4.139,1453,2.529,1454,4.394,1455,4.735,1456,5.254,1457,4.394,1458,5.254,1459,4.735,1460,7.591,1461,4.735,1462,5.254,1463,4.735,1464,4.394,1465,4.394,1466,4.394,1467,7.069,1468,4.139,1469,2.529,1470,7.921,1471,2.529,1472,2.529,1473,5.686,1474,3.461,1475,4.139,1476,2.529,1477,4.735,1478,2.529,1479,4.139,1480,2.529,1481,4.139,1482,2.529,1483,2.529,1484,2.279,1485,2.529,1486,4.139,1487,2.529,1488,4.139,1489,2.529,1490,2.529,1491,5.276,1492,4.139,1493,2.529,1494,4.139,1495,2.529,1496,4.139,1497,2.529,1498,4.139,1499,2.529,1500,2.529,1501,4.139,1502,2.529,1503,4.139,1504,2.529,1505,3.461,1506,2.115,1507,1.992,1508,1.992,1509,1.992,1510,2.279,1511,2.115,1512,7.178,1513,4.394,1514,2.115,1515,2.529]],["title/entities/CustomerKyc.html",[147,1.811,1473,3.929]],["body/entities/CustomerKyc.html",[3,0.026,4,0.026,5,0.023,7,0.375,16,0.946,19,0.004,21,1.308,29,0.296,40,0.026,41,0.354,50,5.118,51,2.281,70,0.002,71,0.002,103,2.823,147,2.098,149,1.876,151,0.891,152,4.615,157,4.364,158,1.927,159,1.86,160,4.45,172,1.949,175,3.497,176,2.513,181,1.239,182,1.04,318,4.63,548,4.364,561,6.321,574,2.754,576,6.322,711,3.497,712,2.384,719,2.208,923,4.355,1340,4.551,1345,3.103,1473,4.551,1474,3.464,1484,3.733,1505,5.081,1513,5.081,1516,9.828,1517,4.142,1518,7.194,1519,7.194,1520,7.194,1521,7.194,1522,6.484,1523,7.194,1524,4.142,1525,4.142,1526,4.142,1527,4.142,1528,4.142,1529,4.142,1530,4.142,1531,6.484,1532,4.142,1533,6.075,1534,4.142,1535,4.142,1536,3.733,1537,3.464,1538,4.142,1539,4.142]],["title/classes/CustomerKycRepository.html",[41,0.305,1540,4.132]],["body/classes/CustomerKycRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.308,40,0.048,41,0.447,70,0.003,71,0.003,181,2.296,182,2.302,241,0.805,243,4.441,244,4.12,1473,5.747,1514,6.417,1540,7.224,1541,7.673,1542,7.673,1543,6.916,1544,7.673]],["title/classes/CustomerRepository.html",[41,0.305,1545,4.132]],["body/classes/CustomerRepository.html",[3,0.034,4,0.034,5,0.03,7,0.498,8,2.352,16,0.877,18,2.918,19,0.004,20,2.783,21,1.196,22,2.883,27,2.816,29,0.249,40,0.034,41,0.32,49,2.849,70,0.003,71,0.003,103,1.703,158,1.973,172,2.693,181,1.645,182,1.862,218,3.359,241,0.577,243,3.801,244,2.953,303,5.317,506,3.459,654,6.204,655,5.844,656,6.686,657,6.204,659,5.844,661,6.686,663,4.774,666,6.731,1381,5.844,1465,6.204,1545,5.844,1546,5.5,1547,7.418,1548,5.5,1549,5.5,1550,5.5,1551,7.418,1552,5.5,1553,4.957,1554,5.5]],["title/classes/DatabaseLogger.html",[41,0.305,1555,4.387]],["body/classes/DatabaseLogger.html",[3,0.049,4,0.022,5,0.019,7,0.313,8,1.683,16,0.864,18,3.35,19,0.004,20,2.658,21,1.142,22,2.753,27,2.689,29,0.178,34,0.637,40,0.022,41,0.201,42,2.444,43,3.671,49,2.879,56,1.745,60,1.818,61,3.136,64,2.444,70,0.002,71,0.002,151,0.778,158,1.991,172,2.072,181,1.035,215,2.347,241,0.363,266,3.335,313,4.02,500,7.191,587,5.382,719,1.929,748,7.75,1292,1.541,1410,3.117,1414,5.522,1416,6.526,1424,7.405,1425,6.152,1434,3.117,1555,5.399,1556,9.078,1557,6.456,1558,6.152,1559,5.306,1560,5.306,1561,6.456,1562,6.456,1563,5.306,1564,5.306,1565,5.306,1566,3.459,1567,3.459,1568,3.459,1569,5.306,1570,5.306,1571,3.459,1572,3.459,1573,3.459,1574,3.459,1575,3.459,1576,7.24,1577,5.306,1578,3.459,1579,5.306,1580,3.459,1581,3.459,1582,7.24,1583,3.459,1584,3.459,1585,3.459,1586,5.306,1587,3.459,1588,6.456,1589,3.459,1590,3.459,1591,3.459]],["title/modules/DatabaseModule.html",[134,1.606,842,3.929]],["body/modules/DatabaseModule.html",[3,0.029,4,0.029,5,0.025,19,0.004,21,0.608,29,0.361,34,0.841,40,0.029,41,0.266,50,4.269,64,2.103,70,0.002,71,0.002,91,2.647,92,2.067,93,4.493,94,3.42,95,2.726,96,2.812,97,2.034,98,2.857,99,2.067,100,2.067,103,2.019,104,1.751,106,3.29,107,2.696,134,1.996,136,1.91,148,3.426,149,2.067,156,3.954,164,5.136,177,3.819,178,4.115,231,3.109,233,2.628,234,2.034,260,4.552,284,2.451,455,3.147,460,3.147,487,4.493,489,4.897,490,4.493,492,4.493,494,4.493,585,3.954,708,3.597,842,4.883,859,5.452,899,3.597,914,3.819,917,2.77,923,3.273,976,2.938,977,4.115,1274,3.036,1414,4.195,1442,4.115,1491,4.195,1506,3.819,1507,3.597,1508,3.597,1509,3.597,1510,4.115,1511,3.819,1555,5.452,1558,5.136,1592,4.566,1593,4.566,1594,4.115,1595,4.883,1596,4.566,1597,4.566,1598,5.452,1599,4.493,1600,4.566,1601,4.115,1602,5.136,1603,4.566,1604,4.566,1605,4.115,1606,4.566,1607,4.566,1608,4.115,1609,4.566,1610,4.566,1611,4.566,1612,4.566,1613,4.566,1614,4.115,1615,4.115,1616,4.115,1617,4.115,1618,4.115,1619,4.115,1620,4.115,1621,4.566]],["title/classes/DeleteReceiveTransferPermission.html",[41,0.305,1310,2.502]],["body/classes/DeleteReceiveTransferPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.999,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.775,111,2.867,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,2.424,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1622,3.27,1623,3.27]],["title/classes/DeleteSendTransferPermission.html",[41,0.305,1306,2.502]],["body/classes/DeleteSendTransferPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.475,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.775,111,2.867,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,2.424,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1624,3.27,1625,3.27]],["title/classes/DeleteTransferRequestPermission.html",[41,0.305,1314,2.502]],["body/classes/DeleteTransferRequestPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.999,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.775,111,2.867,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,2.424,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1626,3.27,1627,3.27]],["title/classes/DeleteUserPermission.html",[41,0.305,1301,2.502]],["body/classes/DeleteUserPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.495,104,1.254,108,2.229,109,1.532,110,3.775,111,2.867,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,2.424,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1628,3.27,1629,3.27]],["title/classes/DeleteWithdrawalPermission.html",[41,0.305,1318,2.502]],["body/classes/DeleteWithdrawalPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.414,92,1.481,95,1.368,96,3.283,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.775,111,2.867,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,2.424,1630,3.27,1631,3.27]],["title/entities/Deposit.html",[147,1.811,1599,3.615]],["body/entities/Deposit.html",[3,0.037,4,0.037,5,0.033,7,0.54,16,0.853,19,0.004,21,1.317,29,0.324,40,0.037,41,0.348,51,2.773,70,0.003,71,0.003,89,3.401,103,3.123,104,2.29,106,5.27,107,3.525,147,2.705,149,2.703,151,1.149,159,1.678,160,3.547,165,4.401,180,4.913,181,1.786,182,1.499,711,3.436,712,3.436,719,2.17,1599,5.399,1632,5.969,1633,6.55,1634,5.969,1635,7.061,1636,5.969,1637,7.061,1638,5.969,1639,4.279,1640,5.38,1641,4.992]],["title/classes/DepositRepository.html",[41,0.305,1642,4.132]],["body/classes/DepositRepository.html",[3,0.043,4,0.043,5,0.038,7,0.626,8,2.729,16,0.675,18,2.245,19,0.004,20,2.141,21,0.92,22,2.218,27,2.167,29,0.315,40,0.043,41,0.403,49,2.192,70,0.003,71,0.003,91,2.807,158,1.816,181,2.069,182,2.16,241,0.725,243,4.243,244,3.712,342,4.62,666,5.179,1599,4.765,1642,6.779,1643,6.914,1644,7.756,1645,7.756,1646,6.914,1647,6.914,1648,5.782,1649,6.914]],["title/classes/EditReceiveTransferPermission.html",[41,0.305,1309,2.502]],["body/classes/EditReceiveTransferPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.999,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.94,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,2.424,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1650,3.27,1651,3.27]],["title/classes/EditSendTransferPermission.html",[41,0.305,1305,2.502]],["body/classes/EditSendTransferPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.475,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.94,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,2.424,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1652,3.27,1653,3.27]],["title/classes/EditTransferRequestPermission.html",[41,0.305,1313,2.502]],["body/classes/EditTransferRequestPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.999,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.94,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,2.424,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1654,3.27,1655,3.27]],["title/classes/EditUserPermission.html",[41,0.305,1300,2.458]],["body/classes/EditUserPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.271,92,1.481,95,1.368,96,3.283,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.495,104,1.254,108,2.229,109,1.532,110,3.94,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,2.381,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,1.56,1318,1.56,1656,3.27,1657,3.27]],["title/classes/EditWithdrawalPermission.html",[41,0.305,1317,2.502]],["body/classes/EditWithdrawalPermission.html",[3,0.021,4,0.021,5,0.018,7,0.296,16,0.496,19,0.004,29,0.3,34,0.602,36,2.381,37,4.735,39,1.532,40,0.064,41,0.59,42,4.692,44,1.953,51,1.037,70,0.002,71,0.002,83,2.381,84,2.301,85,1.56,89,1.272,90,1.532,91,3.414,92,1.481,95,1.368,96,3.283,97,1.456,98,3.913,99,1.481,100,1.481,101,2.812,102,1.56,103,2.357,104,1.254,108,2.229,109,1.532,110,3.94,111,2.747,112,3.775,115,2.381,151,0.745,202,1.347,241,0.343,607,1.481,719,1.847,728,4.579,833,1.456,1289,1.56,1290,1.56,1291,4.656,1292,2.263,1295,1.588,1296,2.424,1297,1.56,1298,1.532,1299,1.56,1300,1.532,1301,1.56,1302,1.56,1303,1.56,1304,1.56,1305,1.56,1306,1.56,1307,1.56,1308,1.56,1309,1.56,1310,1.56,1311,1.56,1312,1.56,1313,1.56,1314,1.56,1315,1.506,1316,1.532,1317,2.424,1318,1.56,1658,3.27,1659,3.27]],["title/entities/ElectricityBillActivity.html",[147,1.811,494,3.615]],["body/entities/ElectricityBillActivity.html",[3,0.037,4,0.037,5,0.032,7,0.528,16,0.844,19,0.004,21,1.309,29,0.322,40,0.037,41,0.34,51,3.035,70,0.003,71,0.003,103,2.964,104,2.239,106,5.249,107,3.446,147,2.665,149,2.643,151,1.132,159,1.659,160,3.495,165,4.337,180,4.859,181,1.746,182,1.465,360,4.022,455,6.342,489,3.446,494,5.319,519,4.558,709,4.598,710,6.478,711,3.36,712,3.36,713,4.598,715,4.598,716,6.455,717,4.598,718,4.598,719,2.121,1507,7.25,1660,7.718,1661,5.836]],["title/classes/ElectricityBillActivityRepository.html",[41,0.305,453,4.132]],["body/classes/ElectricityBillActivityRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.307,40,0.048,41,0.444,70,0.003,71,0.003,181,2.279,182,2.292,241,0.799,243,4.427,244,4.09,453,7.193,455,6.292,489,4.498,494,5.249,495,6.866,722,6.001,1662,7.617,1663,7.617]],["title/entities/Email.html",[147,1.811,506,2.161]],["body/entities/Email.html",[3,0.043,4,0.043,5,0.038,7,0.619,16,0.91,19,0.004,21,1.242,29,0.23,40,0.043,41,0.399,70,0.003,71,0.003,147,2.953,149,3.1,151,1.254,158,1.894,159,1.79,160,4.554,172,2.744,181,2.048,218,3.732,506,4.143,570,6.002,1664,6.846,1665,8.407,1666,6.846,1667,6.846,1668,6.846]],["title/controllers/EmailController.html",[183,1.811,1669,4.387]],["body/controllers/EmailController.html",[3,0.043,4,0.043,5,0.038,7,0.615,8,2.701,16,0.664,19,0.004,27,2.132,29,0.328,34,1.253,40,0.043,41,0.396,49,2.157,70,0.003,71,0.003,111,2.319,159,1.305,183,2.349,185,2.319,187,3.244,190,5.477,194,3.08,198,3.244,199,3.367,200,3.367,209,2.761,212,2.981,214,3.03,215,2.472,506,2.803,1257,5.095,1669,7.124,1670,6.802,1671,6.802,1672,6.666,1673,6.131,1674,6.106,1675,5.689,1676,6.802,1677,6.802]],["title/modules/EmailModule.html",[134,1.606,843,3.759]],["body/modules/EmailModule.html",[3,0.038,4,0.038,5,0.034,19,0.004,29,0.345,34,1.118,40,0.038,41,0.354,70,0.003,71,0.003,134,2.425,136,2.54,137,3.472,141,3.588,142,2.75,143,2.75,145,3.588,146,4.164,185,2.702,229,3.586,231,3.779,233,3.496,234,2.705,237,4.784,506,2.502,843,7.442,847,7.126,967,4.185,1669,7.375,1672,7.61,1673,5.474,1678,5.474,1679,6.073,1680,5.474,1681,5.474,1682,6.073,1683,6.073,1684,4.353,1685,5.474,1686,6.073,1687,5.474,1688,6.073]],["title/injectables/EmailService.html",[32,1.517,1672,3.759]],["body/injectables/EmailService.html",[3,0.023,4,0.023,5,0.02,7,0.329,8,1.747,9,4.268,11,2.376,16,0.82,18,2.592,19,0.004,20,2.472,21,0.886,22,2.561,27,2.501,29,0.31,32,1.593,34,0.669,40,0.023,41,0.212,43,2.453,44,2.501,49,2.355,56,2.78,60,2.895,61,3.607,63,3.807,64,3.065,70,0.002,71,0.002,72,1.519,77,2.676,158,1.29,181,1.087,190,4.172,209,1.475,215,1.32,234,1.618,243,3.363,261,1.994,266,3.42,282,3.024,283,2.145,285,2.145,293,2.503,295,2.416,296,2.604,301,4.114,313,1.87,322,4.425,347,4.607,500,6.015,506,4.072,728,1.618,967,2.503,976,2.338,1015,4.607,1227,6.469,1257,5.563,1260,3.274,1261,3.274,1418,3.038,1424,3.038,1665,3.274,1672,3.948,1674,2.604,1684,6.256,1685,3.274,1687,3.274,1689,3.632,1690,5.508,1691,5.997,1692,5.508,1693,5.508,1694,3.632,1695,3.632,1696,5.508,1697,5.508,1698,3.632,1699,3.632,1700,4.965,1701,3.632,1702,5.508,1703,3.632,1704,5.508,1705,3.632,1706,4.965,1707,3.632,1708,3.274,1709,3.632,1710,3.632,1711,5.508,1712,3.632,1713,3.274,1714,3.632,1715,4.965,1716,3.632,1717,3.632,1718,3.632,1719,3.274,1720,4.965,1721,3.632,1722,3.632,1723,3.632,1724,3.632,1725,3.632,1726,3.632,1727,3.632]],["title/classes/EntityContainer.html",[41,0.305,175,3.019]],["body/classes/EntityContainer.html",[3,0.043,4,0.043,5,0.037,7,0.613,16,0.906,19,0.004,21,1.236,29,0.228,40,0.043,41,0.395,70,0.003,71,0.003,151,1.246,152,4.006,159,1.782,172,2.728,175,4.893,181,2.028,218,3.716,241,0.711,522,6.656,524,6.656,528,5.906,567,6.175,570,5.976,572,6.656,575,5.079,1728,6.78,1729,6.78,1730,6.78,1731,6.78]],["title/classes/FWWithdrawalDto.html",[41,0.305,1732,4.132]],["body/classes/FWWithdrawalDto.html",[3,0.041,4,0.041,5,0.037,7,0.598,16,0.971,19,0.004,29,0.222,40,0.041,41,0.487,70,0.003,71,0.003,151,1.226,159,1.909,241,0.693,287,4.458,504,3.839,582,3.149,583,3.023,584,2,1026,3.293,1114,4.022,1134,5.563,1363,6.875,1732,6.59,1733,6.609,1734,6.875,1735,9.178,1736,6.609,1737,6.609,1738,6.609,1739,6.609,1740,6.609]],["title/classes/FinalizeWithdrawalDto.html",[41,0.305,1741,4.132]],["body/classes/FinalizeWithdrawalDto.html",[3,0.044,4,0.044,5,0.039,7,0.638,16,0.85,19,0.004,21,1.16,29,0.237,40,0.044,41,0.507,70,0.003,71,0.003,151,1.277,158,1.914,159,1.672,241,0.74,579,4.783,582,2.928,583,2.963,584,2.135,1741,6.864,1742,9.453,1743,5.899,1744,8.521,1745,9.453,1746,5.899,1747,5.899]],["title/classes/Flutterwave.html",[41,0.305,298,3.375]],["body/classes/Flutterwave.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,298,6.143,1748,8.214]],["title/controllers/FlutterwaveController.html",[183,1.811,1749,4.387]],["body/controllers/FlutterwaveController.html",[3,0.041,4,0.041,5,0.036,7,0.589,8,2.626,16,0.635,19,0.004,27,2.039,29,0.34,34,1.198,40,0.041,41,0.379,49,2.063,70,0.003,71,0.003,111,2.219,152,3.573,159,1.248,183,2.247,185,2.219,187,3.104,194,2.946,198,3.104,199,3.221,200,3.221,202,2.681,214,2.898,215,2.365,258,5.863,298,4.187,610,4.484,611,3.947,612,4.484,753,5.126,943,5.864,1020,4.484,1036,4.664,1037,6.525,1041,5.126,1749,6.927,1750,6.506,1751,9.591,1752,6.506,1753,5.864,1754,5.864,1755,6.506,1756,6.506]],["title/modules/FlutterwaveModule.html",[134,1.606,227,3.375]],["body/modules/FlutterwaveModule.html",[3,0.042,4,0.042,5,0.037,19,0.004,29,0.325,34,1.229,40,0.042,41,0.389,70,0.003,71,0.003,134,2.576,136,2.791,137,3.688,141,3.811,142,3.021,143,3.021,145,3.811,146,4.423,185,2.87,227,6.658,231,3.183,258,6.923,1749,7.71,1753,6.014,1757,6.014,1758,6.014,1759,6.014,1760,6.672,1761,6.672,1762,6.304,1763,4.047]],["title/injectables/FlutterwaveService.html",[32,1.517,258,3.375]],["body/injectables/FlutterwaveService.html",[3,0.011,4,0.011,5,0.01,7,0.157,8,0.952,9,3.925,11,1.296,16,0.713,18,1.293,19,0.004,20,1.233,21,0.893,22,1.277,27,1.247,29,0.299,32,0.869,34,0.319,40,0.011,41,0.101,43,3.966,44,3.025,49,2.792,56,2.009,60,2.092,61,2.866,63,4.147,64,3.889,70,0.001,71,0.001,72,0.723,77,1.459,101,1.202,148,1.578,151,0.44,154,1.021,155,1.933,158,1.685,172,1.277,194,3.183,202,0.713,209,1.219,210,1.192,215,0.629,218,1.202,258,1.933,260,3.239,266,1.833,282,4.636,284,0.929,287,1.459,288,1.15,294,3.561,295,1.15,296,1.24,298,3.059,301,3.944,325,3.161,337,1.363,342,3.602,345,4.213,700,1.113,762,1.24,764,1.15,998,1.296,1000,1.296,1020,2.743,1021,2.07,1036,2.153,1037,3.745,1038,2.982,1039,1.447,1040,3.745,1041,2.366,1048,1.559,1073,4.285,1246,3.329,1326,3.276,1327,1.296,1340,1.296,1363,1.296,1364,1.559,1754,1.559,1763,1.049,1764,1.73,1765,3.98,1766,3.98,1767,3.98,1768,3.329,1769,3.329,1770,3.329,1771,3.003,1772,1.296,1773,4.746,1774,3.003,1775,1.73,1776,3.003,1777,1.73,1778,3.003,1779,4.992,1780,1.73,1781,1.73,1782,1.73,1783,1.73,1784,1.73,1785,1.73,1786,1.296,1787,1.296,1788,1.73,1789,1.559,1790,1.73,1791,3.588,1792,2.707,1793,2.707,1794,2.707,1795,3.329,1796,1.73,1797,1.363,1798,3.976,1799,1.73,1800,1.73,1801,1.559,1802,3.329,1803,1.73,1804,1.447,1805,1.73,1806,1.73,1807,1.73,1808,1.73,1809,1.73,1810,7.062,1811,1.363,1812,1.363,1813,1.447,1814,1.73,1815,3.003,1816,1.73,1817,1.73,1818,1.73,1819,1.73,1820,1.73,1821,1.73,1822,6.325,1823,6.54,1824,3.003,1825,1.73,1826,6.54,1827,3.003,1828,3.003,1829,6.54,1830,7.482,1831,6.54,1832,6.54,1833,1.73,1834,1.73,1835,1.73,1836,3.003,1837,1.73,1838,1.559,1839,1.559,1840,1.559,1841,1.73,1842,1.73,1843,1.73,1844,6.278,1845,6.278,1846,1.73,1847,1.73,1848,1.73,1849,1.73,1850,1.73,1851,1.73,1852,1.73,1853,1.73,1854,1.73,1855,1.73,1856,3.003,1857,1.73,1858,3.003,1859,1.73,1860,1.73,1861,1.73,1862,1.73,1863,1.73,1864,1.73,1865,1.73,1866,1.73,1867,1.73,1868,1.73,1869,1.73,1870,1.559,1871,3.003,1872,1.73,1873,1.73,1874,1.73,1875,1.73,1876,1.73,1877,1.73,1878,1.73,1879,1.73,1880,1.73,1881,1.73,1882,1.73,1883,1.73,1884,1.73,1885,1.73,1886,1.73,1887,1.73,1888,1.73,1889,1.73]],["title/classes/Health.html",[41,0.305,1890,4.387]],["body/classes/Health.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,1890,7.983,1891,8.214]],["title/controllers/HealthController.html",[183,1.811,1892,4.387]],["body/controllers/HealthController.html",[3,0.036,4,0.036,5,0.032,7,0.524,8,2.434,11,2.497,16,0.565,19,0.004,27,1.814,29,0.258,34,1.066,40,0.036,41,0.337,43,4.085,49,1.835,70,0.003,71,0.003,159,1.11,183,1.999,185,1.974,187,2.761,719,2.104,1594,5.217,1890,6.42,1892,7.203,1893,5.788,1894,9.172,1895,5.788,1896,5.788,1897,8.612,1898,7.676,1899,8.612,1900,8.612,1901,8.612,1902,4.841,1903,5.788,1904,5.788,1905,5.788,1906,7.676,1907,4.841,1908,7.676,1909,7.676,1910,7.676,1911,5.788,1912,5.788,1913,7.676,1914,9.172,1915,7.676,1916,5.788,1917,5.788,1918,5.788,1919,5.788,1920,5.788,1921,5.788,1922,5.788,1923,4.841,1924,5.788,1925,5.788,1926,5.788,1927,5.788]],["title/modules/HealthModule.html",[134,1.606,844,3.929]],["body/modules/HealthModule.html",[3,0.047,4,0.047,5,0.042,19,0.004,29,0.327,34,1.388,40,0.047,41,0.439,70,0.003,71,0.003,134,2.777,136,3.152,145,3.412,185,3.093,231,3.594,844,6.794,1892,8.139,1902,6.302,1928,7.535,1929,7.535,1930,9.07]],["title/classes/InitializeWithdrawalDto.html",[41,0.305,1931,4.132]],["body/classes/InitializeWithdrawalDto.html",[3,0.04,4,0.06,5,0.035,7,0.578,16,0.929,19,0.004,21,1.268,29,0.215,40,0.04,41,0.477,70,0.003,71,0.003,151,1.2,158,1.953,159,1.828,172,2.626,241,0.67,504,3.778,582,3.05,583,2.985,584,1.933,1026,3.241,1114,3.587,1134,4.248,1743,5.342,1746,5.342,1747,5.342,1931,6.449,1932,9.848,1933,9.033,1934,8.142,1935,5.757,1936,5.757]],["title/classes/InitiateDepositDto.html",[41,0.305,1020,3.615]],["body/classes/InitiateDepositDto.html",[3,0.035,4,0.035,5,0.031,7,0.507,16,0.968,19,0.004,21,1.322,29,0.188,40,0.035,41,0.437,70,0.003,71,0.003,151,1.101,158,2.056,159,1.904,241,0.588,287,4.116,504,3.544,506,3.491,582,3.125,583,3.162,584,1.696,1020,5.176,1022,7.087,1023,7.087,1024,7.087,1025,7.087,1026,3.487,1032,4.414,1043,4.414,1332,5.384,1937,9.093,1938,4.686,1939,5.05,1940,4.686,1941,5.05,1942,5.602,1943,5.05,1944,5.602]],["title/classes/InitiateMNTransferDto.html",[41,0.305,1945,4.132]],["body/classes/InitiateMNTransferDto.html",[3,0.039,4,0.039,5,0.035,7,0.568,16,0.978,19,0.004,29,0.211,40,0.039,41,0.471,70,0.003,71,0.003,151,1.186,159,1.924,241,0.658,287,4.351,342,4.808,504,3.746,582,3.16,583,3.142,584,1.898,1026,3.514,1114,3.546,1134,4.171,1355,5.246,1945,6.374,1946,9.196,1947,8.956,1948,8.956,1949,7.49,1950,6.273,1951,6.273,1952,6.273,1953,6.273,1954,6.273,1955,6.273]],["title/classes/InitiateWithdrawalData.html",[41,0.305,1798,4.387]],["body/classes/InitiateWithdrawalData.html",[3,0.039,4,0.039,5,0.034,7,0.562,16,0.976,19,0.004,21,0.828,29,0.27,40,0.039,41,0.469,70,0.003,71,0.003,151,1.179,158,1.559,159,1.919,182,2.019,241,0.652,287,3.908,342,4.788,504,3.364,568,6.653,582,2.491,583,2.521,584,1.882,1026,3.589,1036,4.456,1363,6.026,1734,6.026,1779,8.215,1797,4.898,1798,6.728,1949,6.728,1956,6.217,1957,6.217,1958,6.217,1959,6.217,1960,6.217,1961,6.217,1962,6.217]],["title/classes/InitiateWithdrawalDto.html",[41,0.305,1779,4.132]],["body/classes/InitiateWithdrawalDto.html",[3,0.039,4,0.039,5,0.035,7,0.569,16,0.979,19,0.004,29,0.212,40,0.039,41,0.472,70,0.003,71,0.003,151,1.188,159,1.925,241,0.66,287,4.357,342,4.815,504,3.751,582,3.162,583,3.199,584,1.904,1026,3.601,1363,6.718,1734,6.718,1743,5.262,1746,5.262,1747,5.262,1779,6.386,1935,5.671,1936,5.671,1937,9.202,1949,7.501,1963,6.292,1964,6.292]],["title/injectables/JwtAuthGaurd.html",[32,1.517,403,3.274]],["body/injectables/JwtAuthGaurd.html",[3,0.039,4,0.039,5,0.034,7,0.558,8,2.536,10,7.209,11,2.658,12,5.554,13,8.995,16,0.78,18,2.597,19,0.004,20,2.477,21,1.065,22,2.566,23,6.689,24,7.86,26,4.855,27,1.931,29,0.316,32,2.313,34,1.135,35,4.855,40,0.039,41,0.359,44,1.931,47,5.554,49,2.536,50,3.172,70,0.003,71,0.003,72,2.577,182,1.547,214,2.745,403,4.992,404,6.652,611,3.738,612,4.247,970,4.417,1965,5.554,1966,6.162,1967,6.162,1968,5.554,1969,5.554,1970,6.162,1971,6.162,1972,5.154,1973,7.209,1974,6.162,1975,6.162,1976,5.554]],["title/injectables/JwtStrategy.html",[32,1.517,964,4.132]],["body/injectables/JwtStrategy.html",[3,0.033,4,0.033,5,0.029,7,0.48,8,2.295,9,3.5,11,3.122,16,0.706,18,2.351,19,0.004,20,2.242,21,0.964,22,2.323,27,1.662,29,0.322,32,2.093,34,0.977,40,0.033,41,0.309,43,3.224,44,2.582,49,2.807,51,3.032,70,0.003,71,0.003,72,2.219,87,3.803,118,6.94,119,4.179,124,4.179,182,1.332,260,5.25,261,5.373,266,2.443,284,2.848,301,3.172,345,4.814,923,3.803,964,5.703,970,3.803,979,4.781,997,4.437,1000,5.422,1007,4.781,1772,3.974,1972,4.437,1977,5.305,1978,6.525,1979,5.305,1980,7.239,1981,5.305,1982,4.781,1983,5.305,1984,4.781,1985,4.437,1986,4.781,1987,5.305,1988,4.781,1989,5.305,1990,5.305,1991,5.305,1992,5.305,1993,5.305,1994,5.305]],["title/injectables/LocalAuthGaurd.html",[32,1.517,944,4.387]],["body/injectables/LocalAuthGaurd.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.311,32,2.675,34,1.434,40,0.049,41,0.454,70,0.003,71,0.003,72,3.257,182,1.955,944,7.737,945,7.019,970,5.582,1965,7.019,1968,7.019,1995,7.787]],["title/injectables/LocalStrategy.html",[32,1.517,965,4.132]],["body/injectables/LocalStrategy.html",[3,0.038,4,0.038,5,0.033,7,0.545,8,2.498,9,3.729,11,2.597,16,0.769,18,2.558,19,0.004,20,2.44,21,1.049,22,2.528,27,1.887,29,0.313,32,2.278,34,1.109,40,0.038,41,0.351,44,1.887,49,1.909,63,2.872,64,2.773,70,0.003,71,0.003,72,2.518,77,4.266,158,1.922,182,1.511,214,2.682,266,2.773,301,2.639,506,3.246,917,5.65,946,6.835,965,6.206,970,4.316,1972,5.035,1978,7.101,1982,5.427,1984,5.427,1985,5.035,1988,5.427,1996,6.021,1997,6.021,1998,6.021,1999,7.878,2000,6.021,2001,7.878,2002,5.427,2003,5.427,2004,6.021,2005,6.021]],["title/entities/Log.html",[147,1.811,1414,3.375]],["body/entities/Log.html",[3,0.038,4,0.038,5,0.033,7,0.546,16,0.944,19,0.004,21,1.288,26,6.927,29,0.203,40,0.038,41,0.352,70,0.003,71,0.003,147,2.725,149,2.734,151,1.157,152,4.576,158,1.924,159,1.856,160,4.579,172,2.533,181,1.807,218,3.518,313,4.527,528,4.788,567,5.847,570,5.658,587,6.06,719,2.195,1414,5.658,2006,6.038,2007,7.925,2008,6.038,2009,6.038,2010,6.038,2011,6.038,2012,6.038]],["title/controllers/LogController.html",[183,1.811,2013,4.387]],["body/controllers/LogController.html",[3,0.045,4,0.045,5,0.04,19,0.004,29,0.334,34,1.326,40,0.045,41,0.419,70,0.003,71,0.003,111,2.455,183,2.486,185,2.455,187,3.434,194,3.26,198,3.434,199,3.563,200,3.563,209,2.923,212,3.155,214,3.206,215,2.617,1270,5.392,1414,4.633,1420,6.838,2013,7.379,2014,7.199,2015,6.488,2016,7.379,2017,5.671,2018,7.199]],["title/modules/LogModule.html",[134,1.606,845,3.929]],["body/modules/LogModule.html",[3,0.04,4,0.04,5,0.035,19,0.004,29,0.338,34,1.173,40,0.04,41,0.371,70,0.003,71,0.003,134,2.501,136,2.663,137,3.58,141,3.699,142,2.884,143,2.884,145,3.699,146,4.293,185,2.786,231,3.038,233,3.666,234,2.836,845,7.846,1408,8.421,1414,4.098,1420,7.217,1558,5.017,2013,7.544,2015,5.74,2019,5.74,2020,5.74,2021,5.74,2022,6.368,2023,6.368,2024,5.74,2025,6.368,2026,6.368]],["title/injectables/LogService.html",[32,1.517,1420,3.759]],["body/injectables/LogService.html",[3,0.038,4,0.038,5,0.033,7,0.545,8,2.498,9,3.729,11,3.398,16,0.769,18,2.558,19,0.004,20,2.44,21,1.049,22,2.528,27,1.887,29,0.333,32,2.278,34,1.109,40,0.038,41,0.351,43,2.682,44,1.887,49,1.909,50,3.099,70,0.003,71,0.003,72,2.518,77,2.925,181,1.801,209,2.444,212,2.639,234,2.682,243,4.218,266,2.773,285,3.555,301,3.452,1270,6.977,1414,5.07,1420,5.647,2016,6.589,2017,4.743,2024,5.427,2027,6.021,2028,7.878,2029,6.021,2030,6.021,2031,7.878,2032,7.878,2033,6.021,2034,6.021,2035,7.878,2036,6.021,2037,6.021,2038,6.021]],["title/entities/Merchant.html",[147,1.811,156,3.182]],["body/entities/Merchant.html",[3,0.04,4,0.04,5,0.035,7,0.571,16,0.792,19,0.004,21,1.081,29,0.302,40,0.04,41,0.368,70,0.003,71,0.003,103,3.323,104,2.421,147,2.805,149,2.858,151,1.191,152,4.332,156,4.927,159,1.558,165,3.546,175,4.675,176,3.828,180,4.563,181,1.888,182,1.584,1274,5.973,1467,4.972,1512,6.399,2039,6.31,2040,8.095,2041,8.981,2042,8.122,2043,6.31,2044,8.122,2045,6.31]],["title/controllers/MerchantApiController.html",[183,1.811,2046,4.387]],["body/controllers/MerchantApiController.html",[3,0.03,4,0.03,5,0.026,7,0.432,8,2.133,16,0.87,18,2.747,19,0.004,20,2.62,21,1.126,22,2.714,27,2.795,29,0.284,34,0.879,40,0.03,41,0.278,49,2.828,70,0.002,71,0.002,108,1.861,111,1.628,156,5.132,158,1.913,159,1.711,183,1.648,185,1.628,187,2.277,190,4.753,194,3.528,198,3.209,199,2.363,200,2.363,209,1.938,212,2.092,214,2.126,215,1.735,218,3.703,366,4.199,367,4.199,368,4.601,393,2.98,394,4.637,396,2.98,397,4.823,399,2.98,401,4.823,433,3.29,436,3.422,438,3.422,440,3.422,893,7.29,1273,6.932,1274,6.154,2046,5.627,2047,4.773,2048,6.064,2049,4.303,2050,4.773,2051,4.773,2052,4.773,2053,4.773,2054,7.649,2055,4.773,2056,5.836,2057,4.303,2058,5.627,2059,4.773,2060,4.773,2061,4.773,2062,4.773,2063,4.773,2064,4.773]],["title/modules/MerchantApiModule.html",[134,1.606,846,3.929]],["body/modules/MerchantApiModule.html",[3,0.044,4,0.044,5,0.039,19,0.004,29,0.316,34,1.286,40,0.044,41,0.407,70,0.003,71,0.003,134,2.651,136,2.921,137,3.795,141,3.921,142,3.162,143,3.162,145,3.921,156,5.252,185,2.953,846,7.721,893,5.501,1274,4.644,2046,7.871,2056,7.721,2057,6.294,2065,6.294,2066,6.294,2067,6.983,2068,6.983]],["title/injectables/MerchantApiService.html",[32,1.517,2056,3.929]],["body/injectables/MerchantApiService.html",[3,0.032,4,0.032,5,0.028,7,0.46,8,2.23,16,0.891,18,2.824,19,0.004,20,2.694,21,1.158,22,2.79,27,3.033,29,0.271,32,2.034,34,0.937,40,0.032,41,0.296,49,2.894,64,2.342,70,0.003,71,0.003,72,2.127,108,1.945,156,4.266,158,1.769,172,3.213,190,4.886,209,2.065,212,2.229,218,3.778,366,4.39,367,4.39,368,4.153,393,4.39,396,4.39,399,4.39,893,7.438,1273,6.838,1274,6.278,1291,4.134,2049,6.339,2054,7.624,2056,5.268,2058,5.882,2069,5.086,2070,5.086,2071,5.086,2072,5.086,2073,5.086,2074,5.086,2075,4.007,2076,9.128,2077,4.007,2078,4.007]],["title/entities/MobileDataActivity.html",[147,1.811,490,3.615]],["body/entities/MobileDataActivity.html",[3,0.037,4,0.037,5,0.033,7,0.534,16,0.848,19,0.004,21,1.313,29,0.323,40,0.037,41,0.344,51,3.046,70,0.003,71,0.003,103,2.975,104,2.264,106,5.26,107,3.485,147,2.685,149,2.673,151,1.14,159,1.668,160,3.521,165,4.369,180,4.886,181,1.766,182,1.482,360,4.068,489,3.485,490,5.359,519,4.592,709,4.65,710,6.514,711,3.398,712,3.398,713,4.65,715,4.65,716,6.503,717,4.65,718,4.65,719,2.145,1508,7.282,2079,7.775,2080,5.902]],["title/classes/MobileDataActivityRepository.html",[41,0.305,456,4.132]],["body/classes/MobileDataActivityRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.308,40,0.048,41,0.445,70,0.003,71,0.003,77,3.714,181,2.287,182,2.297,241,0.802,243,4.434,244,4.105,456,7.208,489,4.514,490,5.269,491,6.891,722,6.023,2081,7.645,2082,7.645]],["title/classes/Monnify.html",[41,0.305,297,3.615]],["body/classes/Monnify.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,297,6.578,2083,8.214]],["title/controllers/MonnifyController.html",[183,1.811,2084,4.387]],["body/controllers/MonnifyController.html",[3,0.045,4,0.045,5,0.039,19,0.004,29,0.333,34,1.308,40,0.045,41,0.414,70,0.003,71,0.003,111,2.422,183,2.452,185,2.422,187,3.387,194,3.216,198,3.387,199,3.515,200,3.515,209,2.883,212,3.112,214,3.163,215,2.581,259,6.306,297,4.894,855,5.939,942,5.939,1052,6.401,1280,5.594,2084,7.317,2085,7.101,2086,7.101,2087,6.401,2088,7.886,2089,5.939,2090,7.101]],["title/modules/MonnifyModule.html",[134,1.606,228,3.488]],["body/modules/MonnifyModule.html",[3,0.042,4,0.042,5,0.037,19,0.004,29,0.325,34,1.229,40,0.042,41,0.389,70,0.003,71,0.003,134,2.576,136,2.791,137,3.688,141,3.811,142,3.021,143,3.021,145,3.811,146,4.423,185,2.87,228,6.88,231,3.183,259,7.154,1762,6.304,1763,4.047,2084,7.71,2087,6.014,2091,6.014,2092,6.014,2093,6.014,2094,6.672,2095,6.672]],["title/injectables/MonnifyService.html",[32,1.517,259,3.488]],["body/injectables/MonnifyService.html",[3,0.01,4,0.01,5,0.009,7,0.141,8,0.872,9,4.119,11,1.186,16,0.864,18,2.354,19,0.004,20,2.245,21,0.672,22,2.326,27,2.406,29,0.214,32,0.795,34,0.288,40,0.01,41,0.091,43,2.987,44,3.063,49,2.714,56,1.388,60,1.445,61,2.152,63,3.75,64,3.443,70,0.001,71,0.001,72,0.654,77,2.452,111,0.533,148,0.822,151,0.403,154,2.616,155,2.368,158,1.163,194,1.245,209,0.635,210,1.077,215,0.568,250,3.317,255,3.317,259,1.828,260,3.295,266,3.443,282,4.104,283,0.923,284,0.839,301,4.02,305,1.171,313,3.848,318,1.769,322,1.04,325,5.53,331,1.409,342,1.976,345,1.828,548,4.961,574,1.04,700,1.006,762,1.121,764,1.04,878,3.618,879,1.121,919,1.409,976,1.006,1000,1.171,1010,3.317,1036,1.121,1072,3.317,1074,1.308,1076,2.166,1079,1.232,1082,1.232,1102,1.409,1227,4.996,1326,4.136,1327,1.171,1763,0.948,1773,4.496,1786,1.171,1787,1.171,1811,7.171,1812,2.899,1813,1.308,1822,5.43,1823,5.711,1826,5.711,1829,5.711,1831,6.049,1832,5.711,1844,5.711,1845,5.711,1870,3.317,1923,1.308,1945,3.49,2048,2.478,2096,1.563,2097,3.317,2098,3.68,2099,3.68,2100,3.68,2101,3.68,2102,4.43,2103,2.749,2104,4.43,2105,2.749,2106,2.478,2107,2.749,2108,2.749,2109,2.749,2110,4.43,2111,2.749,2112,3.68,2113,3.68,2114,2.749,2115,1.563,2116,1.563,2117,1.563,2118,2.749,2119,1.563,2120,1.563,2121,2.749,2122,1.563,2123,2.478,2124,1.563,2125,2.749,2126,1.563,2127,2.749,2128,1.563,2129,2.749,2130,1.563,2131,2.749,2132,1.563,2133,2.749,2134,1.563,2135,1.563,2136,1.563,2137,1.563,2138,1.563,2139,1.563,2140,1.563,2141,1.563,2142,1.563,2143,1.563,2144,1.563,2145,1.563,2146,1.171,2147,1.232,2148,1.563,2149,1.563,2150,1.563,2151,3.68,2152,1.409,2153,1.563,2154,1.563,2155,2.749,2156,1.563,2157,2.749,2158,1.563,2159,2.749,2160,1.409,2161,1.409,2162,1.409,2163,1.563,2164,7.249,2165,7.249,2166,2.749,2167,2.749,2168,1.563,2169,1.563,2170,1.563,2171,1.563,2172,5.563,2173,1.121,2174,6.379,2175,1.308,2176,1.563,2177,5.047,2178,1.308,2179,1.563,2180,1.409,2181,1.563,2182,1.563,2183,1.563,2184,1.409,2185,1.563,2186,1.563,2187,1.563,2188,1.563,2189,1.563,2190,1.563,2191,1.563,2192,1.563,2193,6.995,2194,6.995,2195,1.563,2196,1.563,2197,6.707,2198,5.047,2199,1.563,2200,3.68,2201,2.749,2202,1.563,2203,1.563,2204,1.563,2205,2.749,2206,1.563,2207,1.563,2208,1.563,2209,1.563,2210,1.563,2211,1.563,2212,1.563,2213,1.563]],["title/classes/Nodemailer.html",[41,0.305,2214,4.132]],["body/classes/Nodemailer.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,2214,7.52,2215,8.214]],["title/modules/NodemailerModule.html",[134,1.606,847,3.759]],["body/modules/NodemailerModule.html",[3,0.044,4,0.044,5,0.039,19,0.004,29,0.292,34,1.295,40,0.044,41,0.409,70,0.003,71,0.003,134,2.662,136,2.94,137,3.81,141,3.937,142,3.183,143,3.183,145,3.937,146,4.569,847,7.501,1684,7.764,2216,6.336,2217,6.336,2218,6.336,2219,7.03,2220,7.03]],["title/injectables/NodemailerService.html",[32,1.517,1684,3.759]],["body/injectables/NodemailerService.html",[3,0.038,4,0.038,5,0.034,7,0.551,8,2.517,9,3.75,11,3.809,16,0.861,18,1.978,19,0.004,20,1.886,21,1.057,22,1.954,27,1.909,29,0.297,32,2.296,34,1.122,40,0.038,41,0.355,43,3.933,49,1.931,51,1.931,56,3.074,60,3.201,61,3.856,63,2.905,70,0.003,71,0.003,72,2.547,151,1.164,266,2.805,301,2.669,546,4.798,611,3.695,1418,5.094,1684,5.69,1691,7.154,1700,7.154,1715,7.959,1719,5.49,2214,4.798,2221,6.091,2222,8.83,2223,7.937,2224,8.83,2225,6.091,2226,7.937,2227,6.091,2228,6.091,2229,6.091,2230,6.091,2231,6.091,2232,6.091,2233,6.091]],["title/entities/PaymentMerchant.html",[147,1.811,164,4.132]],["body/entities/PaymentMerchant.html",[3,0.038,4,0.038,5,0.033,7,0.542,16,0.854,19,0.004,20,2.712,21,1.166,29,0.312,40,0.038,41,0.349,70,0.003,71,0.003,147,2.71,148,5.303,149,2.711,151,1.151,152,4.466,158,1.521,159,1.68,160,4.209,164,6.183,175,4.518,176,3.631,177,7.773,181,1.791,182,1.503,305,6.559,548,5.312,574,3.981,711,3.446,712,3.446,719,2.176,1467,4.716,1506,5.007,1512,6.183,2234,5.986,2235,7.848,2236,5.986,2237,5.986,2238,7.892,2239,5.986,2240,5.007,2241,5.986]],["title/classes/Paystack.html",[41,0.305,2242,3.759]],["body/classes/Paystack.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,2242,6.842,2243,8.214]],["title/controllers/PaystackController.html",[183,1.811,2244,4.387]],["body/controllers/PaystackController.html",[3,0.023,4,0.023,5,0.02,7,0.33,8,1.751,16,0.917,18,2.923,19,0.004,20,2.788,21,1.198,22,2.888,27,2.944,29,0.303,34,0.671,40,0.023,41,0.212,49,3.027,70,0.002,71,0.002,101,1.459,108,1.528,111,1.243,148,1.916,158,1.786,159,1.802,183,1.259,185,1.243,187,1.739,190,4.18,194,3.02,198,3.181,199,1.804,200,1.804,209,2.242,212,1.597,214,1.624,215,1.325,218,3.366,366,3.447,367,3.447,368,3.938,393,2.275,394,3.806,396,2.275,397,3.959,399,2.275,401,3.959,433,2.512,436,2.613,438,2.613,440,2.613,1054,5.127,1055,2.512,1056,2.872,1286,6.301,1361,6.885,1741,5.861,1797,4.351,1931,6.627,2242,2.613,2244,4.619,2245,3.645,2246,6.01,2247,5.523,2248,7.439,2249,5.523,2250,4.978,2251,3.285,2252,3.645,2253,3.285,2254,5.523,2255,3.645,2256,3.645,2257,5.523,2258,3.645,2259,5.523,2260,3.645,2261,3.645,2262,5.523,2263,3.645,2264,3.645,2265,5.523,2266,3.645,2267,3.645,2268,7.091,2269,3.645,2270,3.285,2271,5.523,2272,3.645,2273,5.577,2274,4.595,2275,3.285,2276,4.619,2277,3.285,2278,3.285,2279,3.285,2280,3.645,2281,3.645,2282,3.645,2283,3.645,2284,3.645,2285,3.645,2286,3.645,2287,3.645,2288,3.645,2289,3.645,2290,3.645,2291,3.645,2292,3.645,2293,3.645]],["title/modules/PaystackModule.html",[134,1.606,848,3.759]],["body/modules/PaystackModule.html",[3,0.042,4,0.042,5,0.037,19,0.004,29,0.325,34,1.229,40,0.042,41,0.389,70,0.003,71,0.003,134,2.576,136,2.791,137,3.688,141,3.811,142,3.021,143,3.021,145,3.811,146,4.423,185,2.87,231,3.183,848,7.416,1762,6.304,1763,4.047,2244,7.71,2274,7.414,2275,6.014,2294,6.014,2295,6.014,2296,6.014,2297,6.672,2298,6.672]],["title/injectables/PaystackService.html",[32,1.517,2274,3.615]],["body/injectables/PaystackService.html",[3,0.015,4,0.015,5,0.013,7,0.21,8,1.222,9,4.078,11,1.662,16,0.893,18,2.729,19,0.004,20,2.603,21,1.185,22,2.696,27,2.79,28,5.036,29,0.289,32,1.114,34,0.427,40,0.015,41,0.135,43,3.743,44,2.397,49,2.777,61,3.105,63,4.098,64,3.523,70,0.001,71,0.001,72,0.97,101,0.928,108,1.066,148,1.219,151,0.565,154,1.369,158,1.665,172,2.548,190,3.236,194,2.608,209,1.564,212,1.016,215,0.843,218,2.759,260,3.785,266,2.652,282,2.714,284,1.245,301,3.203,342,2.654,366,2.405,367,2.405,368,2.276,393,2.405,396,2.405,399,2.405,762,1.662,763,1.827,764,1.542,1054,3.969,1055,1.598,1056,1.827,1286,4.787,1291,2.894,1346,5.238,1347,1.939,1361,5.757,1741,5.432,1763,1.407,1768,4.135,1769,4.135,1770,4.135,1772,1.737,1773,5.474,1786,1.737,1787,1.737,1797,3.036,1802,3.223,1804,1.939,1810,6.398,1811,1.827,1812,1.827,1813,1.939,1822,5.474,1823,5.757,1826,5.757,1829,5.757,1830,2.09,1831,5.757,1832,5.757,1844,5.757,1845,5.757,1931,5.757,2075,1.827,2077,1.827,2078,1.827,2242,4.581,2246,4.456,2250,3.473,2251,3.473,2253,2.09,2268,5.757,2270,3.473,2273,3.223,2274,2.656,2276,3.223,2277,2.09,2278,2.09,2279,2.09,2299,2.319,2300,5.759,2301,3.853,2302,4.944,2303,4.944,2304,4.944,2305,3.853,2306,2.319,2307,2.319,2308,2.319,2309,3.853,2310,2.319,2311,2.319,2312,2.319,2313,2.319,2314,2.319,2315,2.319,2316,2.319,2317,2.319,2318,2.319,2319,2.319,2320,2.319,2321,2.319,2322,2.319,2323,2.319,2324,1.939,2325,1.827,2326,1.827,2327,2.319,2328,2.319,2329,2.09,2330,3.473,2331,2.09,2332,2.319,2333,2.09,2334,2.319,2335,6.391,2336,2.319,2337,2.319,2338,2.319,2339,2.09,2340,2.319,2341,2.09,2342,2.319]],["title/classes/QueryTransactionStatusDto.html",[41,0.305,2343,4.132]],["body/classes/QueryTransactionStatusDto.html",[3,0.046,4,0.046,5,0.04,7,0.663,16,0.715,19,0.004,21,0.975,29,0.246,40,0.046,41,0.519,70,0.003,71,0.003,89,3.468,151,1.307,158,1.728,159,1.405,241,0.769,582,2.762,583,2.794,584,2.217,806,4.178,1110,4.851,1116,3.696,2343,7.024,2344,8.916,2345,7.324,2346,7.324]],["title/classes/ReadReceiveTransferPermission.html",[41,0.305,1308,2.502]],["body/classes/ReadReceiveTransferPermission.html",[3,0.02,4,0.02,5,0.018,7,0.294,16,0.494,19,0.004,29,0.3,34,0.599,36,2.373,37,4.732,39,1.525,40,0.064,41,0.59,42,4.688,44,1.947,51,1.032,70,0.002,71,0.002,83,2.373,84,2.293,85,1.553,89,1.266,90,1.525,91,3.265,92,1.474,95,1.361,96,3.276,97,1.45,98,3.994,99,1.474,100,1.474,101,3.039,102,1.553,103,2.352,104,1.248,108,2.224,109,1.525,110,3.768,111,2.742,112,3.933,115,2.373,151,0.742,202,1.341,241,0.341,607,1.474,719,1.84,728,4.577,833,1.45,1289,1.553,1290,1.553,1291,4.653,1292,2.255,1295,1.581,1296,2.415,1297,1.553,1298,1.525,1299,1.553,1300,1.525,1301,1.553,1302,1.553,1303,1.553,1304,1.553,1305,1.553,1306,1.553,1307,2.415,1308,2.415,1309,1.553,1310,1.553,1311,1.553,1312,1.553,1313,1.553,1314,1.553,1315,1.499,1316,1.525,1317,1.553,1318,1.553,2347,2.438,2348,3.255,2349,3.255]],["title/classes/ReadSendTransferPermission.html",[41,0.305,1303,2.502]],["body/classes/ReadSendTransferPermission.html",[3,0.02,4,0.02,5,0.018,7,0.294,16,0.494,19,0.004,29,0.3,34,0.599,36,2.373,37,4.732,39,1.525,40,0.064,41,0.59,42,4.688,44,1.947,51,1.032,70,0.002,71,0.002,83,2.373,84,2.293,85,1.553,89,1.266,90,1.525,91,3.265,92,1.474,95,1.361,96,3.469,97,1.45,98,3.907,99,1.474,100,1.474,101,3.039,102,1.553,103,2.352,104,1.248,108,2.224,109,1.525,110,3.768,111,2.742,112,3.933,115,2.373,151,0.742,202,1.341,241,0.341,607,1.474,719,1.84,728,4.577,833,1.45,1289,1.553,1290,1.553,1291,4.653,1292,2.255,1295,1.581,1296,2.415,1297,1.553,1298,1.525,1299,1.553,1300,1.525,1301,1.553,1302,2.415,1303,2.415,1304,1.553,1305,1.553,1306,1.553,1307,1.553,1308,1.553,1309,1.553,1310,1.553,1311,1.553,1312,1.553,1313,1.553,1314,1.553,1315,1.499,1316,1.525,1317,1.553,1318,1.553,2347,2.438,2350,3.255,2351,3.255]],["title/classes/ReadTransferRequestPermission.html",[41,0.305,1311,2.502]],["body/classes/ReadTransferRequestPermission.html",[3,0.02,4,0.02,5,0.018,7,0.294,16,0.494,19,0.004,29,0.3,34,0.599,36,2.373,37,4.732,39,1.525,40,0.064,41,0.59,42,4.688,44,1.947,51,1.032,70,0.002,71,0.002,83,2.373,84,2.293,85,1.553,89,1.266,90,1.525,91,3.265,92,1.474,95,1.361,96,3.276,97,1.45,98,3.994,99,1.474,100,1.474,101,3.039,102,1.553,103,2.352,104,1.248,108,2.224,109,1.525,110,3.768,111,2.742,112,3.933,115,2.373,151,0.742,202,2.086,241,0.341,607,1.474,719,1.84,728,4.577,833,1.45,1289,1.553,1290,1.553,1291,4.653,1292,2.255,1295,1.581,1296,2.415,1297,1.553,1298,1.525,1299,1.553,1300,1.525,1301,1.553,1302,1.553,1303,1.553,1304,1.553,1305,1.553,1306,1.553,1307,1.553,1308,1.553,1309,1.553,1310,1.553,1311,2.415,1312,1.553,1313,1.553,1314,1.553,1315,1.499,1316,1.525,1317,1.553,1318,1.553,2347,2.438,2352,3.255,2353,3.255]],["title/classes/ReadUserPermission.html",[41,0.305,1298,2.458]],["body/classes/ReadUserPermission.html",[3,0.02,4,0.02,5,0.018,7,0.295,16,0.495,19,0.004,29,0.3,34,0.6,36,2.375,37,4.733,39,1.528,40,0.064,41,0.59,42,4.69,44,1.949,51,1.607,70,0.002,71,0.002,83,2.375,84,2.295,85,1.555,89,1.268,90,1.528,91,3.267,92,1.476,95,1.363,96,3.278,97,1.452,98,3.909,99,1.476,100,1.476,101,2.807,102,1.555,103,2.492,104,1.25,108,2.226,109,1.528,110,3.771,111,2.744,112,3.936,115,2.375,151,0.743,202,1.343,241,0.342,607,1.476,719,1.843,728,4.577,833,1.452,1289,1.555,1290,1.555,1291,4.654,1292,2.258,1295,1.584,1296,2.418,1297,1.555,1298,2.375,1299,1.555,1300,1.528,1301,1.555,1302,1.555,1303,1.555,1304,1.555,1305,1.555,1306,1.555,1307,1.555,1308,1.555,1309,1.555,1310,1.555,1311,1.555,1312,1.555,1313,1.555,1314,1.555,1315,1.501,1316,1.528,1317,1.555,1318,1.555,2347,2.442,2354,3.26,2355,3.26]],["title/classes/ReadWithdrawalPermission.html",[41,0.305,1315,2.416]],["body/classes/ReadWithdrawalPermission.html",[3,0.02,4,0.02,5,0.018,7,0.295,16,0.495,19,0.004,29,0.3,34,0.6,36,2.375,37,4.733,39,1.528,40,0.064,41,0.59,42,4.69,44,1.949,51,1.034,70,0.002,71,0.002,83,2.375,84,2.295,85,1.555,89,1.268,90,1.528,91,3.526,92,1.476,95,1.363,96,3.278,97,1.452,98,3.909,99,1.476,100,1.476,101,2.807,102,1.555,103,2.354,104,1.25,108,2.226,109,1.528,110,3.771,111,2.744,112,3.936,115,2.375,151,0.743,202,1.343,241,0.342,607,1.476,719,1.843,728,4.577,833,1.452,1289,1.555,1290,1.555,1291,4.654,1292,2.258,1295,1.584,1296,2.418,1297,1.555,1298,1.528,1299,1.555,1300,1.528,1301,1.555,1302,1.555,1303,1.555,1304,1.555,1305,1.555,1306,1.555,1307,1.555,1308,1.555,1309,1.555,1310,1.555,1311,1.555,1312,1.555,1313,1.555,1314,1.555,1315,2.335,1316,1.528,1317,1.555,1318,1.555,2347,2.442,2356,3.26,2357,3.26]],["title/entities/ReceiveTransfer.html",[93,3.615,147,1.811]],["body/entities/ReceiveTransfer.html",[3,0.028,4,0.028,5,0.025,7,0.41,16,0.934,19,0.004,21,1.333,29,0.306,40,0.028,41,0.264,51,2.619,70,0.002,71,0.002,93,4.465,94,7.303,95,1.893,101,2.592,103,3.019,104,1.736,106,4.725,107,2.673,147,2.237,149,2.05,151,0.95,152,4.622,159,1.837,160,4.479,165,4.251,172,2.918,180,4.641,181,1.354,182,1.136,287,4.417,288,3.01,711,2.606,712,2.606,719,1.645,2358,4.08,2359,6.82,2360,6.82,2361,7.566,2362,7.566,2363,6.82,2364,6.82,2365,4.526,2366,8.26,2367,4.526,2368,4.526,2369,6.478,2370,4.526,2371,4.526,2372,4.526,2373,4.526,2374,5.961,2375,4.526,2376,3.39,2377,3.786,2378,4.526]],["title/classes/ReceiveTransferRepository.html",[41,0.305,2379,4.132]],["body/classes/ReceiveTransferRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.308,40,0.048,41,0.447,70,0.003,71,0.003,93,5.288,95,3.209,181,2.296,182,2.302,241,0.805,243,4.441,244,4.12,2379,7.224,2380,7.673,2381,6.916,2382,7.673,2383,7.673]],["title/entities/Referral.html",[147,1.811,1491,3.375]],["body/entities/Referral.html",[3,0.035,4,0.035,5,0.031,7,0.511,16,0.886,19,0.004,21,1.209,29,0.286,40,0.035,41,0.329,70,0.003,71,0.003,103,3.329,104,2.166,147,2.608,149,2.557,151,1.107,152,4.53,159,1.743,160,3.853,165,3.173,172,2.914,175,4.347,176,3.426,180,4.243,181,1.69,182,1.418,1322,7.115,1323,7.115,1461,7.668,1474,6.316,1491,4.86,1513,7.115,2384,5.648,2385,8.507,2386,9.082,2387,5.648,2388,7.551,2389,5.648,2390,5.648,2391,5.648]],["title/controllers/ReferralController.html",[183,1.811,2392,4.387]],["body/controllers/ReferralController.html",[3,0.031,4,0.031,5,0.027,7,0.449,8,2.193,16,0.883,18,2.795,19,0.004,20,2.666,21,1.146,22,2.762,27,2.836,29,0.289,34,0.915,40,0.031,41,0.289,49,2.87,70,0.003,71,0.003,108,1.913,111,1.693,158,1.93,159,1.736,183,1.715,185,1.693,187,2.369,190,4.836,194,3.604,198,3.299,199,2.458,200,2.458,209,2.016,212,2.176,214,2.212,215,1.805,218,3.75,366,4.317,367,4.317,368,4.7,393,3.1,394,4.767,396,3.1,397,4.958,399,3.1,401,4.958,433,3.422,436,3.559,438,3.559,440,3.559,1319,7.019,1491,3.196,2392,5.785,2393,4.966,2394,4.476,2395,4.966,2396,4.966,2397,4.966,2398,4.966,2399,7.725,2400,4.966,2401,5.705,2402,4.476,2403,5.785,2404,4.966,2405,4.966,2406,4.966,2407,4.966,2408,4.966,2409,4.966]],["title/modules/ReferralModule.html",[134,1.606,849,3.759]],["body/modules/ReferralModule.html",[3,0.041,4,0.041,5,0.036,19,0.004,29,0.34,34,1.191,40,0.041,41,0.377,70,0.003,71,0.003,134,2.526,136,2.705,137,3.615,141,3.736,142,2.928,143,2.928,145,3.736,146,4.336,185,2.813,231,3.084,233,3.722,234,2.88,849,7.364,1491,4.161,2392,7.598,2401,7.678,2402,5.828,2410,5.828,2411,5.828,2412,5.828,2413,6.466,2414,6.466,2415,5.828,2416,5.094,2417,5.828,2418,6.466]],["title/classes/ReferralRepository.html",[41,0.305,2416,4.132]],["body/classes/ReferralRepository.html",[3,0.048,4,0.048,5,0.043,19,0.004,29,0.31,40,0.048,41,0.45,70,0.003,71,0.003,181,2.313,182,2.312,241,0.811,243,4.455,244,4.15,1491,4.974,2415,6.967,2416,7.256,2419,7.729,2420,7.729]],["title/injectables/ReferralService.html",[32,1.517,2401,3.759]],["body/injectables/ReferralService.html",[3,0.028,4,0.028,5,0.025,7,0.406,8,2.042,9,3.198,11,2.777,16,0.911,18,2.944,19,0.004,20,2.808,21,1.207,22,2.909,27,2.994,29,0.293,32,1.862,34,0.826,40,0.028,41,0.261,43,1.999,44,1.406,49,2.762,56,2.265,60,2.358,61,3.128,63,2.141,64,2.067,70,0.002,71,0.002,72,1.877,108,1.781,158,1.688,172,3.122,190,4.623,209,1.822,212,1.967,218,3.628,234,1.999,285,2.65,301,2.822,366,4.019,367,4.019,368,3.802,393,4.019,396,4.019,399,4.019,1291,3.945,1319,7.395,1491,5.606,2075,3.535,2077,3.535,2078,3.535,2394,5.803,2399,7.358,2401,4.615,2403,5.385,2416,7.143,2417,4.045,2421,4.487,2422,6.439,2423,4.487,2424,4.487,2425,4.487,2426,6.439,2427,4.487,2428,4.487,2429,4.487,2430,4.487,2431,4.487,2432,4.487,2433,4.045,2434,4.487,2435,4.487]],["title/interfaces/RequiredRule.html",[37,2.416,833,2.336]],["body/interfaces/RequiredRule.html",[3,0.021,4,0.021,5,0.018,7,0.298,19,0.004,21,0.68,29,0.301,34,0.606,36,2.393,37,4.739,39,1.542,40,0.065,41,0.591,42,4.672,44,1.961,51,1.043,70,0.002,71,0.002,83,3.304,84,2.312,85,1.57,89,1.28,90,1.542,91,3.279,92,1.49,95,1.376,96,3.293,97,1.466,98,3.92,99,1.49,100,1.49,101,2.822,102,1.57,103,2.364,104,1.262,108,2.234,109,1.542,110,3.785,111,2.754,112,3.785,115,3.304,151,0.749,202,1.356,607,1.49,728,4.602,833,1.466,835,2.592,1289,1.57,1290,1.57,1291,4.679,1295,1.598,1296,2.436,1297,1.57,1298,1.542,1299,1.57,1300,1.542,1301,1.57,1302,1.57,1303,1.57,1304,1.57,1305,1.57,1306,1.57,1307,1.57,1308,1.57,1309,1.57,1310,1.57,1311,1.57,1312,1.57,1313,1.57,1314,1.57,1315,1.515,1316,1.542,1317,1.57,1318,1.57]],["title/interfaces/ReturnTypeContainer.html",[833,2.336,2436,4.132]],["body/interfaces/ReturnTypeContainer.html",[3,0.047,4,0.047,5,0.041,7,0.674,19,0.004,21,1.2,22,3.229,40,0.047,70,0.003,71,0.003,77,4.889,151,1.321,158,1.877,313,5.181,833,3.32,835,5.873,837,8.101,2436,7.1,2437,7.455]],["title/entities/SeedingLogEntry.html",[147,1.811,1602,4.132]],["body/entities/SeedingLogEntry.html",[3,0.041,4,0.041,5,0.036,7,0.592,16,0.892,19,0.004,21,1.217,29,0.22,40,0.041,41,0.381,70,0.003,71,0.003,147,2.871,149,2.965,151,1.219,152,4.374,158,1.771,159,1.753,160,4.138,172,2.668,181,1.959,218,3.656,342,5.161,528,5.044,567,6.077,570,5.88,1602,6.551,2007,8.236,2438,6.547,2439,6.547,2440,6.547,2441,6.547,2442,6.547,2443,6.547]],["title/injectables/SeedingMiddleware.html",[32,1.517,2444,4.387]],["body/injectables/SeedingMiddleware.html",[3,0.032,4,0.032,5,0.028,7,0.459,8,2.226,9,3.873,11,2.189,16,0.785,18,2.28,19,0.004,20,2.175,21,1.072,22,2.253,27,1.59,28,4.838,29,0.317,32,2.03,34,0.934,40,0.032,41,0.296,42,2.337,43,3.586,49,2.226,50,2.612,64,2.337,70,0.003,71,0.003,72,2.122,88,3.637,151,1.029,181,1.518,193,3.265,214,2.26,215,1.844,266,2.337,301,4.134,342,2.724,347,4.244,506,2.091,585,4.259,587,3.497,663,3.265,917,3.078,998,5.259,1379,3.997,1380,3.997,1425,5.531,1601,4.573,1602,3.997,1907,5.872,2152,7.256,2444,5.872,2445,5.074,2446,8.05,2447,5.074,2448,9.434,2449,7.021,2450,7.021,2451,9.12,2452,5.074,2453,5.074,2454,7.021,2455,4.244,2456,5.074,2457,7.021,2458,5.074,2459,5.074,2460,5.074,2461,5.074,2462,5.074,2463,5.074,2464,5.074,2465,5.074,2466,4.244,2467,5.074,2468,5.074,2469,5.074]],["title/modules/SeedingModule.html",[134,1.606,850,3.929]],["body/modules/SeedingModule.html",[3,0.045,4,0.045,5,0.04,8,2.298,16,0.707,18,2.354,19,0.004,20,2.245,21,0.965,22,2.326,27,2.271,29,0.298,34,1.335,40,0.045,41,0.422,70,0.003,71,0.003,134,2.712,136,3.032,850,6.636,1425,5.711,2444,6.062,2470,7.248,2471,7.248,2472,8.86,2473,9.967,2474,7.248,2475,7.248,2476,7.248,2477,7.248]],["title/entities/SendTransfer.html",[96,2.262,147,1.811]],["body/entities/SendTransfer.html",[3,0.03,4,0.03,5,0.026,7,0.43,16,0.926,19,0.004,21,1.331,29,0.299,40,0.03,41,0.277,51,2.677,70,0.002,71,0.002,95,1.988,96,2.893,97,4.32,101,2.683,103,3.054,104,1.823,106,4.792,107,2.806,147,2.316,149,2.152,151,0.983,152,4.607,159,1.822,160,4.392,165,4.367,172,2.965,180,4.744,181,1.422,182,1.193,711,2.735,712,2.735,719,1.727,2358,4.283,2359,7.005,2360,7.005,2363,7.005,2364,7.005,2374,6.123,2376,3.559,2377,3.974,2478,7.772,2479,7.772,2480,8.442,2481,4.752,2482,4.752,2483,4.752,2484,4.752,2485,6.706,2486,4.752,2487,4.752,2488,4.752,2489,4.752]],["title/classes/SendTransferRepository.html",[41,0.305,2490,4.132]],["body/classes/SendTransferRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.308,40,0.048,41,0.447,70,0.003,71,0.003,95,3.209,96,3.31,181,2.296,182,2.302,241,0.805,243,4.441,244,4.12,2381,6.916,2490,7.224,2491,7.673,2492,7.673,2493,7.673]],["title/classes/SetPinDTO.html",[41,0.305,939,4.387]],["body/classes/SetPinDTO.html",[3,0.042,4,0.042,5,0.037,7,0.604,16,0.821,19,0.004,29,0.224,40,0.042,41,0.49,70,0.003,71,0.003,151,1.234,159,1.615,241,0.7,313,4.983,582,2.855,583,2.637,584,2.019,917,5.592,939,7.038,959,7.416,1026,2.394,1114,3.688,2173,6.032,2494,9.218,2495,6.672,2496,6.672,2497,6.672,2498,8.415,2499,6.672,2500,8.415,2501,6.672,2502,6.672,2503,6.672,2504,6.672,2505,6.672,2506,6.672]],["title/entities/Setting.html",[147,1.811,1595,3.929]],["body/entities/Setting.html",[3,0.037,4,0.037,5,0.033,7,0.539,16,0.965,19,0.004,20,2.705,21,1.316,29,0.263,40,0.037,41,0.347,70,0.003,71,0.003,147,2.7,149,2.695,151,1.146,158,1.516,159,1.897,160,4.563,172,2.509,181,1.781,218,3.494,290,3.83,485,6.541,528,5.625,567,5.807,570,5.619,572,6.259,1292,3.889,1339,7.87,1340,5.857,1595,5.857,2507,5.952,2508,8.732,2509,8.732,2510,5.952,2511,5.952,2512,5.952,2513,5.952,2514,5.952,2515,5.952]],["title/controllers/SettingsController.html",[183,1.811,2516,4.387]],["body/controllers/SettingsController.html",[3,0.031,4,0.031,5,0.027,7,0.444,8,2.175,16,0.879,18,2.781,19,0.004,20,2.652,21,1.14,22,2.748,27,2.824,29,0.303,34,0.904,40,0.031,41,0.286,49,2.857,70,0.002,71,0.002,111,1.674,159,1.729,183,1.695,185,1.674,187,2.341,194,2.222,198,3.272,199,2.429,200,2.429,209,1.992,212,2.151,214,2.186,215,1.784,670,5.259,680,6.692,682,5.404,683,7.324,702,4.423,742,6.414,1081,3.676,1342,7.927,2516,5.737,2517,4.908,2518,4.908,2519,6.86,2520,6.86,2521,6.86,2522,7.909,2523,4.908,2524,6.86,2525,4.908,2526,4.908,2527,6.86,2528,4.908,2529,9.336,2530,4.908,2531,4.908,2532,6.86,2533,4.908,2534,4.908,2535,6.86,2536,4.908,2537,4.423,2538,4.908,2539,4.908,2540,4.908,2541,4.908,2542,4.908,2543,4.908,2544,4.908,2545,4.908,2546,4.908]],["title/modules/SettingsModule.html",[134,1.606,643,3.375]],["body/modules/SettingsModule.html",[3,0.041,4,0.041,5,0.036,19,0.004,29,0.334,34,1.21,40,0.041,41,0.383,70,0.003,71,0.003,134,2.551,136,2.747,137,3.651,141,3.773,142,2.974,143,2.974,145,3.773,146,4.379,185,2.841,231,3.133,233,3.781,234,2.925,643,6.635,670,7.139,1595,4.919,2516,7.654,2537,5.919,2547,5.919,2548,5.919,2549,5.919,2550,6.567,2551,6.567,2552,5.919,2553,6.567]],["title/injectables/SettingsService.html",[32,1.517,670,3.488]],["body/injectables/SettingsService.html",[3,0.025,4,0.025,5,0.022,7,0.36,8,1.869,9,4.303,11,2.543,16,0.848,18,2.695,19,0.004,20,3.138,21,1.105,22,2.663,27,2.6,29,0.311,32,1.705,34,0.732,40,0.025,41,0.232,43,2.626,44,2.435,49,2.631,63,1.897,64,1.832,70,0.002,71,0.002,72,1.663,181,1.19,209,1.615,212,1.743,234,1.771,243,3.519,266,3.579,282,2.183,283,2.348,285,2.348,301,4.406,323,2.979,324,2.979,325,4.672,670,3.921,680,5.948,682,4.645,683,6.92,878,5.948,879,2.851,976,2.559,1076,5.535,1079,3.133,1080,3.133,1081,2.979,1082,3.133,1087,3.585,1088,3.326,1342,7.564,1595,6.738,2552,3.585,2554,3.977,2555,5.896,2556,5.896,2557,7.77,2558,5.896,2559,7.025,2560,3.977,2561,3.977,2562,5.896,2563,5.896,2564,3.977,2565,5.896,2566,3.977,2567,3.977,2568,5.896,2569,3.977,2570,3.977,2571,3.977,2572,3.977,2573,7.025,2574,5.896,2575,3.977,2576,5.896,2577,3.977,2578,3.977,2579,3.977,2580,3.585,2581,3.977,2582,3.977,2583,3.977,2584,3.977,2585,3.977,2586,5.896,2587,3.977,2588,3.977]],["title/classes/Sm.html",[41,0.305,2589,4.727]],["body/classes/Sm.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,2589,8.603,2590,8.214]],["title/controllers/SmsController.html",[183,1.811,2591,4.387]],["body/controllers/SmsController.html",[3,0.045,4,0.045,5,0.039,19,0.004,29,0.333,34,1.308,40,0.045,41,0.414,70,0.003,71,0.003,111,2.422,183,2.452,185,2.422,187,3.387,193,4.57,194,3.216,198,3.387,199,3.515,200,3.515,201,4.894,214,3.163,215,2.581,403,4.433,404,5.319,405,4.894,1056,5.594,1108,3.45,1224,5.939,2591,7.317,2592,7.101,2593,6.401,2594,5.939,2595,6.797,2596,6.401,2597,7.101,2598,7.101]],["title/modules/SmsModule.html",[134,1.606,851,3.759]],["body/modules/SmsModule.html",[3,0.04,4,0.04,5,0.035,19,0.004,29,0.331,34,1.173,40,0.04,41,0.371,70,0.003,71,0.003,134,2.501,136,2.663,137,3.58,141,3.699,142,2.884,143,2.884,145,3.699,146,4.293,185,2.786,229,3.76,231,3.897,237,5.017,851,7.508,853,7.217,967,4.389,2591,7.544,2595,7.662,2596,5.74,2599,5.74,2600,6.368,2601,5.74,2602,5.74,2603,6.368,2604,6.368,2605,6.368]],["title/injectables/SmsService.html",[32,1.517,2595,3.759]],["body/injectables/SmsService.html",[3,0.034,4,0.034,5,0.03,7,0.491,8,2.332,9,4.089,11,2.342,16,0.814,18,2.708,19,0.004,20,2.583,21,1.11,22,2.676,27,2.304,29,0.314,32,2.127,34,1,40,0.034,41,0.316,49,2.332,56,3.711,60,3.864,61,4.342,63,3.507,70,0.003,71,0.003,72,2.27,158,1.968,214,2.418,215,1.973,260,2.98,261,2.98,266,3.386,284,2.915,293,3.741,301,3.222,663,5.751,967,3.741,976,3.493,2594,4.54,2595,5.271,2606,5.428,2607,7.353,2608,6.628,2609,5.428,2610,6.902,2611,5.428,2612,7.353,2613,5.428,2614,7.353,2615,7.041,2616,5.428,2617,5.428,2618,5.793,2619,5.428,2620,5.428]],["title/classes/Transaction.html",[41,0.305,89,2.04]],["body/classes/Transaction.html",[3,0.022,4,0.022,5,0.019,7,0.317,16,0.993,19,0.004,21,1.363,29,0.278,40,0.022,41,0.204,50,4.575,70,0.002,71,0.002,89,2.082,151,0.785,152,4.658,153,4.481,154,3.84,157,3.945,158,1.902,159,1.954,160,4.774,172,3.033,175,4.766,176,2.123,181,1.047,182,1.344,218,2.142,241,0.367,281,4.871,287,4.022,288,2.327,290,2.252,342,3.491,356,5.439,504,2.72,516,4.661,521,4.661,522,3.838,523,5.123,524,3.838,528,3.248,548,3.945,551,2.757,552,4.218,560,4.661,561,5.456,567,2.327,568,4.324,569,2.757,570,2.252,571,2.757,572,2.508,573,2.757,574,2.327,575,2.621,576,5.221,1044,5.861,1639,2.508,2621,3.499,2622,6.503,2623,5.861,2624,5.861,2625,6.503,2626,3.499,2627,3.499,2628,3.499,2629,3.499,2630,3.499,2631,3.499,2632,3.499,2633,3.499,2634,3.499,2635,5.861,2636,3.499,2637,3.499,2638,3.499,2639,3.499,2640,3.499,2641,3.499,2642,3.499]],["title/classes/TransactionDto.html",[41,0.305,2643,3.929]],["body/classes/TransactionDto.html",[3,0.043,4,0.043,5,0.038,7,0.626,16,0.84,19,0.004,21,1.146,29,0.232,40,0.043,41,0.501,70,0.003,71,0.003,151,1.262,158,1.34,159,1.651,172,3.146,241,0.725,504,3.919,506,2.849,516,6.716,582,3.037,584,2.092,1114,4.106,1134,5.722,1332,6.168,2643,6.446,2644,6.914,2645,6.914,2646,6.914]],["title/classes/TransactionQueryDto.html",[41,0.305,2647,4.387]],["body/classes/TransactionQueryDto.html",[3,0.046,4,0.046,5,0.04,7,0.66,16,0.712,19,0.004,21,1.33,29,0.299,40,0.046,41,0.518,70,0.003,71,0.003,151,1.304,159,1.4,241,0.766,583,2.788,584,2.209,806,4.169,1633,7.189,1639,5.232,2647,7.441,2648,8.897,2649,7.299,2650,7.299,2651,7.299]],["title/controllers/TransactionsController.html",[183,1.811,2652,4.387]],["body/controllers/TransactionsController.html",[3,0.019,4,0.019,5,0.016,7,0.269,8,1.497,16,0.756,18,2.515,19,0.004,20,2.399,21,1.357,22,2.485,27,2.427,29,0.322,34,0.548,40,0.019,41,0.173,44,0.933,49,2.573,51,1.86,61,1.446,63,2.798,64,2.702,70,0.002,71,0.002,89,1.158,91,1.917,111,1.015,152,2.53,159,1.486,172,2.782,183,1.028,185,1.015,187,1.42,193,3.775,194,1.348,198,4.015,199,1.474,200,1.474,201,2.052,202,2.417,209,1.209,212,1.305,214,1.326,215,1.082,218,3.247,282,3.665,283,1.758,289,2.052,290,1.916,322,3.901,394,2.052,403,1.859,405,2.052,420,3.536,438,3.384,548,1.806,560,3.384,574,1.98,607,1.348,608,2.49,610,2.052,611,1.806,612,2.052,628,6.087,671,4.205,748,8.348,753,2.346,773,7.814,774,5.287,775,5.287,889,2.49,1055,2.052,1315,2.702,1316,2.212,1346,2.134,1639,2.134,1641,6.477,1732,3.719,2274,2.052,2326,4.621,2647,7.428,2652,3.948,2653,2.977,2654,2.49,2655,4.721,2656,4.255,2657,5.866,2658,4.721,2659,5.866,2660,5.866,2661,2.977,2662,2.977,2663,2.977,2664,2.977,2665,2.977,2666,2.977,2667,2.977,2668,2.977,2669,2.977,2670,2.977,2671,2.977,2672,2.977,2673,4.721,2674,2.977,2675,2.977,2676,4.721,2677,4.721,2678,4.721,2679,2.977,2680,2.684,2681,2.346,2682,2.684,2683,2.49,2684,2.684,2685,2.977,2686,2.977,2687,2.977,2688,2.977,2689,2.977,2690,2.977,2691,2.977,2692,2.977,2693,2.977,2694,2.977,2695,2.977,2696,2.977,2697,2.977,2698,2.977,2699,6.98,2700,2.977,2701,2.684,2702,2.977,2703,2.977,2704,2.977,2705,2.977]],["title/modules/TransactionsModule.html",[134,1.606,644,3.615]],["body/modules/TransactionsModule.html",[3,0.033,4,0.033,5,0.029,19,0.004,29,0.349,34,0.965,40,0.033,41,0.305,70,0.003,71,0.003,134,2.197,136,2.191,137,3.145,141,3.25,142,2.372,143,2.372,145,3.25,146,3.772,185,2.447,227,6.131,228,6.335,231,3.423,233,3.016,234,2.333,235,4.127,236,4.381,447,6.131,462,4.127,643,6.131,644,7.344,647,4.127,671,7.438,848,6.829,866,4.722,1642,5.654,1762,5.376,1763,3.178,2652,6.847,2680,4.722,2706,4.722,2707,4.722,2708,4.722,2709,5.239,2710,5.239,2711,5.239,2712,4.127,2713,4.722,2714,4.722,2715,5.239]],["title/injectables/TransactionsService.html",[32,1.517,671,3.759]],["body/injectables/TransactionsService.html",[3,0.008,4,0.008,5,0.007,7,0.121,8,0.756,9,3.81,11,1.029,16,0.604,18,1.638,19,0.004,20,1.562,21,1.116,22,1.618,27,1.717,29,0.312,32,0.69,34,0.245,40,0.008,41,0.078,43,3.114,44,2.766,49,2.657,50,0.686,51,2.346,56,3.528,60,3.787,61,4.209,63,3.762,64,2.09,70,0.001,71,0.001,72,0.557,77,3.5,89,2.524,91,2.225,105,1.114,106,2.957,108,0.368,151,0.35,153,0.918,157,1.447,158,0.978,172,2.312,181,0.399,209,0.968,210,1.644,212,0.584,215,1.649,218,2.018,234,0.593,243,0.603,258,3.526,259,3.644,260,0.731,261,0.731,266,2.524,281,2.426,282,1.778,283,0.787,284,0.715,285,0.787,287,1.573,288,0.886,289,1.644,290,0.857,291,1.049,292,1.114,293,0.918,294,0.998,295,0.886,296,0.955,297,2.718,298,2.084,301,4.165,303,2.827,306,1.114,313,3.599,314,0.998,315,0.955,318,0.857,322,0.886,323,2.955,324,4.862,325,3.018,337,2.552,342,3.869,356,1.114,368,0.787,467,3.928,469,3.526,482,1.049,484,1.049,500,1.644,501,1.049,502,1.049,503,1.049,504,1.65,506,1.334,540,2.15,546,3.575,548,4.371,560,3.253,574,0.886,585,1.965,643,0.857,647,1.049,670,3.644,671,1.71,685,1.114,695,1.201,697,1.201,700,4.177,719,0.484,762,0.955,763,1.049,764,0.886,800,1.114,878,3.253,879,0.955,976,0.857,1013,1.201,1021,1.644,1071,2.919,1074,1.114,1076,1.879,1079,1.049,1080,1.049,1081,0.998,1082,1.049,1083,4.09,1084,1.201,1086,1.201,1088,1.995,1089,2.15,1090,2.15,1091,1.201,1092,1.201,1093,1.201,1094,2.15,1095,2.15,1096,1.201,1097,2.15,1098,1.201,1247,1.114,1292,0.593,1326,1.644,1327,0.998,1328,1.114,1346,0.955,1394,2.709,1395,1.201,1466,3.299,1536,1.201,1599,4.473,1633,0.998,1639,0.955,1641,1.114,1642,4.317,1648,1.114,1732,1.879,1763,0.808,1773,0.998,1786,0.998,1787,0.998,1822,0.998,1945,1.049,1946,1.201,2106,2.15,2123,1.201,2146,0.998,2147,1.049,2173,1.71,2175,1.114,2178,1.114,2242,0.955,2274,3.777,2324,1.114,2325,1.049,2326,1.879,2466,1.114,2623,2.919,2624,1.201,2643,0.998,2654,4.583,2656,2.15,2681,1.049,2682,1.201,2684,1.201,2712,4.317,2713,1.201,2714,1.201,2716,1.201,2717,2.385,2718,3.944,2719,3.944,2720,2.385,2721,3.239,2722,2.385,2723,3.239,2724,1.332,2725,2.385,2726,1.332,2727,1.332,2728,1.332,2729,1.332,2730,3.239,2731,1.332,2732,1.332,2733,1.332,2734,1.332,2735,1.332,2736,1.332,2737,1.332,2738,1.332,2739,1.332,2740,3.239,2741,3.555,2742,1.332,2743,1.332,2744,1.332,2745,1.332,2746,1.332,2747,3.944,2748,2.385,2749,1.332,2750,3.239,2751,1.201,2752,1.332,2753,6.495,2754,3.239,2755,3.239,2756,1.332,2757,1.332,2758,2.919,2759,3.239,2760,3.239,2761,1.332,2762,1.332,2763,3.944,2764,1.332,2765,2.385,2766,2.385,2767,3.944,2768,3.944,2769,1.332,2770,2.385,2771,2.385,2772,3.944,2773,2.385,2774,1.332,2775,3.944,2776,1.332,2777,2.385,2778,2.385,2779,2.385,2780,1.332,2781,1.201,2782,1.332,2783,1.332,2784,1.332,2785,1.332,2786,1.332,2787,1.332,2788,1.332,2789,2.385,2790,1.332,2791,1.332,2792,1.332,2793,1.201,2794,1.332,2795,1.332,2796,1.332,2797,1.332,2798,1.332,2799,1.332,2800,1.332,2801,1.332,2802,1.332,2803,1.332,2804,1.332,2805,2.385,2806,1.332,2807,2.385,2808,1.332,2809,1.332,2810,1.332,2811,1.332,2812,1.201,2813,1.332,2814,1.332,2815,1.332,2816,1.332,2817,1.332,2818,1.332,2819,1.332,2820,1.332,2821,1.332,2822,1.332,2823,1.201,2824,1.332,2825,1.332,2826,1.332,2827,1.332,2828,1.332,2829,1.332,2830,1.332,2831,1.201,2832,1.995,2833,1.332,2834,1.332,2835,1.332,2836,1.332,2837,1.332,2838,1.201,2839,1.332,2840,1.332,2841,1.332,2842,1.332,2843,1.332,2844,1.332]],["title/classes/Transfer.html",[41,0.305,101,2.099]],["body/classes/Transfer.html",[3,0.034,4,0.034,5,0.03,7,0.487,16,0.959,19,0.004,21,1.35,29,0.279,40,0.034,41,0.314,70,0.003,71,0.003,101,2.927,151,1.072,152,4.551,158,1.727,159,1.885,160,4.45,172,2.665,175,5.53,176,3.268,181,1.612,182,1.836,218,2.927,241,0.565,504,3.474,521,5.953,522,5.243,523,6.543,524,5.243,528,4.437,548,5.038,551,5.763,552,7.019,560,5.953,567,3.582,568,5.523,569,4.244,570,3.466,571,4.244,572,3.861,573,4.244,574,3.582,575,4.035,2845,5.387,2846,5.387,2847,5.387,2848,5.387,2849,5.387]],["title/entities/TransferRequest.html",[98,2.299,147,1.811]],["body/entities/TransferRequest.html",[3,0.032,4,0.032,5,0.028,7,0.457,16,0.919,19,0.004,21,1.331,29,0.306,40,0.032,41,0.294,51,2.749,70,0.003,71,0.003,95,2.112,98,3.067,99,4.374,101,2.8,103,3.096,104,1.937,147,2.416,149,2.287,151,1.026,152,4.593,159,1.807,160,4.459,165,3.931,172,2.782,180,4.512,181,1.511,182,1.268,287,4.576,288,3.358,711,2.907,712,2.907,719,1.835,2374,6.326,2376,3.782,2377,4.223,2850,5.049,2851,8.03,2852,8.03,2853,8.03,2854,8.03,2855,5.049,2856,6.997,2857,5.049,2858,5.049,2859,6.997,2860,5.049,2861,5.049,2862,5.049,2863,5.049]],["title/classes/TransferRequestRepository.html",[41,0.305,2864,4.132]],["body/classes/TransferRequestRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.308,40,0.048,41,0.447,70,0.003,71,0.003,98,3.363,100,3.475,181,2.296,182,2.302,241,0.805,243,4.441,244,4.12,2864,7.224,2865,7.673,2866,7.673,2867,7.673,2868,7.673]],["title/controllers/TransfersController.html",[183,1.811,2869,4.387]],["body/controllers/TransfersController.html",[3,0.037,4,0.037,5,0.032,19,0.004,29,0.322,34,1.078,40,0.037,41,0.341,49,3.182,70,0.003,71,0.003,111,1.996,158,1.678,183,2.021,185,1.996,187,2.792,190,3.288,193,4.976,194,3.502,198,3.688,199,2.897,200,2.897,201,4.033,202,3.186,209,2.376,212,2.565,214,2.607,215,2.127,218,3.465,368,3.456,394,4.033,397,4.195,401,4.195,403,3.653,405,4.033,416,6.467,420,4.384,436,4.195,438,4.195,440,4.195,889,4.895,1353,6.487,1357,4.895,2146,5.792,2869,6.467,2870,5.853,2871,4.895,2872,6.487,2873,5.275,2874,7.258,2875,5.853,2876,5.853,2877,7.732,2878,5.853,2879,5.853,2880,5.853,2881,5.853,2882,5.853,2883,5.853,2884,5.853]],["title/modules/TransfersModule.html",[134,1.606,852,3.929]],["body/modules/TransfersModule.html",[3,0.037,4,0.037,5,0.033,19,0.004,29,0.347,34,1.087,40,0.037,41,0.344,70,0.003,71,0.003,134,2.381,136,2.469,137,3.408,141,3.521,142,2.673,143,2.673,145,3.521,185,2.652,229,5.824,231,3.709,233,3.398,234,2.629,447,6.347,462,4.65,463,4.936,852,7.807,858,4.65,2379,6.126,2490,6.126,2864,6.126,2869,7.273,2872,7.388,2873,5.32,2885,5.32,2886,5.32,2887,5.902,2888,5.902,2889,5.902,2890,5.32,2891,7.008,2892,5.32,2893,5.32,2894,5.32]],["title/injectables/TransfersService.html",[32,1.517,2872,3.929]],["body/injectables/TransfersService.html",[3,0.03,4,0.03,5,0.026,9,2.014,11,2.888,16,0.463,18,1.54,19,0.004,20,1.468,21,0.631,22,1.521,28,3.267,29,0.346,32,1.936,34,0.873,40,0.03,41,0.276,43,4.112,44,3.037,56,2.393,70,0.002,71,0.002,72,1.983,101,1.897,181,2.003,209,1.925,212,2.078,215,2.434,234,2.112,243,2.147,261,5.21,282,2.603,283,2.8,285,2.8,301,4.046,466,4.273,467,6.618,469,6.107,482,3.735,500,3.267,501,3.735,502,3.735,503,3.735,504,1.983,997,3.965,1353,6.318,1356,4.273,1357,3.965,1934,4.273,2146,5.015,2379,7.476,2436,3.735,2490,7.476,2864,7.476,2872,5.015,2874,3.735,2890,4.273,2891,6.035,2892,4.273,2893,4.273,2894,4.273,2895,4.741,2896,4.741,2897,4.741,2898,4.273,2899,4.741,2900,4.741,2901,4.741,2902,4.741,2903,4.741,2904,4.741,2905,4.741,2906,6.696,2907,4.741,2908,4.741,2909,4.741,2910,4.741,2911,4.741,2912,4.741,2913,4.741,2914,4.741]],["title/entities/TvSubscriptionActivity.html",[147,1.811,492,3.615]],["body/entities/TvSubscriptionActivity.html",[3,0.034,4,0.034,5,0.03,7,0.487,16,0.909,19,0.004,21,1.331,29,0.313,40,0.034,41,0.314,51,2.954,70,0.003,71,0.003,103,2.885,104,2.066,106,5.172,107,3.181,147,2.526,149,2.439,151,1.072,158,1.418,159,1.787,160,4.35,165,4.11,172,2.347,180,4.666,181,1.612,182,1.352,360,3.712,460,6.621,489,3.181,492,5.041,519,4.319,709,4.244,710,6.221,711,3.101,712,3.101,713,4.244,715,4.244,717,4.244,718,4.244,719,1.958,1107,4.276,1109,5.953,1509,7.568,2915,7.314,2916,5.387,2917,7.314,2918,5.387,2919,5.387]],["title/classes/TvSubscriptionActivityRepository.html",[41,0.305,458,4.132]],["body/classes/TvSubscriptionActivityRepository.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.307,40,0.048,41,0.444,70,0.003,71,0.003,181,2.279,182,2.292,241,0.799,243,4.427,244,4.09,458,7.193,460,6.292,489,4.498,492,5.249,493,6.866,722,6.001,2920,7.617,2921,7.617]],["title/classes/Twillio.html",[41,0.305,2922,4.387]],["body/classes/Twillio.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,2922,7.983,2923,8.214]],["title/controllers/TwillioController.html",[183,1.811,2924,4.387]],["body/controllers/TwillioController.html",[3,0.045,4,0.045,5,0.04,19,0.004,29,0.334,34,1.326,40,0.045,41,0.419,70,0.003,71,0.003,111,2.455,183,2.486,185,2.455,187,3.434,194,3.26,198,3.434,199,3.563,200,3.563,209,2.923,212,3.155,214,3.206,215,2.617,1375,5.671,2610,6.838,2922,6.021,2924,7.379,2925,7.199,2926,6.488,2927,7.952,2928,6.021,2929,7.199]],["title/modules/TwillioModule.html",[134,1.606,853,3.759]],["body/modules/TwillioModule.html",[3,0.043,4,0.043,5,0.038,19,0.004,29,0.313,34,1.257,40,0.043,41,0.397,70,0.003,71,0.003,134,2.613,136,2.854,137,3.741,141,3.865,142,3.09,143,3.09,145,3.865,146,4.486,185,2.911,853,7.453,2610,7.734,2924,7.79,2926,6.151,2930,6.151,2931,6.151,2932,6.151,2933,6.824,2934,6.824]],["title/injectables/TwillioService.html",[32,1.517,2610,3.759]],["body/injectables/TwillioService.html",[3,0.027,4,0.027,5,0.024,7,0.396,8,2.005,9,4.106,11,1.887,16,0.842,18,2.641,19,0.004,20,2.519,21,1.148,22,2.609,27,2.326,29,0.25,32,1.828,34,0.806,40,0.027,41,0.255,43,3.306,44,2.817,49,1.387,56,3.746,60,3.901,61,3.95,63,3.879,64,2.912,70,0.002,71,0.002,72,1.83,151,0.927,158,1.995,198,4.114,214,1.949,215,1.59,260,4.935,266,2.015,284,2.349,301,3.253,325,2.909,663,5.785,1227,4.357,1772,3.277,2097,5.698,2593,3.943,2594,3.659,2610,4.532,2615,6.406,2618,6.406,2741,3.943,2832,5.288,2935,4.375,2936,7.423,2937,6.322,2938,6.322,2939,6.322,2940,6.322,2941,6.322,2942,4.375,2943,5.698,2944,4.375,2945,6.322,2946,4.375,2947,4.375,2948,4.375,2949,4.375,2950,4.375,2951,4.375,2952,6.322,2953,6.322,2954,6.322,2955,6.322,2956,6.322,2957,4.375,2958,4.375,2959,4.375,2960,4.375,2961,4.375,2962,4.375,2963,4.375,2964,4.375]],["title/classes/UpdateAccountDto.html",[41,0.305,211,4.387]],["body/classes/UpdateAccountDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,208,5.561,210,5.347,211,7.72,241,0.814,1229,5.561,2965,7.758,2966,3.573,2967,3.513,2968,3.513,2969,7.758]],["title/classes/UpdateActivityDto.html",[41,0.305,400,4.132]],["body/classes/UpdateActivityDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,390,5.811,400,7.272,414,6.488,1238,6.993,2966,3.573,2967,3.513,2968,3.513,2970,7.758,2971,7.758]],["title/classes/UpdateAirtimeDto.html",[41,0.305,2972,4.727]],["body/classes/UpdateAirtimeDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,409,5.811,1132,5.561,1239,6.488,2966,3.573,2967,3.513,2968,3.513,2972,8.319,2973,7.758,2974,7.758]],["title/classes/UpdateAnnouncementDto.html",[41,0.305,768,4.132]],["body/classes/UpdateAnnouncementDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,745,5.561,767,6.488,768,7.272,803,6.488,2966,3.573,2967,3.513,2968,3.513,2975,7.758,2976,7.758]],["title/classes/UpdateAuthDto.html",[41,0.305,2977,4.727]],["body/classes/UpdateAuthDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1243,6.488,1245,6.993,2966,3.573,2967,3.513,2968,3.513,2977,8.319,2978,7.758,2979,7.758,2980,7.758]],["title/classes/UpdateElectricitybillDto.html",[41,0.305,2981,4.727]],["body/classes/UpdateElectricitybillDto.html",[3,0.048,4,0.048,5,0.043,19,0.004,29,0.309,40,0.048,41,0.449,70,0.003,71,0.003,108,2.13,182,1.933,241,0.808,1254,7.686,1256,6.941,2966,4.232,2967,3.487,2968,3.487,2981,8.283,2982,7.701,2983,7.701]],["title/classes/UpdateEmailDto.html",[41,0.305,1675,4.387]],["body/classes/UpdateEmailDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1257,5.811,1259,6.112,1674,5.561,1675,7.72,2966,3.573,2967,3.513,2968,3.513,2984,7.758,2985,7.758]],["title/classes/UpdateHealthDto.html",[41,0.305,2986,4.727]],["body/classes/UpdateHealthDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1267,6.488,1269,6.993,2966,3.573,2967,3.513,2968,3.513,2986,8.319,2987,7.758,2988,7.758,2989,7.758]],["title/classes/UpdateLogDto.html",[41,0.305,2017,4.132]],["body/classes/UpdateLogDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1270,5.811,1272,6.993,2016,6.488,2017,7.272,2966,3.573,2967,3.513,2968,3.513,2990,7.758,2991,7.758]],["title/classes/UpdateMerchantApiDto.html",[41,0.305,2054,4.132]],["body/classes/UpdateMerchantApiDto.html",[3,0.048,4,0.048,5,0.042,19,0.004,29,0.308,40,0.048,41,0.447,70,0.003,71,0.003,108,2.123,156,5.562,182,1.926,241,0.805,1273,5.747,1274,5.102,1276,6.916,2054,7.224,2058,6.417,2966,3.534,2967,3.475,2968,3.475,2992,7.673,2993,7.673]],["title/classes/UpdateMobiledatumDto.html",[41,0.305,2994,4.727]],["body/classes/UpdateMobiledatumDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1277,6.488,1279,6.993,2966,3.573,2967,3.513,2968,3.513,2994,8.319,2995,7.758,2996,7.758,2997,7.758]],["title/classes/UpdateMonnifyDto.html",[41,0.305,2089,4.387]],["body/classes/UpdateMonnifyDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1280,6.112,1282,6.993,2088,6.993,2089,7.72,2966,3.573,2967,3.513,2968,3.513,2998,7.758,2999,7.758]],["title/classes/UpdateNodemailerDto.html",[41,0.305,3000,4.727]],["body/classes/UpdateNodemailerDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1283,6.488,1285,6.993,2966,3.573,2967,3.513,2968,3.513,3000,8.319,3001,7.758,3002,7.758,3003,7.758]],["title/classes/UpdatePaystackDto.html",[41,0.305,2268,4.132]],["body/classes/UpdatePaystackDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1286,5.811,1288,6.993,2268,7.272,2276,6.488,2966,3.573,2967,3.513,2968,3.513,3004,7.758,3005,7.758]],["title/classes/UpdateReferralDto.html",[41,0.305,2399,4.132]],["body/classes/UpdateReferralDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1319,5.811,1321,6.993,2399,7.272,2403,6.488,2966,3.573,2967,3.513,2968,3.513,3006,7.758,3007,7.758]],["title/classes/UpdateRoleDto.html",[41,0.305,3008,4.727]],["body/classes/UpdateRoleDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1333,6.488,1335,6.993,2966,3.573,2967,3.513,2968,3.513,3008,8.319,3009,7.758,3010,7.758,3011,7.758]],["title/classes/UpdateSettingDto.html",[41,0.305,683,3.929]],["body/classes/UpdateSettingDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,680,5.561,682,6.112,683,6.914,684,6.993,1338,6.993,2966,3.573,2967,3.513,2968,3.513,3012,7.758]],["title/classes/UpdateTransactionDto.html",[41,0.305,2681,4.132]],["body/classes/UpdateTransactionDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1346,5.561,1348,6.488,2326,6.112,2681,7.272,2966,3.573,2967,3.513,2968,3.513,3013,7.758,3014,7.758]],["title/classes/UpdateTransferDto.html",[41,0.305,2874,4.132]],["body/classes/UpdateTransferDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1353,5.811,1355,6.488,2146,5.811,2874,7.272,2966,3.573,2967,3.513,2968,3.513,3015,7.758,3016,7.758]],["title/classes/UpdateTvsubscriptionDto.html",[41,0.305,3017,4.727]],["body/classes/UpdateTvsubscriptionDto.html",[3,0.048,4,0.048,5,0.043,19,0.004,29,0.309,40,0.048,41,0.449,70,0.003,71,0.003,108,2.13,182,1.933,241,0.808,1372,7.686,1374,6.941,2966,4.232,2967,3.487,2968,3.487,3017,8.283,3018,7.701,3019,7.701]],["title/classes/UpdateTwillioDto.html",[41,0.305,2928,4.387]],["body/classes/UpdateTwillioDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1375,6.112,1377,6.993,2927,6.993,2928,7.72,2966,3.573,2967,3.513,2968,3.513,3020,7.758,3021,7.758]],["title/classes/UpdateUserDto.html",[41,0.305,3022,4.387]],["body/classes/UpdateUserDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,613,5.347,615,5.811,1378,6.993,2966,3.573,2967,3.513,2968,3.513,3022,7.72,3023,7.758,3024,7.758]],["title/classes/UpdateVtpassDto.html",[41,0.305,3025,4.132]],["body/classes/UpdateVtpassDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1400,5.811,1402,6.993,2966,3.573,2967,3.513,2968,3.513,3025,7.272,3026,7.758,3027,6.488,3028,7.758]],["title/classes/UpdateWalletDto.html",[41,0.305,3029,4.132]],["body/classes/UpdateWalletDto.html",[3,0.049,4,0.049,5,0.043,19,0.004,29,0.31,40,0.049,41,0.452,70,0.003,71,0.003,108,2.146,182,1.948,241,0.814,1403,5.811,1405,6.993,2966,3.573,2967,3.513,2968,3.513,3029,7.272,3030,7.758,3031,6.488,3032,7.758]],["title/classes/User.html",[41,0.305,51,1.663]],["body/classes/User.html",[3,0.031,4,0.031,5,0.027,7,0.447,16,0.971,19,0.004,21,1.325,29,0.267,40,0.031,41,0.402,50,4.817,51,2.186,70,0.003,71,0.003,151,1.011,152,4.564,158,1.991,159,1.909,160,4.505,172,1.586,175,5.386,176,2.998,181,1.479,182,1.731,218,2.758,241,0.519,506,3.271,522,4.941,524,4.941,528,4.182,561,3.702,567,3.287,568,5.279,569,3.894,570,3.18,571,3.894,572,3.543,573,3.894,575,3.702,576,3.543,663,5.109,917,4.816,1345,3.702,1379,6.254,1380,6.254,1505,5.766,3033,4.942,3034,7.938,3035,6.894,3036,4.942,3037,4.942,3038,4.942,3039,4.942,3040,4.942,3041,4.942,3042,4.942,3043,6.894]],["title/controllers/UserController.html",[183,1.811,3044,4.387]],["body/controllers/UserController.html",[1,2.642,3,0.021,4,0.021,5,0.019,7,0.303,8,1.643,9,3.457,16,0.855,18,2.643,19,0.004,20,2.521,21,0.69,22,2.612,27,2.747,29,0.309,34,0.618,40,0.021,41,0.195,44,2.413,49,3.011,51,2.442,70,0.002,71,0.002,108,1.433,111,1.144,118,3.882,152,3.511,159,1.682,183,1.158,185,1.144,187,1.6,192,2.642,193,4.955,194,2.868,198,3.883,199,1.66,200,1.66,201,2.311,202,1.382,206,2.311,207,3.023,209,1.362,212,1.47,214,1.494,215,1.219,218,3.257,261,3.476,266,2.387,301,2.271,313,1.726,403,2.093,404,2.512,405,2.311,416,5.958,433,2.311,506,3.354,607,1.519,608,2.805,610,2.311,611,2.034,612,2.311,613,5.61,615,3.882,628,7.097,663,4.075,700,2.158,753,2.642,999,4.334,1055,2.311,1227,2.311,1298,2.428,1300,3.338,1315,1.545,1674,2.404,1720,3.023,2615,4.082,2701,3.023,3022,2.805,3044,4.334,3045,3.354,3046,4.671,3047,5.182,3048,7.123,3049,7.7,3050,5.182,3051,5.182,3052,4.671,3053,3.023,3054,3.354,3055,3.354,3056,3.354,3057,3.354,3058,3.354,3059,3.354,3060,3.354,3061,3.354,3062,3.354,3063,3.354,3064,3.354,3065,3.354,3066,3.354,3067,3.354,3068,3.354,3069,3.354,3070,3.354,3071,3.354,3072,7.097,3073,3.354,3074,3.354,3075,3.354,3076,3.023,3077,3.354,3078,3.354,3079,3.354,3080,3.354,3081,3.354,3082,3.354,3083,3.354,3084,3.354,3085,5.182,3086,5.182,3087,5.182,3088,3.354,3089,3.354,3090,3.354,3091,3.354,3092,3.354,3093,3.354,3094,3.354,3095,3.354,3096,3.354,3097,3.354,3098,3.354,3099,3.354,3100,3.354,3101,3.354,3102,3.354,3103,3.354,3104,3.354]],["title/modules/UserModule.html",[134,1.606,229,3.097]],["body/modules/UserModule.html",[3,0.033,4,0.033,5,0.029,19,0.004,29,0.348,34,0.958,40,0.033,41,0.303,70,0.003,71,0.003,134,2.186,135,6.813,136,2.175,137,3.129,141,3.233,142,2.355,143,2.355,145,3.233,146,3.752,185,2.435,229,6.287,231,3.406,233,2.993,234,2.316,261,5.689,463,4.349,644,6.551,648,4.687,652,5.625,843,6.813,849,6.813,851,6.813,1540,5.625,1545,5.625,3044,6.82,3076,4.687,3105,4.687,3106,4.687,3107,5.2,3108,4.687,3109,5.2,3110,5.2,3111,5.2,3112,5.2,3113,5.2,3114,5.2,3115,4.687,3116,4.687,3117,4.687,3118,4.687]],["title/injectables/UserService.html",[32,1.517,261,2.879]],["body/injectables/UserService.html",[3,0.007,4,0.007,5,0.006,7,0.1,8,0.639,9,4.24,11,0.869,16,0.718,18,2.222,19,0.004,20,2.119,21,0.854,22,2.195,27,2.257,28,2.359,29,0.269,32,0.582,34,0.203,40,0.007,41,0.064,43,2.177,44,2.922,49,2.87,50,1.429,51,2.538,56,4.421,60,4.604,61,4.79,63,4.408,64,2.841,70,0.001,71,0.001,72,0.462,77,2.557,86,0.827,87,0.792,88,0.792,103,1.514,106,2.825,107,0.652,118,3.344,119,1.587,124,1.587,157,2.076,158,1.482,172,2.691,181,0.331,209,0.448,215,1.009,218,2.24,234,0.492,243,0.5,260,2.684,261,1.106,266,3.151,282,1.524,283,0.652,284,0.593,285,0.652,287,0.978,288,0.735,301,4.367,303,3.773,305,2.079,306,2.863,313,2.517,314,0.827,315,1.444,318,1.296,322,1.339,337,0.87,340,2.863,345,1.846,467,3.504,500,1.913,501,1.587,502,1.587,503,1.587,506,3.203,585,3.193,587,0.761,592,1.815,596,0.996,599,2.502,613,3.369,615,0.827,652,3.851,654,1.684,655,1.587,657,2.322,659,2.187,663,2.561,689,1.815,700,2.203,876,0.87,917,1.684,923,0.792,931,1.815,946,0.761,959,3.2,998,1.509,1000,1.509,1008,1.815,1015,1.684,1108,0.978,1227,1.913,1322,0.924,1323,0.924,1379,1.587,1380,0.87,1381,4.411,1454,1.684,1457,0.924,1464,0.924,1465,1.684,1473,0.827,1491,0.711,1511,0.924,1514,0.924,1522,1.815,1540,3.851,1543,0.996,1545,3.517,1553,0.996,1672,3.504,1713,3.587,1792,1.815,1907,3.328,2003,0.996,2173,0.792,2401,0.792,2433,0.996,2466,3.328,2580,3.587,2595,3.504,2608,0.996,2615,1.587,2654,2.322,2781,3.085,2793,0.996,2831,1.815,2838,1.815,2871,2.322,2943,0.996,3046,1.815,3052,1.815,3053,1.815,3115,0.996,3116,0.996,3117,0.996,3118,0.996,3119,1.105,3120,2.014,3121,2.014,3122,4.023,3123,2.014,3124,2.014,3125,2.014,3126,2.014,3127,3.423,3128,3.423,3129,2.014,3130,1.105,3131,1.105,3132,1.105,3133,2.014,3134,1.105,3135,2.014,3136,1.105,3137,2.776,3138,1.105,3139,1.105,3140,2.014,3141,1.105,3142,2.014,3143,1.105,3144,1.105,3145,1.105,3146,2.014,3147,1.105,3148,2.014,3149,1.105,3150,1.105,3151,1.105,3152,2.776,3153,1.105,3154,2.776,3155,1.105,3156,2.776,3157,1.105,3158,1.105,3159,1.105,3160,0.996,3161,1.105,3162,0.87,3163,0.924,3164,1.105,3165,1.105,3166,1.105,3167,1.105,3168,1.105,3169,2.776,3170,1.105,3171,1.105,3172,1.105,3173,1.105,3174,4.464,3175,1.105,3176,2.776,3177,3.423,3178,1.105,3179,2.776,3180,1.105,3181,4.464,3182,1.105,3183,1.105,3184,3.423,3185,1.105,3186,2.014,3187,1.105,3188,1.105,3189,2.776,3190,0.996,3191,1.105,3192,2.014,3193,1.105,3194,1.105,3195,1.105,3196,1.105,3197,1.105,3198,1.105,3199,1.105,3200,1.105,3201,1.105,3202,2.014,3203,1.105,3204,1.105,3205,1.105,3206,1.105,3207,1.105,3208,1.105,3209,1.105,3210,1.815,3211,1.815,3212,1.815,3213,1.105,3214,3.423,3215,2.014,3216,2.014,3217,1.105,3218,2.014,3219,2.014,3220,1.105,3221,1.105,3222,2.014,3223,1.105,3224,4.464,3225,1.105,3226,3.423,3227,1.105,3228,1.105,3229,1.105,3230,1.105,3231,1.105,3232,1.105,3233,1.105,3234,1.105,3235,1.105,3236,1.105,3237,1.105,3238,1.105,3239,1.105,3240,2.776,3241,1.105,3242,1.105,3243,1.105,3244,1.105,3245,1.105,3246,1.105,3247,1.105,3248,1.105,3249,1.105,3250,1.105]],["title/classes/UssdDepositData.html",[41,0.305,1040,4.132]],["body/classes/UssdDepositData.html",[3,0.036,4,0.036,5,0.032,7,0.517,16,0.953,19,0.004,21,1.301,29,0.288,40,0.048,41,0.498,70,0.003,71,0.003,151,1.115,158,1.964,159,1.875,182,2.147,241,0.599,287,3.695,504,3.181,506,3.134,568,6.318,582,2.649,583,2.681,584,1.728,1018,4.498,1019,5.146,1020,5.242,1021,6.287,1026,3.506,1036,4.092,1037,5.992,1038,7.589,1039,4.775,1040,5.992,1734,5.698,3251,6.856,3252,5.709,3253,5.709,3254,5.709,3255,5.709,3256,5.709,3257,5.709]],["title/classes/UssdDepositDto.html",[41,0.305,1038,3.929]],["body/classes/UssdDepositDto.html",[3,0.038,4,0.038,5,0.034,7,0.554,16,0.948,19,0.004,21,1.294,29,0.206,40,0.038,41,0.464,70,0.003,71,0.003,151,1.168,158,2.033,159,1.865,241,0.643,287,4.302,504,3.704,506,3.648,582,3.086,583,3.123,584,1.854,1026,3.488,1038,5.968,1043,4.826,1734,6.633,1938,5.124,1939,5.522,1940,5.124,1941,5.522,1943,5.522,3251,7.981,3258,9.964]],["title/classes/ValidateAccountDto.html",[41,0.305,3259,4.727]],["body/classes/ValidateAccountDto.html",[3,0.047,4,0.047,5,0.041,7,0.677,16,0.881,19,0.004,21,1.202,40,0.047,41,0.436,70,0.003,71,0.003,151,1.324,154,5.729,155,6.243,158,1.953,241,0.785,1229,5.363,3259,8.14,3260,9.701,3261,7.481,3262,7.481]],["title/classes/ValidateAirtimeDto.html",[41,0.305,3263,4.727]],["body/classes/ValidateAirtimeDto.html",[3,0.045,4,0.045,5,0.04,7,0.654,16,0.932,19,0.004,21,1.272,40,0.045,41,0.421,70,0.003,71,0.003,151,1.296,158,2.014,241,0.758,1132,5.178,1838,8.611,1839,8.611,1840,8.611,3263,7.969,3264,9.955,3265,7.223,3266,7.223,3267,7.223]],["title/classes/ValidateDepositDto.html",[41,0.305,1795,4.387]],["body/classes/ValidateDepositDto.html",[3,0.044,4,0.044,5,0.039,7,0.638,16,0.85,19,0.004,21,1.16,29,0.237,40,0.044,41,0.507,70,0.003,71,0.003,151,1.277,158,1.914,159,1.672,241,0.74,582,2.928,583,2.963,584,2.135,1026,3.126,1043,5.557,1744,8.521,1795,7.287,1938,5.899,1940,5.899,3268,9.453,3269,9.453]],["title/classes/VerifyAccountNumberDto.html",[41,0.305,1054,3.615]],["body/classes/VerifyAccountNumberDto.html",[3,0.046,4,0.046,5,0.041,7,0.67,16,0.875,19,0.004,21,1.195,40,0.046,41,0.431,70,0.003,71,0.003,148,5.075,151,1.316,154,5.702,155,6.214,158,1.946,241,0.777,1054,6.184,1226,6.191,1228,6.672,3270,8.704,3271,7.402]],["title/classes/VerifyAccountNumberDto-1.html",[41,0.254,544,2.811,1054,3.01]],["body/classes/VerifyAccountNumberDto-1.html",[3,0.044,4,0.044,5,0.039,7,0.632,16,0.845,19,0.004,21,1.153,29,0.235,40,0.044,41,0.504,70,0.003,71,0.003,148,4.946,151,1.269,154,5.557,158,1.907,159,1.661,241,0.733,582,2.915,583,2.949,584,2.113,1026,3.106,1054,5.967,1226,5.84,2341,8.483,3272,9.411,3273,6.983,3274,6.983]],["title/classes/VerifyBvnDto.html",[41,0.305,1057,4.387]],["body/classes/VerifyBvnDto.html",[3,0.049,4,0.049,5,0.043,7,0.702,16,0.757,19,0.004,21,1.033,40,0.049,41,0.452,70,0.003,71,0.003,151,1.353,158,1.789,241,0.814,318,6.341,1057,7.72,3270,8.319,3275,7.758,3276,7.758]],["title/classes/VerifyEmailDTO.html",[41,0.305,3072,4.387]],["body/classes/VerifyEmailDTO.html",[3,0.045,4,0.045,5,0.04,7,0.654,16,0.863,19,0.004,29,0.243,40,0.045,41,0.515,70,0.003,71,0.003,151,1.296,159,1.696,241,0.758,506,3.937,582,2.738,583,2.994,584,2.186,1026,2.592,1227,6.584,1259,5.691,1262,6.511,1266,6.511,3072,7.394,3277,9.554,3278,7.223,3279,7.223,3280,7.223]],["title/classes/VerifySmartCardDto.html",[41,0.305,3281,4.132]],["body/classes/VerifySmartCardDto.html",[3,0.044,4,0.044,5,0.039,7,0.632,16,0.845,19,0.004,21,1.153,29,0.235,40,0.044,41,0.504,70,0.003,71,0.003,151,1.269,158,1.907,159,1.661,241,0.733,547,4.41,582,2.915,583,2.949,584,2.113,1026,3.106,1107,4.845,3281,6.821,3282,7.871,3283,7.871,3284,6.983,3285,6.983,3286,6.983]],["title/classes/VerifySmileEmailDto.html",[41,0.305,3287,4.132]],["body/classes/VerifySmileEmailDto.html",[3,0.044,4,0.044,5,0.038,7,0.628,16,0.841,19,0.004,21,1.148,29,0.233,40,0.044,41,0.502,70,0.003,71,0.003,151,1.264,158,1.903,159,1.654,241,0.728,547,4.397,582,2.906,583,2.94,584,2.099,1026,2.489,1107,4.83,1259,5.465,1332,6.181,3282,7.848,3287,6.793,3288,7.392,3289,6.937,3290,6.937,3291,6.937]],["title/classes/VerifySmilePhoneDto.html",[41,0.305,3292,4.132]],["body/classes/VerifySmilePhoneDto.html",[3,0.044,4,0.044,5,0.038,7,0.63,16,0.843,19,0.004,21,1.15,29,0.234,40,0.044,41,0.503,70,0.003,71,0.003,151,1.267,158,1.905,159,1.658,241,0.73,547,4.404,582,2.911,583,2.945,584,2.106,1026,3.1,1107,4.838,1390,6.273,3282,7.859,3288,7.403,3292,6.807,3293,6.96,3294,6.96,3295,6.96]],["title/classes/VerifyTransactionDto.html",[41,0.305,2683,4.387]],["body/classes/VerifyTransactionDto.html",[3,0.047,4,0.047,5,0.041,7,0.672,16,0.725,19,0.004,21,0.989,29,0.25,40,0.047,41,0.524,70,0.003,71,0.003,151,1.318,158,1.743,159,1.425,241,0.779,342,5.193,582,2.785,583,2.818,584,2.248,1026,2.665,1348,6.213,1350,6.695,2683,7.521,3296,8.993]],["title/classes/Vtpass.html",[41,0.305,3297,3.929]],["body/classes/Vtpass.html",[3,0.052,4,0.052,5,0.045,19,0.004,40,0.052,41,0.478,70,0.003,71,0.003,241,0.862,3297,7.15,3298,8.214]],["title/controllers/VtpassController.html",[183,1.811,3299,4.387]],["body/controllers/VtpassController.html",[3,0.015,4,0.015,5,0.013,7,0.217,8,1.258,16,0.936,18,3.062,19,0.004,20,2.921,21,1.229,22,3.026,27,3.007,29,0.31,34,0.442,40,0.015,41,0.14,49,3.066,70,0.001,71,0.001,89,0.934,108,1.097,111,0.819,158,1.559,159,1.841,183,0.829,185,0.819,187,1.145,190,3.306,194,2.295,198,2.417,199,1.189,200,1.189,209,0.975,212,1.052,214,1.07,215,0.873,218,2.807,363,3.317,366,2.476,367,2.476,368,2.342,376,2.008,377,4.378,381,4.844,386,4.378,393,1.499,394,2.734,396,1.499,397,2.843,399,1.499,401,2.843,408,5.526,409,1.799,410,1.892,413,1.892,417,3.575,418,2.164,421,3.575,424,3.575,433,1.655,436,1.721,440,1.721,468,3.632,486,1.892,1055,3.492,1104,6.114,1121,4.636,1192,5.526,1210,5.526,1217,5.526,1400,5.254,1674,1.721,2273,4.921,2343,5.526,3025,6.114,3027,3.317,3281,5.526,3283,2.008,3287,5.526,3288,3.125,3292,5.526,3297,1.799,3299,3.317,3300,2.401,3301,3.575,3302,3.575,3303,3.575,3304,3.575,3305,3.966,3306,3.575,3307,3.966,3308,5.304,3309,4.567,3310,3.966,3311,3.575,3312,3.575,3313,3.575,3314,2.401,3315,2.164,3316,2.401,3317,2.401,3318,2.401,3319,2.164,3320,3.966,3321,2.401,3322,2.164,3323,3.966,3324,2.401,3325,2.164,3326,3.966,3327,2.401,3328,2.401,3329,3.966,3330,2.401,3331,2.164,3332,2.401,3333,2.401,3334,2.401,3335,2.401,3336,3.966,3337,2.401,3338,2.401,3339,3.966,3340,2.401,3341,3.966,3342,2.401,3343,2.164,3344,3.966,3345,2.401,3346,2.401,3347,2.401,3348,3.966,3349,2.401,3350,2.401,3351,2.164,3352,3.966,3353,2.401,3354,2.164,3355,3.966,3356,2.401,3357,2.164,3358,3.966,3359,2.401,3360,2.164,3361,2.164,3362,2.164,3363,2.164,3364,2.164,3365,3.575,3366,2.164,3367,2.164,3368,2.164,3369,2.164,3370,2.164,3371,2.401,3372,2.401,3373,2.401,3374,2.401,3375,2.401,3376,2.401,3377,2.401,3378,2.401,3379,2.401,3380,2.401,3381,2.401,3382,2.401,3383,2.401,3384,2.401,3385,2.401,3386,2.401,3387,2.401,3388,2.401,3389,2.401,3390,2.401,3391,2.401,3392,2.401,3393,2.401,3394,2.401,3395,2.401,3396,2.401,3397,2.401,3398,2.401,3399,2.401,3400,2.401,3401,2.401,3402,2.401,3403,2.401,3404,2.401]],["title/modules/VtpassModule.html",[134,1.606,446,3.759]],["body/modules/VtpassModule.html",[3,0.042,4,0.042,5,0.037,19,0.004,29,0.325,34,1.229,40,0.042,41,0.389,70,0.003,71,0.003,134,2.576,136,2.791,137,3.688,141,3.811,142,3.021,143,3.021,145,3.811,146,4.423,185,2.87,231,3.183,446,7.416,468,7.711,1762,6.304,1763,4.047,3299,7.71,3360,6.014,3405,6.014,3406,6.014,3407,6.014,3408,6.672,3409,6.672]],["title/injectables/VtpassService.html",[32,1.517,468,3.759]],["body/injectables/VtpassService.html",[3,0.009,4,0.009,5,0.008,7,0.136,8,0.843,9,4.222,11,1.147,16,0.873,18,2.749,19,0.004,20,2.622,21,1.168,22,2.716,27,2.749,28,6.441,29,0.288,32,0.769,34,0.277,40,0.009,41,0.088,43,3.177,44,2.531,49,2.752,61,0.731,63,3.919,64,3.784,70,0.001,71,0.001,72,0.63,89,0.585,108,0.736,151,0.39,158,1.536,172,2.113,190,2.422,194,3.334,209,0.611,212,0.66,215,0.547,218,2.176,260,2.985,282,1.46,284,0.808,295,1.001,296,1.079,301,3.472,363,2.987,364,2.987,366,1.66,367,1.66,368,1.57,376,1.259,377,3.668,381,3.668,386,3.668,393,1.66,396,1.66,399,1.66,408,4.284,409,1.127,410,1.186,413,1.186,468,1.906,486,1.186,547,1.246,762,1.079,763,1.186,764,1.001,1055,2.461,1104,4.928,1121,4.63,1192,4.63,1210,4.63,1217,4.63,1291,2.23,1400,3.688,1674,1.079,1763,0.913,1768,2.987,1769,2.987,1770,2.987,1772,1.127,1773,4.402,1786,1.127,1787,1.127,1791,1.357,1802,1.259,1804,1.259,1810,6.755,1811,1.186,1812,1.186,1822,5.934,1823,6.241,1826,6.241,1829,6.241,1831,6.363,1832,6.241,1844,6.241,1845,6.241,2075,1.186,2077,1.186,2078,1.186,2160,1.357,2161,1.357,2162,1.357,2324,1.259,2325,1.186,2329,1.357,2330,2.397,2331,1.357,2333,1.357,2339,6.636,2343,4.63,3025,4.63,3027,2.224,3281,4.63,3283,1.259,3287,4.63,3288,2.095,3292,4.63,3297,3.688,3301,3.219,3302,3.219,3303,3.219,3304,3.219,3306,3.219,3308,3.886,3309,3.219,3311,3.219,3312,3.219,3313,3.219,3315,1.357,3319,1.357,3322,1.357,3325,1.357,3331,2.397,3343,1.357,3351,1.357,3354,1.357,3357,1.357,3361,1.357,3362,1.357,3363,1.357,3364,1.357,3365,2.397,3366,1.357,3367,1.357,3368,1.357,3369,1.357,3370,1.357,3410,1.505,3411,3.571,3412,3.571,3413,3.571,3414,2.659,3415,1.505,3416,1.505,3417,1.505,3418,1.505,3419,1.505,3420,1.505,3421,1.505,3422,1.505,3423,1.505,3424,1.505,3425,1.505,3426,1.505,3427,1.505,3428,1.505,3429,1.505,3430,1.505,3431,2.659,3432,1.505,3433,1.505,3434,1.505,3435,1.505,3436,1.505,3437,1.505,3438,1.505,3439,1.505,3440,1.505,3441,1.505,3442,1.505,3443,1.505,3444,1.505,3445,2.659,3446,1.505,3447,1.505,3448,6.255,3449,7.922,3450,2.659,3451,1.505,3452,1.505,3453,1.505,3454,3.571,3455,1.505,3456,1.505,3457,1.505]],["title/entities/Wallet.html",[106,2.647,147,1.811]],["body/entities/Wallet.html",[3,0.022,4,0.022,5,0.019,7,0.312,16,0.932,19,0.004,21,1.326,29,0.321,40,0.022,41,0.201,51,2.043,70,0.002,71,0.002,91,3.166,92,1.561,93,5.374,94,2.582,95,2.214,96,3.364,97,1.535,103,2.654,104,1.322,106,2.671,147,1.828,149,1.561,151,0.776,152,4.527,157,3.908,159,1.833,160,4.005,165,1.937,172,2.319,175,3.047,176,2.091,180,2.974,181,1.031,182,0.865,287,3.998,288,2.292,455,2.376,460,2.376,487,5.374,489,4.268,490,5.374,492,5.374,494,5.374,519,5.223,521,4.618,551,2.716,552,4.17,708,2.716,719,1.924,1454,5.388,1455,5.807,1457,5.388,1459,5.807,1463,5.807,1464,5.388,1466,6.522,1467,6.752,1507,2.716,1508,2.716,1509,2.716,1512,6.968,2173,2.471,2871,6.045,3163,2.883,3458,3.447,3459,8.844,3460,3.447,3461,3.447,3462,3.447,3463,3.447,3464,3.447,3465,5.293,3466,3.447,3467,5.293,3468,3.447,3469,3.447,3470,5.807,3471,3.447,3472,5.293,3473,3.447,3474,3.447,3475,5.293,3476,3.447,3477,3.447]],["title/controllers/WalletController.html",[183,1.811,3478,4.387]],["body/controllers/WalletController.html",[3,0.04,4,0.04,5,0.036,7,0.583,8,2.611,16,0.629,19,0.004,27,2.02,29,0.332,34,1.187,40,0.04,41,0.375,49,2.611,70,0.003,71,0.003,106,3.253,111,2.198,159,1.237,183,2.226,185,2.198,187,3.075,194,2.919,198,3.075,199,3.191,200,3.191,209,2.617,212,2.825,214,2.871,215,2.343,469,5.838,742,7.16,1403,4.829,2643,6.795,2823,5.81,3029,5.079,3031,6.886,3478,6.886,3479,6.446,3480,6.446,3481,5.81,3482,5.81,3483,6.446,3484,6.446,3485,6.446,3486,6.446]],["title/modules/WalletModule.html",[134,1.606,447,3.375]],["body/modules/WalletModule.html",[3,0.04,4,0.04,5,0.036,19,0.004,29,0.34,34,1.187,40,0.04,41,0.375,70,0.003,71,0.003,134,2.521,136,2.696,137,3.608,141,3.728,142,2.919,143,2.919,145,3.728,146,4.327,185,2.808,229,3.807,231,3.075,233,3.711,234,2.871,447,6.607,469,6.89,858,5.079,967,4.443,3478,7.587,3481,5.81,3487,5.81,3488,5.81,3489,5.81,3490,6.446,3491,6.446,3492,5.079,3493,5.81,3494,6.446]],["title/classes/WalletRepository.html",[41,0.305,3492,4.132]],["body/classes/WalletRepository.html",[3,0.043,4,0.043,5,0.038,7,0.619,8,2.712,16,0.668,18,2.223,19,0.004,20,2.12,21,0.911,22,2.197,27,2.145,29,0.288,40,0.043,41,0.399,49,2.171,51,2.712,70,0.003,71,0.003,106,3.455,158,1.808,181,2.048,182,2.147,241,0.718,243,4.224,244,3.676,303,4.907,506,3.843,666,5.128,3492,6.738,3495,6.846,3496,8.552,3497,8.552,3498,6.846,3499,6.171,3500,6.846]],["title/injectables/WalletService.html",[32,1.517,469,3.375]],["body/injectables/WalletService.html",[3,0.018,4,0.018,5,0.016,7,0.256,8,1.436,9,4.172,11,1.953,16,0.775,18,2.303,19,0.004,20,2.196,21,1.058,22,2.275,27,2.371,28,3.904,29,0.311,32,1.309,34,0.52,40,0.018,41,0.165,43,1.258,44,2.67,49,2.619,51,0.896,56,3.578,60,3.727,61,4.246,63,3.383,70,0.002,71,0.002,72,1.182,77,2.752,89,1.099,90,1.324,106,3.27,108,1.252,172,2.55,181,0.845,209,1.147,212,1.238,218,3.573,234,1.258,243,1.279,261,1.551,266,3.266,285,1.668,293,1.947,301,4.104,303,2.025,313,2.917,469,2.913,500,5.478,504,2.966,506,2.334,512,4.081,516,6.108,521,5.083,655,3.567,659,3.567,691,2.546,700,2.913,876,2.226,967,1.947,976,1.818,999,2.363,1403,5.312,1599,1.947,2040,4.081,2173,2.025,2436,2.226,2643,6.689,2753,6.391,2758,2.546,2898,2.546,3029,2.226,3031,3.786,3122,5.84,3162,2.226,3163,2.363,3190,2.546,3482,2.546,3492,5.962,3493,2.546,3499,2.546,3501,2.825,3502,6.479,3503,4.527,3504,5.665,3505,2.825,3506,2.825,3507,4.527,3508,2.825,3509,2.825,3510,2.825,3511,2.825,3512,4.527,3513,2.825,3514,2.825,3515,2.825,3516,2.825,3517,4.527,3518,2.825,3519,2.825,3520,2.825,3521,4.527,3522,2.825,3523,4.527,3524,2.825,3525,2.825,3526,2.825,3527,2.825,3528,2.825,3529,2.825,3530,2.825,3531,2.825,3532,2.825,3533,2.825]],["title/entities/Withdrawal.html",[91,2.129,147,1.811]],["body/entities/Withdrawal.html",[3,0.037,4,0.037,5,0.033,7,0.54,16,0.853,19,0.004,21,1.317,29,0.324,40,0.037,41,0.348,51,2.773,70,0.003,71,0.003,89,3.401,91,3.18,103,3.123,104,2.29,106,5.27,107,3.525,147,2.705,149,2.703,151,1.149,159,1.678,160,3.547,165,4.401,180,4.913,181,1.786,182,1.499,711,3.436,712,3.436,719,2.17,1633,6.55,1635,7.061,1637,7.061,1639,4.279,1640,5.38,2699,5.38,3534,5.969,3535,5.969,3536,5.969,3537,5.969]],["title/classes/WithdrawalRepository.html",[41,0.305,2712,4.132]],["body/classes/WithdrawalRepository.html",[3,0.044,4,0.044,5,0.039,7,0.636,8,2.757,16,0.686,18,2.283,19,0.004,20,2.177,21,0.936,22,2.256,27,2.203,29,0.292,40,0.044,41,0.409,49,2.229,70,0.003,71,0.003,91,2.854,158,1.83,181,2.103,182,2.183,241,0.738,243,4.274,244,3.774,342,4.668,666,5.266,1644,7.837,1645,7.837,1648,5.879,2712,6.85,3538,7.03,3539,7.03,3540,7.03]],["title/dependencies.html",[137,2.767,3541,4.368]],["body/dependencies.html",[19,0.004,31,4.868,34,1.072,35,4.585,41,0.449,70,0.003,71,0.003,137,2.551,181,1.741,234,2.592,284,3.125,298,3.745,584,1.761,760,5.246,764,3.87,876,4.585,878,5.522,879,5.522,880,5.246,881,5.246,970,4.172,972,4.868,998,4.36,1345,4.36,1708,5.246,1763,3.531,1793,5.246,1794,6.944,1801,5.246,1902,4.868,1985,7.223,1986,5.246,2002,5.246,2214,4.585,2325,4.585,2618,4.585,2967,2.636,2968,2.636,3542,5.82,3543,5.82,3544,5.82,3545,5.82,3546,9.192,3547,5.82,3548,5.82,3549,5.82,3550,5.82,3551,5.82,3552,5.82,3553,5.82,3554,5.82,3555,5.82,3556,5.82,3557,5.82,3558,5.82,3559,5.82,3560,5.82,3561,5.82,3562,5.82,3563,5.82,3564,5.82,3565,5.82,3566,5.82,3567,5.82,3568,5.82,3569,5.82,3570,5.82,3571,5.82,3572,5.82,3573,5.82,3574,5.82,3575,5.82,3576,5.82,3577,5.82,3578,5.82]],["title/miscellaneous/enumerations.html",[3579,2.905,3580,5.692]],["body/miscellaneous/enumerations.html",[7,0.332,19,0.004,70,0.002,71,0.002,84,2.514,86,4.159,87,3.98,89,2.159,91,2.254,103,1.72,108,1.536,109,2.602,110,2.602,111,1.893,112,2.602,148,1.929,202,2.288,206,2.53,286,4.644,287,2.697,289,3.826,297,5.145,298,4.804,360,3.826,484,4.374,510,6.036,585,3.368,736,3.98,769,4.644,770,4.644,1080,4.374,1292,4.913,1302,2.648,1307,2.648,1537,4.644,1599,3.826,2147,4.374,2175,4.644,2178,6.244,2180,5.004,2184,5.004,2240,4.644,2242,5.351,2376,4.159,2455,4.644,2618,4.374,2751,5.004,3162,4.374,3297,4.159,3579,2.441,3580,3.308,3581,3.308,3582,3.308,3583,6.036,3584,3.308,3585,5.004,3586,3.308,3587,6.036,3588,3.308,3589,5.004,3590,5.004,3591,3.308,3592,3.308,3593,3.308,3594,3.308,3595,6.696,3596,5.552,3597,3.308,3598,5.004,3599,5.552,3600,5.552,3601,5.552,3602,3.308,3603,5.552,3604,5.552,3605,5.552,3606,5.552,3607,5.552,3608,5.552,3609,7.466,3610,3.308,3611,3.308,3612,3.308,3613,3.671,3614,3.308,3615,5.552,3616,5.552,3617,5.552,3618,5.552,3619,5.552,3620,5.552,3621,5.552,3622,5.552,3623,5.552,3624,3.308,3625,5.552,3626,5.552,3627,5.552,3628,5.552,3629,5.552,3630,5.552,3631,5.552,3632,5.552,3633,3.308,3634,5.552,3635,5.552,3636,3.308,3637,3.308,3638,3.308]],["title/miscellaneous/functions.html",[3579,2.905,3639,5.692]],["body/miscellaneous/functions.html",[7,0.654,18,2.871,19,0.004,20,2.738,21,0.962,22,2.837,27,2.264,70,0.003,71,0.003,295,4.804,528,4.382,1340,6.622,1414,5.689,1438,7.969,1439,6.511,3579,4.804,3639,6.511,3640,9.554,3641,6.511,3642,7.223,3643,8.841,3644,8.841,3645,7.969,3646,8.611,3647,8.611,3648,6.511,3649,7.223,3650,7.223,3651,7.223,3652,7.223]],["title/index.html",[7,0.395,3653,4.368,3654,4.368]],["body/index.html",[19,0.003,70,0.003,71,0.003,108,2.684,117,6.743,729,5.894,899,5.894,1598,6.257,3655,7.481,3656,9.031,3657,7.481,3658,8.744,3659,6.743,3660,9.031,3661,9.031,3662,7.481,3663,7.553,3664,9.031,3665,9.031,3666,9.031,3667,9.031,3668,7.481,3669,7.481,3670,6.743,3671,7.481,3672,7.481]],["title/modules.html",[136,3.004]],["body/modules.html",[19,0.003,70,0.003,71,0.003,135,3.973,136,2.318,222,4.152,227,3.567,228,3.686,229,3.273,442,4.152,446,3.973,447,3.567,638,4.152,642,3.973,643,3.567,644,3.82,792,4.152,838,4.367,841,4.152,842,4.152,843,3.973,844,4.152,845,4.152,846,4.152,847,3.973,848,3.973,849,3.973,850,4.152,851,3.973,852,4.152,853,3.973,1923,7.049,3670,9.835,3673,10.912,3674,10.912,3675,10.963,3676,8.428]],["title/overview.html",[3677,6.474]],["body/overview.html",[0,2.182,15,5.579,19,0.004,70,0.001,71,0.001,72,1.012,135,5.339,136,1.012,137,1.75,138,2.182,139,2.182,140,2.182,141,1.808,142,1.096,143,1.096,149,1.096,185,0.825,203,5.579,222,6.52,223,2.182,224,2.182,225,2.182,226,2.182,227,5.349,228,5.366,229,5.675,241,0.254,258,4.793,259,4.953,261,4.089,335,4.953,406,3.817,442,6.044,443,2.182,444,2.182,445,2.182,446,5.339,447,5.349,468,5.339,469,4.793,544,1.558,616,3.817,638,7.006,639,2.182,640,2.182,641,2.182,642,6.354,643,5.193,644,6.51,670,4.953,671,5.339,765,3.817,792,4.901,793,2.182,794,2.182,835,1.907,838,8.398,839,2.182,840,2.182,841,6.383,842,3.817,843,5.784,844,3.817,845,5.832,846,4.901,847,5.339,848,5.339,849,5.339,850,3.817,851,5.784,852,6.044,853,5.339,946,3.512,961,2.182,962,2.182,964,4.015,965,4.015,1064,2.182,1065,2.182,1066,2.182,1408,5.868,1420,3.653,1672,5.339,1678,2.182,1680,2.182,1681,2.182,1684,5.339,1757,2.182,1758,2.182,1759,2.182,2019,2.182,2020,2.182,2021,2.182,2056,3.817,2065,2.182,2066,2.182,2091,2.182,2092,2.182,2093,2.182,2216,2.182,2217,2.182,2218,2.182,2274,5.133,2294,2.182,2295,2.182,2296,2.182,2401,5.339,2410,2.182,2411,2.182,2412,2.182,2547,2.182,2548,2.182,2549,2.182,2595,5.339,2599,2.182,2601,2.182,2602,2.182,2610,5.339,2706,2.182,2707,2.182,2708,2.182,2872,3.817,2885,2.182,2886,2.182,2930,2.182,2931,2.182,2932,2.182,3105,2.182,3106,2.182,3108,2.182,3212,2.182,3405,2.182,3406,2.182,3407,2.182,3487,2.182,3488,2.182,3489,2.182,3677,2.182,3678,2.421,3679,3.993,3680,2.421,3681,2.421]],["title/miscellaneous/typealiases.html",[3579,2.905,3682,6.315]],["body/miscellaneous/typealiases.html",[7,0.521,19,0.004,21,0.766,54,4.814,70,0.003,71,0.003,73,4.814,82,5.188,83,3.584,84,2.607,86,4.312,87,4.126,89,2.239,113,6.893,115,3.584,116,6.893,168,6.893,281,5.729,286,4.814,287,4.172,289,3.967,360,3.967,485,5.729,560,5.482,588,6.893,710,5.729,732,5.729,736,4.126,1342,6.025,1477,6.893,1531,6.893,1537,4.814,1633,5.729,1789,6.893,2147,4.535,2238,6.893,2240,4.814,2374,6.025,2376,4.312,2455,4.814,2635,6.893,3162,4.535,3470,6.893,3579,3.828,3581,5.188,3582,5.188,3583,7.741,3584,5.188,3585,6.893,3586,5.188,3587,7.741,3588,5.188,3589,6.893,3590,5.188,3591,5.188,3592,5.188,3593,5.188,3594,5.188,3597,5.188,3598,5.188,3602,5.188,3610,5.188,3611,5.188,3612,5.188,3614,5.188,3624,5.188,3633,5.188,3636,5.188,3637,5.188,3638,5.188,3683,5.756,3684,7.741,3685,5.756,3686,7.648,3687,7.648,3688,5.756,3689,5.756,3690,5.756,3691,5.756,3692,5.756]],["title/miscellaneous/variables.html",[3579,2.905,3663,5.281]],["body/miscellaneous/variables.html",[5,0.019,7,0.303,9,3.025,19,0.004,21,1.13,23,2.805,24,2.805,36,2.967,37,1.545,41,0.195,44,2.747,49,2.966,50,3.26,52,3.023,64,1.545,70,0.002,71,0.002,73,2.805,77,2.517,84,2.346,89,1.304,111,1.144,149,1.519,152,2.235,158,1.381,182,0.842,202,1.382,247,3.023,289,4.364,294,3.882,295,2.23,301,3.122,313,1.726,323,2.512,324,3.882,403,2.093,486,4.082,528,3.143,607,2.346,610,2.311,611,3.841,700,2.158,719,3.734,736,3.714,740,3.023,810,3.023,834,5.296,837,2.805,899,2.642,909,3.023,910,3.023,914,2.805,917,2.034,923,2.404,978,3.023,1070,3.023,1290,1.6,1292,4.575,1296,2.472,1297,1.6,1558,2.642,1598,2.805,1605,3.023,1608,3.023,1614,3.023,1615,3.023,1616,3.023,1617,3.023,1618,3.023,1619,3.023,1620,3.023,1706,4.671,1969,4.671,1973,3.023,1976,3.023,2716,3.023,2812,4.671,2832,4.334,3160,6.421,3210,6.941,3211,5.708,3579,2.23,3641,3.023,3645,5.708,3646,6.421,3647,3.023,3648,3.023,3658,4.671,3659,3.023,3663,2.805,3684,3.023,3693,3.354,3694,6.332,3695,5.182,3696,3.354,3697,5.182,3698,6.332,3699,5.182,3700,3.354,3701,5.182,3702,3.354,3703,5.182,3704,3.354,3705,3.354,3706,5.182,3707,3.354,3708,3.354,3709,3.354,3710,3.354,3711,5.182,3712,3.354,3713,3.354,3714,3.354,3715,3.354,3716,3.354,3717,3.354,3718,3.354,3719,3.354,3720,3.354,3721,3.354,3722,3.354,3723,3.354,3724,3.354,3725,3.354,3726,3.354,3727,3.354,3728,3.354,3729,3.354,3730,3.354,3731,3.354,3732,3.354,3733,3.354,3734,3.354,3735,3.354,3736,3.354,3737,5.182,3738,3.354,3739,5.182,3740,3.354,3741,3.354,3742,3.354,3743,3.354,3744,5.182,3745,3.354,3746,3.354,3747,3.354,3748,3.354,3749,3.354,3750,3.354,3751,3.354,3752,3.354,3753,3.354,3754,3.354,3755,3.354]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":2173,"title":{},"body":{"injectables/MonnifyService.html":{},"classes/SetPinDTO.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{},"injectables/WalletService.html":{}}}],["0.0",{"_index":3477,"title":{},"body":{"entities/Wallet.html":{}}}],["0.0.4",{"_index":3545,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3573,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":3558,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":3578,"title":{},"body":{"dependencies.html":{}}}],["0.25.0",{"_index":3553,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1927,"title":{},"body":{"controllers/HealthController.html":{}}}],["0.5.1",{"_index":3557,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3566,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":544,"title":{"classes/Activity-1.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/VerifyAccountNumberDto-1.html":{}},"body":{"overview.html":{}}}],["1.0.0",{"_index":3568,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":3562,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":3544,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":3547,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":3564,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":3561,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2466,"title":{},"body":{"injectables/SeedingMiddleware.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["1024",{"_index":1914,"title":{},"body":{"controllers/HealthController.html":{}}}],["12",{"_index":3726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":920,"title":{},"body":{"modules/AppModule.html":{}}}],["12000",{"_index":3732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["153",{"_index":3681,"title":{},"body":{"overview.html":{}}}],["17.5.0",{"_index":3563,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1144,"title":{"classes/BuyAirtimeDto-2.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto-2.html":{}},"body":{}}],["2.0.0",{"_index":3556,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":3679,"title":{},"body":{"overview.html":{}}}],["2349082290318",{"_index":2464,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["2400s",{"_index":982,"title":{},"body":{"modules/AuthModule.html":{}}}],["27",{"_index":3678,"title":{},"body":{"overview.html":{}}}],["29",{"_index":3680,"title":{},"body":{"overview.html":{}}}],["2953846525",{"_index":1102,"title":{},"body":{"injectables/BankService.html":{},"injectables/MonnifyService.html":{}}}],["3",{"_index":3212,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["3.0.2",{"_index":3575,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":3555,"title":{},"body":{"dependencies.html":{}}}],["3.73.0",{"_index":3577,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":1913,"title":{},"body":{"controllers/HealthController.html":{}}}],["300mb",{"_index":1909,"title":{},"body":{"controllers/HealthController.html":{}}}],["3des",{"_index":1878,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["4",{"_index":2498,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["4.0.0",{"_index":3567,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3554,"title":{},"body":{"dependencies.html":{}}}],["5.4.3",{"_index":3542,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1922,"title":{},"body":{"controllers/HealthController.html":{}}}],["6",{"_index":3723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.7.2",{"_index":3565,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3576,"title":{},"body":{"dependencies.html":{}}}],["7.6.2",{"_index":3552,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1885,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["8.0.0",{"_index":3546,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":3551,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":3550,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":3548,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":3570,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":3724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99",{"_index":2191,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["9]\\d{1,14",{"_index":1387,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__dirname",{"_index":3720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abilities.decorator",{"_index":38,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["abilitiesguard",{"_index":1,"title":{"guards/AbilitiesGuard.html":{}},"body":{"guards/AbilitiesGuard.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["ability",{"_index":54,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory",{"_index":39,"title":{},"body":{"guards/AbilitiesGuard.html":{},"modules/AbilityModule.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["ability/abilities.guard",{"_index":888,"title":{},"body":{"modules/AppModule.html":{}}}],["ability/ability.module",{"_index":887,"title":{},"body":{"modules/AppModule.html":{}}}],["abilitybuilder",{"_index":78,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["abilityclass",{"_index":79,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["abilityfactory",{"_index":15,"title":{"injectables/AbilityFactory.html":{}},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"overview.html":{}}}],["abilitymodule",{"_index":135,"title":{"modules/AbilityModule.html":{}},"body":{"modules/AbilityModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["abstract",{"_index":575,"title":{},"body":{"classes/Activity-1.html":{},"classes/EntityContainer.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["accept",{"_index":2329,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["accepted",{"_index":3615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accoiunt.dto",{"_index":207,"title":{},"body":{"controllers/AccountController.html":{},"controllers/UserController.html":{}}}],["accoiunt.dto.ts",{"_index":578,"title":{},"body":{"classes/AddBankAccountDTO.html":{}}}],["accoiunt.dto.ts:10",{"_index":580,"title":{},"body":{"classes/AddBankAccountDTO.html":{}}}],["accoiunt.dto.ts:6",{"_index":581,"title":{},"body":{"classes/AddBankAccountDTO.html":{}}}],["account",{"_index":148,"title":{"entities/Account.html":{}},"body":{"entities/Account.html":{},"controllers/AccountController.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"miscellaneous/enumerations.html":{}}}],["account.controller",{"_index":232,"title":{},"body":{"modules/AccountModule.html":{}}}],["account.dto",{"_index":210,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/AdminController.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"classes/UpdateAccountDto.html":{}}}],["account.dto.ts",{"_index":1229,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/UpdateAccountDto.html":{},"classes/ValidateAccountDto.html":{}}}],["account.dto.ts:10",{"_index":1231,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:14",{"_index":1233,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:18",{"_index":1236,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:2",{"_index":3261,"title":{},"body":{"classes/ValidateAccountDto.html":{}}}],["account.dto.ts:22",{"_index":1232,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:26",{"_index":1234,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:3",{"_index":3262,"title":{},"body":{"classes/ValidateAccountDto.html":{}}}],["account.dto.ts:30",{"_index":1235,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:34",{"_index":1399,"title":{},"body":{"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:38",{"_index":1398,"title":{},"body":{"classes/CreateVirtualAccountDto.html":{}}}],["account.dto.ts:6",{"_index":1230,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["account.merchant",{"_index":2235,"title":{},"body":{"entities/PaymentMerchant.html":{}}}],["account.service",{"_index":204,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{}}}],["account/account.module",{"_index":862,"title":{},"body":{"modules/AppModule.html":{}}}],["account/dto/add",{"_index":3077,"title":{},"body":{"controllers/UserController.html":{}}}],["account_bank",{"_index":1734,"title":{},"body":{"classes/FWWithdrawalDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{}}}],["account_number",{"_index":1363,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{},"classes/FWWithdrawalDto.html":{},"injectables/FlutterwaveService.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["account_types",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["account_types.bank_account",{"_index":334,"title":{},"body":{"injectables/AccountService.html":{}}}],["account_types.virtual_account",{"_index":357,"title":{},"body":{"injectables/AccountService.html":{}}}],["accountbank",{"_index":2622,"title":{},"body":{"classes/Transaction.html":{}}}],["accountcontroller",{"_index":184,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{}}}],["accountmodule",{"_index":222,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accountname",{"_index":153,"title":{},"body":{"entities/Account.html":{},"injectables/AccountService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["accountnumber",{"_index":154,"title":{},"body":{"entities/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AddBankAccountDTO.html":{},"classes/CreateAccountDto.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"classes/Transaction.html":{},"classes/ValidateAccountDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{}}}],["accountrecference",{"_index":1396,"title":{},"body":{"classes/CreateVirtualAccountDto.html":{}}}],["accountreference",{"_index":346,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateReservedAccountDto-1.html":{}}}],["accountreference=${reference",{"_index":2204,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["accountrepository",{"_index":238,"title":{"classes/AccountRepository.html":{}},"body":{"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{}}}],["accounts",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{},"entities/Customer.html":{},"injectables/MonnifyService.html":{},"entities/PaymentMerchant.html":{},"injectables/UserService.html":{}}}],["accounts.foreach(async",{"_index":355,"title":{},"body":{"injectables/AccountService.html":{}}}],["accounts.user",{"_index":1468,"title":{},"body":{"entities/Customer.html":{}}}],["accounts/reference/${reference",{"_index":2202,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["accounts/transactions",{"_index":2203,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["accountservice",{"_index":203,"title":{"injectables/AccountService.html":{}},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"overview.html":{}}}],["accountsid",{"_index":2947,"title":{},"body":{"injectables/TwillioService.html":{}}}],["accounttype",{"_index":333,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateAccountDto.html":{}}}],["accounttypes",{"_index":168,"title":{},"body":{"entities/Account.html":{},"miscellaneous/typealiases.html":{}}}],["action",{"_index":1291,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"injectables/MerchantApiService.html":{},"injectables/PaystackService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"injectables/VtpassService.html":{}}}],["active",{"_index":3617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["activities",{"_index":360,"title":{},"body":{"controllers/ActivitiesController.html":{},"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["activities.airtime",{"_index":720,"title":{},"body":{"entities/AirtimeActivity.html":{}}}],["activities.controller",{"_index":449,"title":{},"body":{"modules/ActivitiesModule.html":{}}}],["activities.electricity",{"_index":1661,"title":{},"body":{"entities/ElectricityBillActivity.html":{}}}],["activities.mobile_data",{"_index":2080,"title":{},"body":{"entities/MobileDataActivity.html":{}}}],["activities.service",{"_index":407,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{}}}],["activities.tv_subscription",{"_index":2919,"title":{},"body":{"entities/TvSubscriptionActivity.html":{}}}],["activities/activities.module",{"_index":891,"title":{},"body":{"modules/AppModule.html":{}}}],["activitiescontroller",{"_index":358,"title":{"controllers/ActivitiesController.html":{}},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{}}}],["activitiesmodule",{"_index":442,"title":{"modules/ActivitiesModule.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["activitiesservice",{"_index":406,"title":{"injectables/ActivitiesService.html":{}},"body":{"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"overview.html":{}}}],["activitiestype",{"_index":710,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{},"miscellaneous/typealiases.html":{}}}],["activity",{"_index":519,"title":{"classes/Activity.html":{},"classes/Activity-1.html":{}},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"entities/Customer.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{}}}],["activity.dto",{"_index":414,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/UpdateActivityDto.html":{}}}],["activity.dto.ts",{"_index":1238,"title":{},"body":{"classes/CreateActivityDto.html":{},"classes/UpdateActivityDto.html":{}}}],["activity.entity",{"_index":489,"title":{},"body":{"injectables/ActivitiesService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"entities/Wallet.html":{}}}],["activity.entity.ts",{"_index":709,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{}}}],["activity.entity.ts:10",{"_index":713,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{}}}],["activity.entity.ts:13",{"_index":715,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{}}}],["activity.entity.ts:16",{"_index":717,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{}}}],["activity.entity.ts:19",{"_index":2916,"title":{},"body":{"entities/TvSubscriptionActivity.html":{}}}],["activity.entity.ts:22",{"_index":2918,"title":{},"body":{"entities/TvSubscriptionActivity.html":{}}}],["activity.repository",{"_index":452,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{}}}],["activity.repository.ts",{"_index":722,"title":{},"body":{"classes/AirtimeActivityRepository.html":{},"classes/ElectricityBillActivityRepository.html":{},"classes/MobileDataActivityRepository.html":{},"classes/TvSubscriptionActivityRepository.html":{}}}],["activity.user",{"_index":1470,"title":{},"body":{"entities/Customer.html":{}}}],["activity.wallet",{"_index":3459,"title":{},"body":{"entities/Wallet.html":{}}}],["activityrepository",{"_index":673,"title":{},"body":{"injectables/AdminService.html":{}}}],["add",{"_index":2793,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["addbankaccount",{"_index":188,"title":{},"body":{"controllers/AccountController.html":{}}}],["addbankaccount(@body",{"_index":217,"title":{},"body":{"controllers/AccountController.html":{}}}],["addbankaccount(addbankaccountdto",{"_index":191,"title":{},"body":{"controllers/AccountController.html":{}}}],["addbankaccountdto",{"_index":192,"title":{"classes/AddBankAccountDTO.html":{}},"body":{"controllers/AccountController.html":{},"classes/AddBankAccountDTO.html":{},"controllers/UserController.html":{}}}],["addnew",{"_index":2519,"title":{},"body":{"controllers/SettingsController.html":{}}}],["addnew(@body",{"_index":2542,"title":{},"body":{"controllers/SettingsController.html":{}}}],["addnew(createsettingdto",{"_index":2523,"title":{},"body":{"controllers/SettingsController.html":{}}}],["addnewsetting(createsettingdto",{"_index":701,"title":{},"body":{"injectables/AdminService.html":{}}}],["adds",{"_index":2075,"title":{},"body":{"injectables/MerchantApiService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/VtpassService.html":{}}}],["addsetting",{"_index":2555,"title":{},"body":{"injectables/SettingsService.html":{}}}],["addsetting(createsettingdto",{"_index":2563,"title":{},"body":{"injectables/SettingsService.html":{}}}],["adegoke.adewoye@skyeinnovationtech.com",{"_index":2463,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["admin",{"_index":585,"title":{"entities/Admin.html":{}},"body":{"entities/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/SeedingMiddleware.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["admin.controller",{"_index":646,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":617,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":871,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/repositories/admin.repository",{"_index":3118,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["admin_levels",{"_index":2455,"title":{},"body":{"injectables/SeedingMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["admin_levels.two",{"_index":2467,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["admin_permission",{"_index":629,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin_roles.admin",{"_index":121,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["admin_roles.support",{"_index":123,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["admincontroller",{"_index":590,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["administrator",{"_index":3204,"title":{},"body":{"injectables/UserService.html":{}}}],["adminlevels",{"_index":588,"title":{},"body":{"entities/Admin.html":{},"miscellaneous/typealiases.html":{}}}],["adminmodule",{"_index":638,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrepository",{"_index":652,"title":{"classes/AdminRepository.html":{}},"body":{"classes/AdminRepository.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["adminroles",{"_index":3250,"title":{},"body":{"injectables/UserService.html":{}}}],["adminservice",{"_index":616,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"overview.html":{}}}],["ago",{"_index":2802,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["airtime",{"_index":3598,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["airtime.dto",{"_index":409,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/UpdateAirtimeDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["airtime.dto.ts",{"_index":1132,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/CreateAirtimeDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/ValidateAirtimeDto.html":{}}}],["airtime.dto.ts:11",{"_index":1149,"title":{},"body":{"classes/BuyAirtimeDto-2.html":{}}}],["airtime.dto.ts:12",{"_index":1138,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{}}}],["airtime.dto.ts:15",{"_index":1147,"title":{},"body":{"classes/BuyAirtimeDto-2.html":{}}}],["airtime.dto.ts:17",{"_index":1139,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{}}}],["airtime.dto.ts:19",{"_index":1148,"title":{},"body":{"classes/BuyAirtimeDto-2.html":{}}}],["airtime.dto.ts:2",{"_index":3267,"title":{},"body":{"classes/ValidateAirtimeDto.html":{}}}],["airtime.dto.ts:22",{"_index":1140,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{}}}],["airtime.dto.ts:27",{"_index":1141,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{}}}],["airtime.dto.ts:3",{"_index":3266,"title":{},"body":{"classes/ValidateAirtimeDto.html":{}}}],["airtime.dto.ts:31",{"_index":1135,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{}}}],["airtime.dto.ts:36",{"_index":1142,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{}}}],["airtime.dto.ts:4",{"_index":3265,"title":{},"body":{"classes/ValidateAirtimeDto.html":{}}}],["airtime.dto.ts:7",{"_index":1137,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{}}}],["airtime_activity",{"_index":539,"title":{},"body":{"classes/Activity.html":{}}}],["airtime_service",{"_index":3629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["airtimeactivities",{"_index":1454,"title":{},"body":{"entities/Customer.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{}}}],["airtimeactivity",{"_index":487,"title":{"entities/AirtimeActivity.html":{}},"body":{"injectables/ActivitiesService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/Wallet.html":{}}}],["airtimeactivityrepository",{"_index":450,"title":{"classes/AirtimeActivityRepository.html":{}},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/AirtimeActivityRepository.html":{}}}],["aliases",{"_index":3683,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":1916,"title":{},"body":{"controllers/HealthController.html":{}}}],["alltransactions",{"_index":2772,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["already",{"_index":1713,"title":{},"body":{"injectables/EmailService.html":{},"injectables/UserService.html":{}}}],["amount",{"_index":504,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/FWWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"injectables/TransfersService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"injectables/WalletService.html":{}}}],["andwhere('transaction.type",{"_index":2787,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["announcement",{"_index":724,"title":{"entities/Announcement.html":{}},"body":{"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{}}}],["announcement.controller",{"_index":796,"title":{},"body":{"modules/AnnouncementModule.html":{}}}],["announcement.dto",{"_index":767,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"classes/UpdateAnnouncementDto.html":{}}}],["announcement.dto.ts",{"_index":803,"title":{},"body":{"classes/AnnouncementQueryDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/UpdateAnnouncementDto.html":{}}}],["announcement.dto.ts:11",{"_index":1241,"title":{},"body":{"classes/CreateAnnouncementDto.html":{}}}],["announcement.dto.ts:17",{"_index":805,"title":{},"body":{"classes/AnnouncementQueryDto.html":{}}}],["announcement.dto.ts:7",{"_index":1242,"title":{},"body":{"classes/CreateAnnouncementDto.html":{}}}],["announcement.service",{"_index":766,"title":{},"body":{"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{}}}],["announcement/announcement.module",{"_index":890,"title":{},"body":{"modules/AppModule.html":{}}}],["announcement_status",{"_index":736,"title":{},"body":{"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["announcement_status.draft",{"_index":738,"title":{},"body":{"entities/Announcement.html":{}}}],["announcementcontroller",{"_index":739,"title":{"controllers/AnnouncementController.html":{}},"body":{"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{}}}],["announcementmodule",{"_index":792,"title":{"modules/AnnouncementModule.html":{}},"body":{"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["announcementquerydto",{"_index":752,"title":{"classes/AnnouncementQueryDto.html":{}},"body":{"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"classes/CreateAnnouncementDto.html":{}}}],["announcementreository",{"_index":797,"title":{"classes/AnnouncementReository.html":{}},"body":{"modules/AnnouncementModule.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{}}}],["announcementrepository",{"_index":813,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["announcements",{"_index":826,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["announcementservice",{"_index":765,"title":{"injectables/AnnouncementService.html":{}},"body":{"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"injectables/AnnouncementService.html":{},"overview.html":{}}}],["announcementstatus",{"_index":732,"title":{},"body":{"entities/Announcement.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"classes/CreateAnnouncementDto.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":2048,"title":{},"body":{"controllers/MerchantApiController.html":{},"injectables/MonnifyService.html":{}}}],["api.controller",{"_index":2068,"title":{},"body":{"modules/MerchantApiModule.html":{}}}],["api.controller.ts",{"_index":2047,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["api.controller.ts:19",{"_index":2050,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["api.controller.ts:24",{"_index":2051,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["api.controller.ts:29",{"_index":2052,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["api.controller.ts:34",{"_index":2055,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["api.controller.ts:42",{"_index":2053,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["api.dto",{"_index":2058,"title":{},"body":{"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"classes/UpdateMerchantApiDto.html":{}}}],["api.dto.ts",{"_index":1276,"title":{},"body":{"classes/CreateMerchantApiDto.html":{},"classes/UpdateMerchantApiDto.html":{}}}],["api.module",{"_index":894,"title":{},"body":{"modules/AppModule.html":{}}}],["api.module.ts",{"_index":2067,"title":{},"body":{"modules/MerchantApiModule.html":{}}}],["api.service",{"_index":2057,"title":{},"body":{"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{}}}],["api.service.ts",{"_index":2069,"title":{},"body":{"injectables/MerchantApiService.html":{}}}],["api.service.ts:11",{"_index":2071,"title":{},"body":{"injectables/MerchantApiService.html":{}}}],["api.service.ts:15",{"_index":2072,"title":{},"body":{"injectables/MerchantApiService.html":{}}}],["api.service.ts:19",{"_index":2074,"title":{},"body":{"injectables/MerchantApiService.html":{}}}],["api.service.ts:23",{"_index":2073,"title":{},"body":{"injectables/MerchantApiService.html":{}}}],["api.service.ts:7",{"_index":2070,"title":{},"body":{"injectables/MerchantApiService.html":{}}}],["api/dto/create",{"_index":1275,"title":{},"body":{"classes/CreateMerchantApiDto.html":{}}}],["api/dto/update",{"_index":2992,"title":{},"body":{"classes/UpdateMerchantApiDto.html":{}}}],["api/entities/merchant.entity",{"_index":1510,"title":{},"body":{"entities/Customer.html":{},"modules/DatabaseModule.html":{}}}],["api/entities/merchant.entity.ts",{"_index":2039,"title":{},"body":{"entities/Merchant.html":{}}}],["api/entities/merchant.entity.ts:11",{"_index":2045,"title":{},"body":{"entities/Merchant.html":{}}}],["api/entities/merchant.entity.ts:8",{"_index":2043,"title":{},"body":{"entities/Merchant.html":{}}}],["api/merchant",{"_index":893,"title":{},"body":{"modules/AppModule.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{}}}],["api/v1/disbursements/account/validate?accountnumber=${accountnumber}&bankcode=${bankcode",{"_index":2196,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["apikey",{"_index":2155,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["apisecret",{"_index":2157,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["apisuccessresponse",{"_index":834,"title":{"interfaces/ApiSuccessResponse.html":{}},"body":{"interfaces/ApiSuccessResponse.html":{},"miscellaneous/variables.html":{}}}],["app_guard",{"_index":882,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":883,"title":{},"body":{"modules/AppModule.html":{}}}],["appability",{"_index":116,"title":{},"body":{"injectables/AbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["application/json",{"_index":2330,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["appmodule",{"_index":838,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":2961,"title":{},"body":{"injectables/TwillioService.html":{}}}],["approvekyc",{"_index":3046,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["approvekyc(@param('id",{"_index":3094,"title":{},"body":{"controllers/UserController.html":{}}}],["approvekyc(id",{"_index":3053,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["assignuserlevel(@body",{"_index":630,"title":{},"body":{"controllers/AdminController.html":{}}}],["assignuserleveldto",{"_index":631,"title":{},"body":{"controllers/AdminController.html":{}}}],["async",{"_index":9,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":611,"title":{"classes/Auth.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"controllers/FlutterwaveController.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/NodemailerService.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":968,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":2979,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":1245,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{}}}],["auth.gaurd",{"_index":405,"title":{},"body":{"controllers/ActivitiesController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/UserController.html":{}}}],["auth.gaurd.ts",{"_index":1965,"title":{},"body":{"injectables/JwtAuthGaurd.html":{},"injectables/LocalAuthGaurd.html":{}}}],["auth.gaurd.ts:12",{"_index":1967,"title":{},"body":{"injectables/JwtAuthGaurd.html":{}}}],["auth.gaurd.ts:7",{"_index":1966,"title":{},"body":{"injectables/JwtAuthGaurd.html":{}}}],["auth.service",{"_index":947,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":857,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":927,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":2102,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["authguard",{"_index":1968,"title":{},"body":{"injectables/JwtAuthGaurd.html":{},"injectables/LocalAuthGaurd.html":{}}}],["authguard('jwt",{"_index":1971,"title":{},"body":{"injectables/JwtAuthGaurd.html":{}}}],["authguard('local",{"_index":1995,"title":{},"body":{"injectables/LocalAuthGaurd.html":{}}}],["authmodule",{"_index":841,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":1812,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["authorizecarddeposit(authorizedepositdto",{"_index":1859,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["authorizedepositdata",{"_index":1018,"title":{"classes/AuthorizeDepositData.html":{}},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/UssdDepositData.html":{}}}],["authorizedepositdata:8",{"_index":1047,"title":{},"body":{"classes/AuthorizeDepositDto.html":{}}}],["authorizedepositdto",{"_index":1041,"title":{"classes/AuthorizeDepositDto.html":{}},"body":{"classes/AuthorizeDepositDto.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{}}}],["authservice",{"_index":946,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["authtoken",{"_index":2097,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/TwillioService.html":{}}}],["autoloadentities",{"_index":1621,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["available",{"_index":1923,"title":{},"body":{"controllers/HealthController.html":{},"injectables/MonnifyService.html":{},"modules.html":{}}}],["avilable",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{}}}],["await",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["awaiting_processing",{"_index":2179,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["axios",{"_index":2325,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{},"dependencies.html":{}}}],["axiosresponse",{"_index":2324,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["badrequestexception",{"_index":2594,"title":{},"body":{"controllers/SmsController.html":{},"injectables/SmsService.html":{},"injectables/TwillioService.html":{}}}],["badrequestexception('invalid",{"_index":2962,"title":{},"body":{"injectables/TwillioService.html":{}}}],["balance",{"_index":521,"title":{},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"entities/Wallet.html":{},"injectables/WalletService.html":{}}}],["balance?accountnumber=${accountnumber",{"_index":2209,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["bank",{"_index":206,"title":{"classes/Bank.html":{}},"body":{"controllers/AccountController.html":{},"classes/AddBankAccountDTO.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["bank(similar",{"_index":2800,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["bank.controller",{"_index":1069,"title":{},"body":{"modules/BankModule.html":{}}}],["bank.service",{"_index":1053,"title":{},"body":{"controllers/BankController.html":{},"modules/BankModule.html":{}}}],["bank/bank.module",{"_index":868,"title":{},"body":{"modules/AppModule.html":{}}}],["bank_account",{"_index":3595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bank_code",{"_index":1364,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{},"injectables/FlutterwaveService.html":{}}}],["bank_service",{"_index":3625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bank_services",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bank_services.monnify",{"_index":336,"title":{},"body":{"injectables/AccountService.html":{}}}],["bankcode",{"_index":155,"title":{},"body":{"entities/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"classes/AddBankAccountDTO.html":{},"classes/CreateAccountDto.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"classes/ValidateAccountDto.html":{},"classes/VerifyAccountNumberDto.html":{}}}],["bankcontroller",{"_index":1050,"title":{"controllers/BankController.html":{}},"body":{"controllers/BankController.html":{},"modules/BankModule.html":{}}}],["bankid",{"_index":2341,"title":{},"body":{"injectables/PaystackService.html":{},"classes/VerifyAccountNumberDto-1.html":{}}}],["banklist",{"_index":2300,"title":{},"body":{"injectables/PaystackService.html":{}}}],["bankmodule",{"_index":642,"title":{"modules/BankModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/BankModule.html":{},"modules.html":{},"overview.html":{}}}],["bankname",{"_index":356,"title":{},"body":{"injectables/AccountService.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["bankservice",{"_index":335,"title":{"injectables/BankService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/CreateAccountDto.html":{},"overview.html":{}}}],["bankservices",{"_index":281,"title":{},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{},"miscellaneous/typealiases.html":{}}}],["base64encodeddata",{"_index":3445,"title":{},"body":{"injectables/VtpassService.html":{}}}],["based",{"_index":3656,"title":{},"body":{"index.html":{}}}],["baseuri",{"_index":1765,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["baseurl",{"_index":2098,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["basic",{"_index":2162,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/VtpassService.html":{}}}],["bcrypt",{"_index":998,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlutterwaveService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":1001,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pin",{"_index":1005,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash('tapmonisuperadmin_password",{"_index":2465,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["bcrypt.hash(createadmindto.password",{"_index":3200,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":3182,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(payload.password",{"_index":3205,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(string(pin",{"_index":3215,"title":{},"body":{"injectables/UserService.html":{}}}],["bearer",{"_index":1813,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{}}}],["bill",{"_index":455,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Wallet.html":{}}}],["bill.dto",{"_index":1788,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["bill.dto.ts",{"_index":1248,"title":{},"body":{"classes/CreateBillDto.html":{}}}],["bill.dto.ts:10",{"_index":1251,"title":{},"body":{"classes/CreateBillDto.html":{}}}],["bill.dto.ts:14",{"_index":1249,"title":{},"body":{"classes/CreateBillDto.html":{}}}],["bill.dto.ts:18",{"_index":1253,"title":{},"body":{"classes/CreateBillDto.html":{}}}],["bill.dto.ts:22",{"_index":1252,"title":{},"body":{"classes/CreateBillDto.html":{}}}],["bill.dto.ts:6",{"_index":1250,"title":{},"body":{"classes/CreateBillDto.html":{}}}],["billcategories",{"_index":1789,"title":{},"body":{"injectables/FlutterwaveService.html":{},"miscellaneous/typealiases.html":{}}}],["billcategorytype",{"_index":1821,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["billercode",{"_index":1840,"title":{},"body":{"injectables/FlutterwaveService.html":{},"classes/ValidateAirtimeDto.html":{}}}],["billerscode",{"_index":1107,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"entities/TvSubscriptionActivity.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{}}}],["body",{"_index":198,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{}}}],["body.data",{"_index":785,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["body.status",{"_index":2697,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["bodypin",{"_index":3739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":1340,"title":{},"body":{"classes/CreateSettingDto.html":{},"entities/CustomerKyc.html":{},"injectables/FlutterwaveService.html":{},"entities/Setting.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":3640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bouquetchange",{"_index":3411,"title":{},"body":{"injectables/VtpassService.html":{}}}],["bouquetchange(bouquetchangedto",{"_index":3415,"title":{},"body":{"injectables/VtpassService.html":{}}}],["bouquetchangedstv_gotv",{"_index":361,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["bouquetchangedstv_gotv(@body",{"_index":428,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["bouquetchangedstv_gotv(buydstvgotv",{"_index":369,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["bouquetchangedto",{"_index":1104,"title":{"classes/BouquetChangeDto.html":{}},"body":{"classes/BouquetChangeDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["bouquetrenewal",{"_index":3412,"title":{},"body":{"injectables/VtpassService.html":{}}}],["bouquetrenewal(bouquetrenewaldto",{"_index":3417,"title":{},"body":{"injectables/VtpassService.html":{}}}],["bouquetrenewaldto",{"_index":1121,"title":{"classes/BouquetRenewalDto.html":{}},"body":{"classes/BouquetRenewalDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["bouquetrenewdstv_gotv",{"_index":362,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["bouquetrenewdstv_gotv(@body",{"_index":431,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["bouquetrenewdstv_gotv(buydstvgotv",{"_index":373,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["branch",{"_index":3655,"title":{},"body":{"index.html":{}}}],["break",{"_index":1095,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["browse",{"_index":3675,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3670,"title":{},"body":{"index.html":{},"modules.html":{}}}],["buffer.from",{"_index":2160,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/VtpassService.html":{}}}],["build",{"_index":117,"title":{},"body":{"injectables/AbilityFactory.html":{},"index.html":{}}}],["buyairtime",{"_index":363,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buyairtime(@body",{"_index":418,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/VtpassController.html":{}}}],["buyairtime(buyairtimedto",{"_index":376,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buyairtimedto",{"_index":377,"title":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{}},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buyairtimedto['amount",{"_index":505,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["buyairtimevtpass",{"_index":465,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["buyairtimevtpass(buyairtimedto",{"_index":473,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["buydata",{"_index":3301,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buydata(@body",{"_index":3373,"title":{},"body":{"controllers/VtpassController.html":{}}}],["buydata(buydatadto",{"_index":3315,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buydatadto",{"_index":386,"title":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{}},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buydatadto.variation_code",{"_index":514,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["buydstvgotv",{"_index":370,"title":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["buydstvgotv.variation_code",{"_index":518,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["buyelectricity",{"_index":364,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"injectables/VtpassService.html":{}}}],["buyelectricity(@body",{"_index":422,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["buyelectricity(buyelectricitydto",{"_index":3421,"title":{},"body":{"injectables/VtpassService.html":{}}}],["buyelectricity(buyelectrictydto",{"_index":380,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["buyelectricitydto",{"_index":381,"title":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{}},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buyelectricitydto(@body",{"_index":3397,"title":{},"body":{"controllers/VtpassController.html":{}}}],["buyelectricitydto(buyelectricitydto",{"_index":3317,"title":{},"body":{"controllers/VtpassController.html":{}}}],["buyelectrictydto",{"_index":384,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["buymobiledata",{"_index":365,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["buymobiledata(@body",{"_index":425,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["buymobiledata(buydatadto",{"_index":385,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["buyshowmax",{"_index":3302,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buyshowmax(@body",{"_index":3393,"title":{},"body":{"controllers/VtpassController.html":{}}}],["buyshowmax(buyshowmaxdto",{"_index":3319,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buyshowmaxdto",{"_index":1192,"title":{"classes/BuyShowmaxDto.html":{}},"body":{"classes/BuyShowmaxDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buyshowmaxstartimesdto",{"_index":1200,"title":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["buystartimes",{"_index":3303,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buystartimes(@body",{"_index":3391,"title":{},"body":{"controllers/VtpassController.html":{}}}],["buystartimes(buystartimesdto",{"_index":3322,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buystartimesdto",{"_index":1210,"title":{"classes/BuyStartimesDto.html":{}},"body":{"classes/BuyStartimesDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buywaec",{"_index":3304,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buywaec(@body",{"_index":3395,"title":{},"body":{"controllers/VtpassController.html":{}}}],["buywaec(buywaecdto",{"_index":3325,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["buywaecdto",{"_index":1217,"title":{"classes/BuyWAECDto.html":{}},"body":{"classes/BuyWAECDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["bvn",{"_index":318,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{},"entities/CustomerKyc.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{},"classes/VerifyBvnDto.html":{}}}],["bvn.dto",{"_index":1058,"title":{},"body":{"controllers/BankController.html":{}}}],["bvn.dto.ts",{"_index":3275,"title":{},"body":{"classes/VerifyBvnDto.html":{}}}],["bvn.dto.ts:2",{"_index":3276,"title":{},"body":{"classes/VerifyBvnDto.html":{}}}],["bvndob",{"_index":1518,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["bvngender",{"_index":1519,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["bvnname",{"_index":1520,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["bvnnationality",{"_index":1521,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["cables",{"_index":3692,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cabletv_service",{"_index":3631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache",{"_index":878,"title":{},"body":{"modules/AppModule.html":{},"injectables/BankService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":1079,"title":{},"body":{"injectables/BankService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{}}}],["cacheinterceptor",{"_index":855,"title":{},"body":{"modules/AppModule.html":{},"controllers/BankController.html":{},"controllers/MonnifyController.html":{}}}],["cachekey",{"_index":1052,"title":{},"body":{"controllers/BankController.html":{},"controllers/MonnifyController.html":{}}}],["cachekey('allbanks",{"_index":1061,"title":{},"body":{"controllers/BankController.html":{}}}],["cachemanager",{"_index":1076,"title":{},"body":{"injectables/BankService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{}}}],["cachemodule",{"_index":856,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":913,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":2086,"title":{},"body":{"controllers/MonnifyController.html":{}}}],["call",{"_index":2167,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["callback",{"_index":2791,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["callback_url",{"_index":1349,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["can([read",{"_index":127,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["can(create",{"_index":129,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["can(manage",{"_index":122,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["can(read",{"_index":128,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["canactivate",{"_index":10,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGaurd.html":{}}}],["canactivate(context",{"_index":23,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGaurd.html":{},"miscellaneous/variables.html":{}}}],["cancelled",{"_index":3620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.dto",{"_index":3364,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["card.dto.ts",{"_index":3284,"title":{},"body":{"classes/VerifySmartCardDto.html":{}}}],["card.dto.ts:10",{"_index":3286,"title":{},"body":{"classes/VerifySmartCardDto.html":{}}}],["card.dto.ts:6",{"_index":3285,"title":{},"body":{"classes/VerifySmartCardDto.html":{}}}],["card_number",{"_index":1022,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/InitiateDepositDto.html":{}}}],["case",{"_index":324,"title":{},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/variables.html":{}}}],["casl/ability",{"_index":31,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"dependencies.html":{}}}],["caslabilityfactory",{"_index":14,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["catch",{"_index":60,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/ReferralService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["catcherror",{"_index":1786,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["catcherror((error",{"_index":1829,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["categories",{"_index":1791,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/VtpassService.html":{}}}],["categories.data.filter((category",{"_index":1834,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["categories.status",{"_index":1833,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["categories.ts",{"_index":3686,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["categories?${category}=1",{"_index":1825,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["category.country",{"_index":1835,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["change.dto",{"_index":3366,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["change.dto.ts",{"_index":1106,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["change.dto.ts:11",{"_index":1118,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["change.dto.ts:15",{"_index":1113,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["change.dto.ts:19",{"_index":1112,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["change.dto.ts:23",{"_index":1120,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["change.dto.ts:27",{"_index":1119,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["change.dto.ts:30",{"_index":1115,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["change.dto.ts:7",{"_index":1117,"title":{},"body":{"classes/BouquetChangeDto.html":{}}}],["changebouquet",{"_index":3305,"title":{},"body":{"controllers/VtpassController.html":{}}}],["changebouquet(@body",{"_index":3387,"title":{},"body":{"controllers/VtpassController.html":{}}}],["changebouquet(bouquetchangedto",{"_index":3328,"title":{},"body":{"controllers/VtpassController.html":{}}}],["changes",{"_index":2836,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["channel",{"_index":2958,"title":{},"body":{"injectables/TwillioService.html":{}}}],["charge",{"_index":1863,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["check",{"_index":1894,"title":{},"body":{"controllers/HealthController.html":{}}}],["check_ability",{"_index":36,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/variables.html":{}}}],["checkabilities",{"_index":607,"title":{},"body":{"controllers/AdminController.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["checkabilities(new",{"_index":628,"title":{},"body":{"controllers/AdminController.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{}}}],["cipher",{"_index":1876,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["cipher.finish",{"_index":1886,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["cipher.output",{"_index":1888,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["cipher.start",{"_index":1881,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["cipher.update(forge.util.createbuffer(text",{"_index":1883,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["class",{"_index":41,"title":{"classes/AccountRepository.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"classes/AdminRepository.html":{},"classes/AirtimeActivityRepository.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"classes/Auth.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ElectricityBillActivityRepository.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"classes/Health.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"classes/Nodemailer.html":{},"classes/Paystack.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"classes/ReceiveTransferRepository.html":{},"classes/ReferralRepository.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"classes/Sm.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"classes/Transfer.html":{},"classes/TransferRequestRepository.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"classes/WalletRepository.html":{},"classes/WithdrawalRepository.html":{}},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":241,"title":{},"body":{"classes/AccountRepository.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"classes/AdminRepository.html":{},"classes/AirtimeActivityRepository.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"classes/Auth.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ElectricityBillActivityRepository.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"classes/Health.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"classes/Nodemailer.html":{},"classes/Paystack.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"classes/ReceiveTransferRepository.html":{},"classes/ReferralRepository.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"classes/Sm.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"classes/Transfer.html":{},"classes/TransferRequestRepository.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"classes/WalletRepository.html":{},"classes/WithdrawalRepository.html":{},"overview.html":{}}}],["cli",{"_index":1616,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":1856,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["clientidsecretinbase64",{"_index":2159,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["cluster_abilitymodule",{"_index":138,"title":{},"body":{"modules/AbilityModule.html":{},"overview.html":{}}}],["cluster_abilitymodule_exports",{"_index":139,"title":{},"body":{"modules/AbilityModule.html":{},"overview.html":{}}}],["cluster_abilitymodule_providers",{"_index":140,"title":{},"body":{"modules/AbilityModule.html":{},"overview.html":{}}}],["cluster_accountmodule",{"_index":223,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":225,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":224,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":226,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_activitiesmodule",{"_index":443,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_activitiesmodule_imports",{"_index":444,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_activitiesmodule_providers",{"_index":445,"title":{},"body":{"modules/ActivitiesModule.html":{},"overview.html":{}}}],["cluster_adminmodule",{"_index":639,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":641,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":640,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_announcementmodule",{"_index":793,"title":{},"body":{"modules/AnnouncementModule.html":{},"overview.html":{}}}],["cluster_announcementmodule_providers",{"_index":794,"title":{},"body":{"modules/AnnouncementModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":839,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":840,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":961,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":963,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":962,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bankmodule",{"_index":1064,"title":{},"body":{"modules/BankModule.html":{},"overview.html":{}}}],["cluster_bankmodule_exports",{"_index":1066,"title":{},"body":{"modules/BankModule.html":{},"overview.html":{}}}],["cluster_bankmodule_imports",{"_index":1067,"title":{},"body":{"modules/BankModule.html":{}}}],["cluster_bankmodule_providers",{"_index":1065,"title":{},"body":{"modules/BankModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":1678,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_exports",{"_index":1680,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_imports",{"_index":1679,"title":{},"body":{"modules/EmailModule.html":{}}}],["cluster_emailmodule_providers",{"_index":1681,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_flutterwavemodule",{"_index":1757,"title":{},"body":{"modules/FlutterwaveModule.html":{},"overview.html":{}}}],["cluster_flutterwavemodule_exports",{"_index":1759,"title":{},"body":{"modules/FlutterwaveModule.html":{},"overview.html":{}}}],["cluster_flutterwavemodule_providers",{"_index":1758,"title":{},"body":{"modules/FlutterwaveModule.html":{},"overview.html":{}}}],["cluster_logmodule",{"_index":2019,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_exports",{"_index":2021,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_providers",{"_index":2020,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_merchantapimodule",{"_index":2065,"title":{},"body":{"modules/MerchantApiModule.html":{},"overview.html":{}}}],["cluster_merchantapimodule_providers",{"_index":2066,"title":{},"body":{"modules/MerchantApiModule.html":{},"overview.html":{}}}],["cluster_monnifymodule",{"_index":2091,"title":{},"body":{"modules/MonnifyModule.html":{},"overview.html":{}}}],["cluster_monnifymodule_exports",{"_index":2093,"title":{},"body":{"modules/MonnifyModule.html":{},"overview.html":{}}}],["cluster_monnifymodule_providers",{"_index":2092,"title":{},"body":{"modules/MonnifyModule.html":{},"overview.html":{}}}],["cluster_nodemailermodule",{"_index":2216,"title":{},"body":{"modules/NodemailerModule.html":{},"overview.html":{}}}],["cluster_nodemailermodule_exports",{"_index":2218,"title":{},"body":{"modules/NodemailerModule.html":{},"overview.html":{}}}],["cluster_nodemailermodule_providers",{"_index":2217,"title":{},"body":{"modules/NodemailerModule.html":{},"overview.html":{}}}],["cluster_paystackmodule",{"_index":2294,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_paystackmodule_exports",{"_index":2296,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_paystackmodule_providers",{"_index":2295,"title":{},"body":{"modules/PaystackModule.html":{},"overview.html":{}}}],["cluster_referralmodule",{"_index":2410,"title":{},"body":{"modules/ReferralModule.html":{},"overview.html":{}}}],["cluster_referralmodule_exports",{"_index":2411,"title":{},"body":{"modules/ReferralModule.html":{},"overview.html":{}}}],["cluster_referralmodule_providers",{"_index":2412,"title":{},"body":{"modules/ReferralModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2547,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":2548,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_providers",{"_index":2549,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_smsmodule",{"_index":2599,"title":{},"body":{"modules/SmsModule.html":{},"overview.html":{}}}],["cluster_smsmodule_exports",{"_index":2601,"title":{},"body":{"modules/SmsModule.html":{},"overview.html":{}}}],["cluster_smsmodule_imports",{"_index":2600,"title":{},"body":{"modules/SmsModule.html":{}}}],["cluster_smsmodule_providers",{"_index":2602,"title":{},"body":{"modules/SmsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule",{"_index":2706,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_exports",{"_index":2708,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_imports",{"_index":2709,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["cluster_transactionsmodule_providers",{"_index":2707,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transfersmodule",{"_index":2885,"title":{},"body":{"modules/TransfersModule.html":{},"overview.html":{}}}],["cluster_transfersmodule_imports",{"_index":2887,"title":{},"body":{"modules/TransfersModule.html":{}}}],["cluster_transfersmodule_providers",{"_index":2886,"title":{},"body":{"modules/TransfersModule.html":{},"overview.html":{}}}],["cluster_twilliomodule",{"_index":2930,"title":{},"body":{"modules/TwillioModule.html":{},"overview.html":{}}}],["cluster_twilliomodule_exports",{"_index":2931,"title":{},"body":{"modules/TwillioModule.html":{},"overview.html":{}}}],["cluster_twilliomodule_providers",{"_index":2932,"title":{},"body":{"modules/TwillioModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3105,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":3106,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":3107,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":3108,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_vtpassmodule",{"_index":3405,"title":{},"body":{"modules/VtpassModule.html":{},"overview.html":{}}}],["cluster_vtpassmodule_exports",{"_index":3407,"title":{},"body":{"modules/VtpassModule.html":{},"overview.html":{}}}],["cluster_vtpassmodule_providers",{"_index":3406,"title":{},"body":{"modules/VtpassModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":3487,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_exports",{"_index":3489,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_providers",{"_index":3488,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["code",{"_index":1227,"title":{},"body":{"classes/ConfirmPhoneNumberDto.html":{},"injectables/EmailService.html":{},"injectables/MonnifyService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/VerifyEmailDTO.html":{}}}],["code.util",{"_index":2689,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["column",{"_index":160,"title":{},"body":{"entities/Account.html":{},"classes/Activity-1.html":{},"entities/Admin.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"entities/Log.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"entities/SeedingLogEntry.html":{},"entities/SendTransfer.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"classes/User.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{}}}],["column({default",{"_index":711,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Withdrawal.html":{}}}],["column({nullable",{"_index":561,"title":{},"body":{"classes/Activity-1.html":{},"entities/Announcement.html":{},"entities/CustomerKyc.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["column({type",{"_index":551,"title":{},"body":{"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"entities/Wallet.html":{}}}],["column({unique",{"_index":3035,"title":{},"body":{"classes/User.html":{}}}],["common/gaurds/jwt",{"_index":889,"title":{},"body":{"modules/AppModule.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{}}}],["compare",{"_index":1800,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["completed",{"_index":2175,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["completedeposit(reference",{"_index":2818,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["compodoc/compodoc",{"_index":3543,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":3665,"title":{},"body":{"index.html":{}}}],["config",{"_index":3695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":859,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":895,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":260,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"modules/DatabaseModule.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{}}}],["configservice.get('jwt_secret",{"_index":979,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('node_env",{"_index":1442,"title":{},"body":{"injectables/CustomLogger.html":{},"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_db",{"_index":1611,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_db_host",{"_index":1606,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_db_port",{"_index":1607,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_password",{"_index":1610,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('postgres_user",{"_index":1609,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('twillio_account_sid",{"_index":2948,"title":{},"body":{"injectables/TwillioService.html":{}}}],["configservice.get('twillio_auth_token",{"_index":2949,"title":{},"body":{"injectables/TwillioService.html":{}}}],["configure",{"_index":2471,"title":{},"body":{"modules/SeedingModule.html":{}}}],["configure(consumer",{"_index":2472,"title":{},"body":{"modules/SeedingModule.html":{}}}],["confirmphonenumber",{"_index":2937,"title":{},"body":{"injectables/TwillioService.html":{}}}],["confirmphonenumber(phonenumber",{"_index":2941,"title":{},"body":{"injectables/TwillioService.html":{}}}],["confirmphonenumberdto",{"_index":1224,"title":{"classes/ConfirmPhoneNumberDto.html":{}},"body":{"classes/ConfirmPhoneNumberDto.html":{},"controllers/SmsController.html":{}}}],["confirmwithdrawalcallback",{"_index":2655,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["confirmwithdrawalcallback(@body",{"_index":2692,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["confirmwithdrawalcallback(body",{"_index":2661,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["connection",{"_index":467,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"injectables/AdminService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{}}}],["connectionoptions",{"_index":3714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('starting",{"_index":2166,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["console.log(context.switchtohttp().getrequest",{"_index":53,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["console.log(error",{"_index":2339,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["console.log(name",{"_index":2585,"title":{},"body":{"injectables/SettingsService.html":{}}}],["console.log(result",{"_index":1815,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["console.log(stdout",{"_index":3754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolelogger",{"_index":1411,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["consoleloggeroptions",{"_index":1419,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["const",{"_index":44,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"injectables/SettingsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}}}],["constructor(activityrepository",{"_index":669,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(announcementrepository",{"_index":811,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["constructor(authservice",{"_index":1997,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(cachemanager",{"_index":1074,"title":{},"body":{"injectables/BankService.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{}}}],["constructor(configservice",{"_index":1772,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/PaystackService.html":{},"injectables/TwillioService.html":{},"injectables/VtpassService.html":{}}}],["constructor(connection",{"_index":466,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/TransfersService.html":{}}}],["constructor(context",{"_index":1417,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["constructor(customerrepository",{"_index":3130,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(emailrepository",{"_index":1694,"title":{},"body":{"injectables/EmailService.html":{}}}],["constructor(entitymanager",{"_index":2447,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["constructor(logsrepository",{"_index":2029,"title":{},"body":{"injectables/LogService.html":{}}}],["constructor(monnifyaccountrepository",{"_index":257,"title":{},"body":{"injectables/AccountService.html":{}}}],["constructor(private",{"_index":214,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"injectables/SeedingMiddleware.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{}}}],["constructor(reference",{"_index":2442,"title":{},"body":{"entities/SeedingLogEntry.html":{}}}],["constructor(referralrepository",{"_index":2423,"title":{},"body":{"injectables/ReferralService.html":{}}}],["constructor(reflector",{"_index":12,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGaurd.html":{}}}],["constructor(settingrepository",{"_index":2560,"title":{},"body":{"injectables/SettingsService.html":{}}}],["constructor(twillioservice",{"_index":2609,"title":{},"body":{"injectables/SmsService.html":{}}}],["constructor(userservice",{"_index":986,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(walletrepository",{"_index":3505,"title":{},"body":{"injectables/WalletService.html":{}}}],["consumer",{"_index":2475,"title":{},"body":{"modules/SeedingModule.html":{}}}],["consumer.apply(seedingmiddleware).forroutes",{"_index":2477,"title":{},"body":{"modules/SeedingModule.html":{}}}],["content",{"_index":2331,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["context",{"_index":26,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/CustomLogger.html":{},"injectables/JwtAuthGaurd.html":{},"entities/Log.html":{}}}],["context.getclass",{"_index":1975,"title":{},"body":{"injectables/JwtAuthGaurd.html":{}}}],["context.gethandler",{"_index":47,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGaurd.html":{}}}],["context.switchtohttp().getrequest",{"_index":52,"title":{},"body":{"guards/AbilitiesGuard.html":{},"miscellaneous/variables.html":{}}}],["contractcode",{"_index":343,"title":{},"body":{"injectables/AccountService.html":{}}}],["controller",{"_index":183,"title":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"controllers/HealthController.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{}},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"controllers/HealthController.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{}}}],["controller('account",{"_index":213,"title":{},"body":{"controllers/AccountController.html":{}}}],["controller('activities",{"_index":415,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["controller('admin",{"_index":618,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('announcement",{"_index":771,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["controller('auth",{"_index":950,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('bank",{"_index":1059,"title":{},"body":{"controllers/BankController.html":{}}}],["controller('email",{"_index":1676,"title":{},"body":{"controllers/EmailController.html":{}}}],["controller('flutterwave",{"_index":1755,"title":{},"body":{"controllers/FlutterwaveController.html":{}}}],["controller('health",{"_index":1903,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('log",{"_index":2018,"title":{},"body":{"controllers/LogController.html":{}}}],["controller('merchant",{"_index":2059,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["controller('monnify",{"_index":2090,"title":{},"body":{"controllers/MonnifyController.html":{}}}],["controller('paystack",{"_index":2280,"title":{},"body":{"controllers/PaystackController.html":{}}}],["controller('referral",{"_index":2404,"title":{},"body":{"controllers/ReferralController.html":{}}}],["controller('settings",{"_index":2538,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller('sms",{"_index":2598,"title":{},"body":{"controllers/SmsController.html":{}}}],["controller('transactions",{"_index":2690,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["controller('transfers",{"_index":2875,"title":{},"body":{"controllers/TransfersController.html":{}}}],["controller('twillio",{"_index":2929,"title":{},"body":{"controllers/TwillioController.html":{}}}],["controller('user",{"_index":3079,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('vtpass",{"_index":3371,"title":{},"body":{"controllers/VtpassController.html":{}}}],["controller('wallet",{"_index":3483,"title":{},"body":{"controllers/WalletController.html":{}}}],["controllers",{"_index":185,"title":{},"body":{"controllers/AccountController.html":{},"modules/AccountModule.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["cookie",{"_index":3559,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":3662,"title":{},"body":{"index.html":{}}}],["country",{"_index":1133,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/CreateBillDto.html":{}}}],["create",{"_index":108,"title":{},"body":{"injectables/AbilityFactory.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"injectables/TransactionsService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["create(@body",{"_index":433,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/AnnouncementController.html":{},"controllers/MerchantApiController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{}}}],["create(body",{"_index":744,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["create(createactivitydto",{"_index":389,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["create(createmerchantapidto",{"_index":2049,"title":{},"body":{"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{}}}],["create(createpaystackdto",{"_index":2251,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["create(createreferraldto",{"_index":2394,"title":{},"body":{"controllers/ReferralController.html":{},"injectables/ReferralService.html":{}}}],["create(createuserdto",{"_index":3056,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createvtpassdto",{"_index":3331,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["create(createwalletdto",{"_index":3507,"title":{},"body":{"injectables/WalletService.html":{}}}],["create(payload",{"_index":814,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["createaccount",{"_index":249,"title":{},"body":{"injectables/AccountService.html":{}}}],["createaccount(createaccountdto",{"_index":264,"title":{},"body":{"injectables/AccountService.html":{}}}],["createaccountdto",{"_index":208,"title":{"classes/CreateAccountDto.html":{}},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/AdminController.html":{},"classes/CreateAccountDto.html":{},"classes/UpdateAccountDto.html":{}}}],["createactivitydto",{"_index":390,"title":{"classes/CreateActivityDto.html":{}},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/CreateActivityDto.html":{},"classes/UpdateActivityDto.html":{}}}],["createadmin",{"_index":592,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UserService.html":{}}}],["createadmin(@body",{"_index":620,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin(createadmindto",{"_index":596,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UserService.html":{}}}],["createadmin(payload",{"_index":3133,"title":{},"body":{"injectables/UserService.html":{}}}],["createadmindto",{"_index":599,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UserService.html":{}}}],["createairtimedto",{"_index":1239,"title":{"classes/CreateAirtimeDto.html":{}},"body":{"classes/CreateAirtimeDto.html":{},"classes/UpdateAirtimeDto.html":{}}}],["createaliasresolver",{"_index":80,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["createannouncementdto",{"_index":745,"title":{"classes/CreateAnnouncementDto.html":{}},"body":{"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"classes/CreateAnnouncementDto.html":{},"classes/UpdateAnnouncementDto.html":{}}}],["createauthdto",{"_index":1243,"title":{"classes/CreateAuthDto.html":{}},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{}}}],["createbill(createbilldto",{"_index":1842,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["createbilldto",{"_index":1246,"title":{"classes/CreateBillDto.html":{}},"body":{"classes/CreateBillDto.html":{},"injectables/FlutterwaveService.html":{}}}],["createcustomer",{"_index":3120,"title":{},"body":{"injectables/UserService.html":{}}}],["createcustomer(createuserdto",{"_index":3135,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":2508,"title":{},"body":{"entities/Setting.html":{}}}],["createdatecolumn",{"_index":567,"title":{},"body":{"classes/Activity-1.html":{},"classes/EntityContainer.html":{},"entities/Log.html":{},"entities/SeedingLogEntry.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["createdby",{"_index":726,"title":{},"body":{"entities/Announcement.html":{},"injectables/AnnouncementService.html":{}}}],["createddate",{"_index":522,"title":{},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/EntityContainer.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["createelectricitybilldto",{"_index":1254,"title":{"classes/CreateElectricitybillDto.html":{}},"body":{"classes/CreateElectricitybillDto.html":{},"classes/UpdateElectricitybillDto.html":{}}}],["createemaildto",{"_index":1257,"title":{"classes/CreateEmailDto.html":{}},"body":{"classes/CreateEmailDto.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/UpdateEmailDto.html":{}}}],["createhealthdto",{"_index":1267,"title":{"classes/CreateHealthDto.html":{}},"body":{"classes/CreateHealthDto.html":{},"classes/UpdateHealthDto.html":{}}}],["createlog",{"_index":2028,"title":{},"body":{"injectables/LogService.html":{}}}],["createlog(log",{"_index":2032,"title":{},"body":{"injectables/LogService.html":{}}}],["createlogdto",{"_index":1270,"title":{"classes/CreateLogDto.html":{}},"body":{"classes/CreateLogDto.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"classes/UpdateLogDto.html":{}}}],["createmerchantapidto",{"_index":1273,"title":{"classes/CreateMerchantApiDto.html":{}},"body":{"classes/CreateMerchantApiDto.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"classes/UpdateMerchantApiDto.html":{}}}],["createmobiledatumdto",{"_index":1277,"title":{"classes/CreateMobiledatumDto.html":{}},"body":{"classes/CreateMobiledatumDto.html":{},"classes/UpdateMobiledatumDto.html":{}}}],["createmonnifydto",{"_index":1280,"title":{"classes/CreateMonnifyDto.html":{}},"body":{"classes/CreateMonnifyDto.html":{},"controllers/MonnifyController.html":{},"classes/UpdateMonnifyDto.html":{}}}],["createnewadmin",{"_index":668,"title":{},"body":{"injectables/AdminService.html":{}}}],["createnewadmin(payload",{"_index":674,"title":{},"body":{"injectables/AdminService.html":{}}}],["createnodemailerdto",{"_index":1283,"title":{"classes/CreateNodemailerDto.html":{}},"body":{"classes/CreateNodemailerDto.html":{},"classes/UpdateNodemailerDto.html":{}}}],["createpaystackdto",{"_index":1286,"title":{"classes/CreatePaystackDto.html":{}},"body":{"classes/CreatePaystackDto.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/UpdatePaystackDto.html":{}}}],["createquerybuilder('deposit",{"_index":2760,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createquerybuilder('transaction",{"_index":2784,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createquerybuilder('wallet",{"_index":3531,"title":{},"body":{"injectables/WalletService.html":{}}}],["createquerybuilder('withdrawal",{"_index":2755,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createreceivetransferpermission",{"_index":1289,"title":{"classes/CreateReceiveTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["createreferral",{"_index":2422,"title":{},"body":{"injectables/ReferralService.html":{}}}],["createreferral(createreferraldto",{"_index":2426,"title":{},"body":{"injectables/ReferralService.html":{}}}],["createreferralcode",{"_index":3121,"title":{},"body":{"injectables/UserService.html":{}}}],["createreferralcode(firstname",{"_index":3137,"title":{},"body":{"injectables/UserService.html":{}}}],["createreferraldto",{"_index":1319,"title":{"classes/CreateReferralDto.html":{}},"body":{"classes/CreateReferralDto.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"classes/UpdateReferralDto.html":{}}}],["createreservedaccount",{"_index":1870,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{}}}],["createreservedaccount(createreservedaccountdto",{"_index":2116,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["createreservedaccountdto",{"_index":1326,"title":{"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{}},"body":{"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{}}}],["createroledto",{"_index":1333,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["createsendtransferpermission",{"_index":1304,"title":{"classes/CreateSendTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["createsettingdto",{"_index":680,"title":{"classes/CreateSettingDto.html":{}},"body":{"injectables/AdminService.html":{},"classes/CreateSettingDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UpdateSettingDto.html":{}}}],["createsettingdto.name",{"_index":2577,"title":{},"body":{"injectables/SettingsService.html":{}}}],["createtestaccount",{"_index":2227,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["createtransactiondto",{"_index":1346,"title":{"classes/CreateTransactionDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"injectables/PaystackService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateTransactionDto.html":{}}}],["createtransactionpin",{"_index":984,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtransactionpin(password",{"_index":989,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtransferdto",{"_index":1353,"title":{"classes/CreateTransferDto.html":{}},"body":{"classes/CreateTransferDto.html":{},"controllers/TransfersController.html":{},"injectables/TransfersService.html":{},"classes/UpdateTransferDto.html":{}}}],["createtransferrecipient",{"_index":2246,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["createtransferrecipient(createtransferrecipientdto",{"_index":2253,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["createtransferrecipientdto",{"_index":1361,"title":{"classes/CreateTransferRecipientDto.html":{}},"body":{"classes/CreateTransferRecipientDto.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["createtransferrequestpermission",{"_index":1312,"title":{"classes/CreateTransferRequestPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["createtransport",{"_index":2226,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["createtvsubscriptiondto",{"_index":1372,"title":{"classes/CreateTvsubscriptionDto.html":{}},"body":{"classes/CreateTvsubscriptionDto.html":{},"classes/UpdateTvsubscriptionDto.html":{}}}],["createtwilliodto",{"_index":1375,"title":{"classes/CreateTwillioDto.html":{}},"body":{"classes/CreateTwillioDto.html":{},"controllers/TwillioController.html":{},"classes/UpdateTwillioDto.html":{}}}],["createuserdto",{"_index":613,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserpermission",{"_index":1299,"title":{"classes/CreateUserPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["createvirtualaccount",{"_index":250,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MonnifyService.html":{}}}],["createvirtualaccount(createvirtualaccountdto",{"_index":2806,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createvirtualaccount(userid",{"_index":267,"title":{},"body":{"injectables/AccountService.html":{}}}],["createvirtualaccountdto",{"_index":1394,"title":{"classes/CreateVirtualAccountDto.html":{}},"body":{"classes/CreateVirtualAccountDto.html":{},"injectables/TransactionsService.html":{}}}],["createvirtualaccountdto.accountrecference",{"_index":2809,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createvirtualaccountdto.bvn",{"_index":2810,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createvirtualaccountdto.customeremail",{"_index":2808,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["createvtpassdto",{"_index":1400,"title":{"classes/CreateVtpassDto.html":{}},"body":{"classes/CreateVtpassDto.html":{},"classes/UpdateVtpassDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["createwalletdto",{"_index":1403,"title":{"classes/CreateWalletDto.html":{}},"body":{"classes/CreateWalletDto.html":{},"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["createwithdrawalpermission",{"_index":1316,"title":{"classes/CreateWithdrawalPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"controllers/TransactionsController.html":{}}}],["creationdate",{"_index":2007,"title":{},"body":{"entities/Log.html":{},"entities/SeedingLogEntry.html":{}}}],["credit",{"_index":3635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["crreated",{"_index":1714,"title":{},"body":{"injectables/EmailService.html":{}}}],["crypto",{"_index":1792,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/UserService.html":{}}}],["crypto.randombytes(4).tostring('hex').substring(0",{"_index":3211,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["currency",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/FWWithdrawalDto.html":{},"injectables/FlutterwaveService.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"entities/ReceiveTransfer.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{},"entities/TransferRequest.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"entities/Wallet.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["currency.naira",{"_index":337,"title":{},"body":{"injectables/AccountService.html":{},"injectables/FlutterwaveService.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["currencycode",{"_index":349,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["currentbankservice",{"_index":248,"title":{},"body":{"injectables/AccountService.html":{}}}],["currently",{"_index":1088,"title":{},"body":{"injectables/BankService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{}}}],["currentservice",{"_index":1071,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["custom",{"_index":2025,"title":{},"body":{"modules/LogModule.html":{}}}],["customer",{"_index":103,"title":{"entities/Customer.html":{}},"body":{"injectables/AbilityFactory.html":{},"entities/Account.html":{},"classes/Activity-1.html":{},"entities/AirtimeActivity.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/CreateBillDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerRepository.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"interfaces/RequiredRule.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{},"miscellaneous/enumerations.html":{}}}],["customer.accounts",{"_index":170,"title":{},"body":{"entities/Account.html":{}}}],["customer.entity",{"_index":1538,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["customer.kyc",{"_index":1533,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["customer.merchant",{"_index":2044,"title":{},"body":{"entities/Merchant.html":{}}}],["customer.merchantaccounts",{"_index":2042,"title":{},"body":{"entities/Merchant.html":{}}}],["customer.referrals",{"_index":2388,"title":{},"body":{"entities/Referral.html":{}}}],["customer.referredby",{"_index":2386,"title":{},"body":{"entities/Referral.html":{}}}],["customer.wallets",{"_index":3472,"title":{},"body":{"entities/Wallet.html":{}}}],["customer.withdrawals",{"_index":1635,"title":{},"body":{"entities/Deposit.html":{},"entities/Withdrawal.html":{}}}],["customercode",{"_index":1839,"title":{},"body":{"injectables/FlutterwaveService.html":{},"classes/ValidateAirtimeDto.html":{}}}],["customeremail",{"_index":350,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["customerkyc",{"_index":1473,"title":{"entities/CustomerKyc.html":{}},"body":{"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"injectables/UserService.html":{}}}],["customerkyc.user",{"_index":1475,"title":{},"body":{"entities/Customer.html":{}}}],["customerkycrepository",{"_index":1540,"title":{"classes/CustomerKycRepository.html":{}},"body":{"classes/CustomerKycRepository.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["customername",{"_index":352,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["customerrepository",{"_index":1545,"title":{"classes/CustomerRepository.html":{}},"body":{"classes/CustomerRepository.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["customlogger",{"_index":1408,"title":{"injectables/CustomLogger.html":{}},"body":{"injectables/CustomLogger.html":{},"modules/LogModule.html":{},"overview.html":{}}}],["cvv",{"_index":1023,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/InitiateDepositDto.html":{}}}],["d",{"_index":3667,"title":{},"body":{"index.html":{}}}],["d01",{"_index":2186,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["d02",{"_index":2187,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["d03",{"_index":2188,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["d04",{"_index":2189,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["data",{"_index":77,"title":{},"body":{"injectables/AbilityFactory.html":{},"injectables/AccountService.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"classes/MobileDataActivityRepository.html":{},"injectables/MonnifyService.html":{},"interfaces/ReturnTypeContainer.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["data.dto",{"_index":410,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["data.dto.ts",{"_index":1163,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{}}}],["data.dto.ts:11",{"_index":1175,"title":{},"body":{"classes/BuyDataDto-2.html":{}}}],["data.dto.ts:12",{"_index":1166,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{}}}],["data.dto.ts:15",{"_index":1174,"title":{},"body":{"classes/BuyDataDto-2.html":{}}}],["data.dto.ts:17",{"_index":1167,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{}}}],["data.dto.ts:19",{"_index":1173,"title":{},"body":{"classes/BuyDataDto-2.html":{}}}],["data.dto.ts:22",{"_index":1168,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{}}}],["data.dto.ts:23",{"_index":1176,"title":{},"body":{"classes/BuyDataDto-2.html":{}}}],["data.dto.ts:27",{"_index":1169,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{}}}],["data.dto.ts:32",{"_index":1170,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{}}}],["data.dto.ts:36",{"_index":1164,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{}}}],["data.dto.ts:40",{"_index":1171,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{}}}],["data.dto.ts:7",{"_index":1165,"title":{},"body":{"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{}}}],["data.emailcode",{"_index":1723,"title":{},"body":{"injectables/EmailService.html":{}}}],["data.isactive",{"_index":1091,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["data.value",{"_index":1092,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["data_bundle",{"_index":3689,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["data_service",{"_index":3627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["database",{"_index":1598,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":860,"title":{},"body":{"modules/AppModule.html":{}}}],["databaselogger",{"_index":1555,"title":{"classes/DatabaseLogger.html":{}},"body":{"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":842,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":528,"title":{},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/EntityContainer.html":{},"entities/Log.html":{},"entities/SeedingLogEntry.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["date}${hash",{"_index":3725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debit",{"_index":3634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debug",{"_index":1413,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["debug(message",{"_index":1422,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["declined",{"_index":3616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decorators",{"_index":159,"title":{},"body":{"entities/Account.html":{},"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"controllers/AuthController.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVirtualAccountDto.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"controllers/FlutterwaveController.html":{},"controllers/HealthController.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"entities/Log.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"classes/QueryTransactionStatusDto.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"entities/SeedingLogEntry.html":{},"entities/SendTransfer.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"controllers/VtpassController.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"entities/Withdrawal.html":{}}}],["decorators/jwt",{"_index":1970,"title":{},"body":{"injectables/JwtAuthGaurd.html":{}}}],["default",{"_index":719,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"controllers/HealthController.html":{},"entities/Log.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"injectables/TransactionsService.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{},"miscellaneous/variables.html":{}}}],["defineability",{"_index":74,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["defineability(data",{"_index":75,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["defined",{"_index":16,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/TwillioService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{}}}],["delete",{"_index":111,"title":{},"body":{"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/BankController.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"injectables/MonnifyService.html":{},"controllers/PaystackController.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"controllers/ReferralController.html":{},"interfaces/RequiredRule.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":397,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/MerchantApiController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/TransfersController.html":{},"controllers/VtpassController.html":{}}}],["delete(':settingname",{"_index":2527,"title":{},"body":{"controllers/SettingsController.html":{}}}],["delete(id",{"_index":3247,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteaccount",{"_index":189,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{}}}],["deleteaccount(id",{"_index":269,"title":{},"body":{"injectables/AccountService.html":{}}}],["deletecode",{"_index":1690,"title":{},"body":{"injectables/EmailService.html":{}}}],["deletecode(email",{"_index":1697,"title":{},"body":{"injectables/EmailService.html":{}}}],["deleted",{"_index":317,"title":{},"body":{"injectables/AccountService.html":{}}}],["deleteone",{"_index":2520,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteone(@param('settingname",{"_index":2545,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deleteone(settingname",{"_index":2526,"title":{},"body":{"controllers/SettingsController.html":{}}}],["deletereceivetransferpermission",{"_index":1310,"title":{"classes/DeleteReceiveTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["deletereservedaccount",{"_index":2103,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["deletereservedaccount(orderref",{"_index":1873,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["deletereservedaccount(reference",{"_index":2118,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["deletesendtransferpermission",{"_index":1306,"title":{"classes/DeleteSendTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["deletesetting",{"_index":2556,"title":{},"body":{"injectables/SettingsService.html":{}}}],["deletesetting(name",{"_index":2565,"title":{},"body":{"injectables/SettingsService.html":{}}}],["deletetransferrequestpermission",{"_index":1314,"title":{"classes/DeleteTransferRequestPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["deleteuserpermission",{"_index":1301,"title":{"classes/DeleteUserPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["deletewithdrawalpermission",{"_index":1318,"title":{"classes/DeleteWithdrawalPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["dependencies",{"_index":137,"title":{"dependencies.html":{}},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deposit",{"_index":1599,"title":{"entities/Deposit.html":{}},"body":{"modules/DatabaseModule.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"injectables/TransactionsService.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{}}}],["deposit(@body",{"_index":3485,"title":{},"body":{"controllers/WalletController.html":{}}}],["deposit.amount",{"_index":2824,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["deposit.balance",{"_index":2825,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["deposit.dto",{"_index":1037,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"classes/UssdDepositData.html":{}}}],["deposit.dto.ts",{"_index":1043,"title":{},"body":{"classes/AuthorizeDepositDto.html":{},"classes/InitiateDepositDto.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{}}}],["deposit.dto.ts:10",{"_index":1940,"title":{},"body":{"classes/InitiateDepositDto.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{}}}],["deposit.dto.ts:11",{"_index":1046,"title":{},"body":{"classes/AuthorizeDepositDto.html":{}}}],["deposit.dto.ts:14",{"_index":1939,"title":{},"body":{"classes/InitiateDepositDto.html":{},"classes/UssdDepositDto.html":{}}}],["deposit.dto.ts:18",{"_index":1941,"title":{},"body":{"classes/InitiateDepositDto.html":{},"classes/UssdDepositDto.html":{}}}],["deposit.dto.ts:22",{"_index":1943,"title":{},"body":{"classes/InitiateDepositDto.html":{},"classes/UssdDepositDto.html":{}}}],["deposit.dto.ts:26",{"_index":1944,"title":{},"body":{"classes/InitiateDepositDto.html":{}}}],["deposit.dto.ts:31",{"_index":1942,"title":{},"body":{"classes/InitiateDepositDto.html":{}}}],["deposit.dto.ts:6",{"_index":1938,"title":{},"body":{"classes/InitiateDepositDto.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{}}}],["deposit.dto.ts:7",{"_index":1045,"title":{},"body":{"classes/AuthorizeDepositDto.html":{}}}],["deposit.remarks",{"_index":2829,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["deposit.type",{"_index":2828,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["deposit.user",{"_index":2827,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["depositrepository",{"_index":1642,"title":{"classes/DepositRepository.html":{}},"body":{"classes/DepositRepository.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{}}}],["deposits",{"_index":2775,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["depositsquery",{"_index":2763,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["deprecated",{"_index":3619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":2347,"title":{},"body":{"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{}}}],["destinationaccountnumber",{"_index":1947,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["destinationbankcode",{"_index":1948,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["details",{"_index":2798,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["detectsubjecttype",{"_index":131,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["dev",{"_index":1613,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dev_email_password",{"_index":2232,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["developer.degoke@gmail.com",{"_index":1719,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NodemailerService.html":{}}}],["digits",{"_index":2505,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["digits'})@min(1000",{"_index":2499,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["disburse",{"_index":2099,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["disk",{"_index":1919,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":1901,"title":{},"body":{"controllers/HealthController.html":{}}}],["dist/migrations/**/*{.ts,.js",{"_index":1615,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["docker",{"_index":3664,"title":{},"body":{"index.html":{}}}],["done",{"_index":787,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["dormant",{"_index":3618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["draft",{"_index":769,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"miscellaneous/enumerations.html":{}}}],["dstv",{"_index":411,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["dto/add",{"_index":205,"title":{},"body":{"controllers/AccountController.html":{}}}],["dto/authorize",{"_index":1754,"title":{},"body":{"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{}}}],["dto/bouquet",{"_index":3365,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["dto/buy",{"_index":408,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["dto/confirm",{"_index":2597,"title":{},"body":{"controllers/SmsController.html":{}}}],["dto/create",{"_index":209,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/MonnifyController.html":{},"injectables/MonnifyService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/TransfersController.html":{},"injectables/TransfersService.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["dto/finalize",{"_index":2279,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["dto/initialize",{"_index":2278,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["dto/initiate",{"_index":1036,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"classes/InitiateWithdrawalData.html":{},"injectables/MonnifyService.html":{},"classes/UssdDepositData.html":{}}}],["dto/query",{"_index":3361,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["dto/set",{"_index":948,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/transaction",{"_index":2685,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["dto/transaction.dto",{"_index":3482,"title":{},"body":{"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["dto/update",{"_index":212,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/EmailController.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/TransfersController.html":{},"injectables/TransfersService.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["dto/ussd",{"_index":1039,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"injectables/FlutterwaveService.html":{},"classes/UssdDepositData.html":{}}}],["dto/validate",{"_index":1796,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["dto/verify",{"_index":1055,"title":{},"body":{"controllers/BankController.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["dto/withdrawal.dto",{"_index":2684,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["ecb",{"_index":1879,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["edit",{"_index":110,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/enumerations.html":{}}}],["editreceivetransferpermission",{"_index":1309,"title":{"classes/EditReceiveTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["editsendtransferpermission",{"_index":1305,"title":{"classes/EditSendTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["editsetting(updatesettingdto",{"_index":705,"title":{},"body":{"injectables/AdminService.html":{}}}],["edittransferrequestpermission",{"_index":1313,"title":{"classes/EditTransferRequestPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["edituserpermission",{"_index":1300,"title":{"classes/EditUserPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"controllers/UserController.html":{}}}],["edituserpermission())@post('verifyemail",{"_index":3073,"title":{},"body":{"controllers/UserController.html":{}}}],["editwithdrawalpermission",{"_index":1317,"title":{"classes/EditWithdrawalPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["education_service",{"_index":3632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electricity",{"_index":3600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electricity.dto",{"_index":413,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["electricity.dto.ts",{"_index":1177,"title":{},"body":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{}}}],["electricity.dto.ts:11",{"_index":1182,"title":{},"body":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{}}}],["electricity.dto.ts:12",{"_index":1186,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["electricity.dto.ts:16",{"_index":1178,"title":{},"body":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{}}}],["electricity.dto.ts:17",{"_index":1187,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["electricity.dto.ts:20",{"_index":1180,"title":{},"body":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{}}}],["electricity.dto.ts:22",{"_index":1188,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["electricity.dto.ts:24",{"_index":1179,"title":{},"body":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{}}}],["electricity.dto.ts:27",{"_index":1189,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["electricity.dto.ts:28",{"_index":1183,"title":{},"body":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{}}}],["electricity.dto.ts:32",{"_index":1190,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["electricity.dto.ts:36",{"_index":1185,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["electricity.dto.ts:40",{"_index":1191,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["electricity.dto.ts:7",{"_index":1181,"title":{},"body":{"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{}}}],["electricity_bill_activity",{"_index":541,"title":{},"body":{"classes/Activity.html":{}}}],["electricity_service",{"_index":3630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electricityactivities",{"_index":3225,"title":{},"body":{"injectables/UserService.html":{}}}],["electricitybill.dto",{"_index":2983,"title":{},"body":{"classes/UpdateElectricitybillDto.html":{}}}],["electricitybill.dto.ts",{"_index":1256,"title":{},"body":{"classes/CreateElectricitybillDto.html":{},"classes/UpdateElectricitybillDto.html":{}}}],["electricitybillactivities",{"_index":1455,"title":{},"body":{"entities/Customer.html":{},"entities/Wallet.html":{}}}],["electricitybillactivity",{"_index":494,"title":{"entities/ElectricityBillActivity.html":{}},"body":{"injectables/ActivitiesService.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Wallet.html":{}}}],["electricitybillactivityrepository",{"_index":453,"title":{"classes/ElectricityBillActivityRepository.html":{}},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/ElectricityBillActivityRepository.html":{}}}],["email",{"_index":506,"title":{"entities/Email.html":{}},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AdminRepository.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomerRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/InitiateDepositDto.html":{},"injectables/LocalStrategy.html":{},"injectables/SeedingMiddleware.html":{},"classes/TransactionDto.html":{},"injectables/TransactionsService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{}}}],["email.controller",{"_index":1686,"title":{},"body":{"modules/EmailModule.html":{}}}],["email.dto",{"_index":1674,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/UpdateEmailDto.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["email.dto.ts",{"_index":1259,"title":{},"body":{"classes/CreateEmailDto.html":{},"classes/UpdateEmailDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmileEmailDto.html":{}}}],["email.dto.ts:10",{"_index":1262,"title":{},"body":{"classes/CreateEmailDto.html":{},"classes/VerifyEmailDTO.html":{}}}],["email.dto.ts:11",{"_index":3291,"title":{},"body":{"classes/VerifySmileEmailDto.html":{}}}],["email.dto.ts:14",{"_index":1264,"title":{},"body":{"classes/CreateEmailDto.html":{}}}],["email.dto.ts:18",{"_index":1265,"title":{},"body":{"classes/CreateEmailDto.html":{}}}],["email.dto.ts:22",{"_index":1263,"title":{},"body":{"classes/CreateEmailDto.html":{}}}],["email.dto.ts:6",{"_index":1266,"title":{},"body":{"classes/CreateEmailDto.html":{},"classes/VerifyEmailDTO.html":{}}}],["email.dto.ts:7",{"_index":3290,"title":{},"body":{"classes/VerifySmileEmailDto.html":{}}}],["email.service",{"_index":1673,"title":{},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{}}}],["email/email.module",{"_index":884,"title":{},"body":{"modules/AppModule.html":{}}}],["emailalreadyexists",{"_index":3174,"title":{},"body":{"injectables/UserService.html":{}}}],["emailcode",{"_index":1665,"title":{},"body":{"entities/Email.html":{},"injectables/EmailService.html":{}}}],["emailcontroller",{"_index":1669,"title":{"controllers/EmailController.html":{}},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{}}}],["emailmodule",{"_index":843,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["emailrepository",{"_index":1696,"title":{},"body":{"injectables/EmailService.html":{}}}],["emailservice",{"_index":1672,"title":{"injectables/EmailService.html":{}},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["emit",{"_index":741,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{}}}],["emit(@body",{"_index":783,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["emit(body",{"_index":747,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["emit(email",{"_index":816,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["encrypt(text",{"_index":1875,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["encrypted",{"_index":1887,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["encryptkey",{"_index":1766,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["entities",{"_index":149,"title":{},"body":{"entities/Account.html":{},"entities/Admin.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"modules/DatabaseModule.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"entities/Log.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"entities/SeedingLogEntry.html":{},"entities/SendTransfer.html":{},"entities/Setting.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/account.entity",{"_index":245,"title":{},"body":{"classes/AccountRepository.html":{}}}],["entities/activity.entity",{"_index":650,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["entities/admin.entity",{"_index":664,"title":{},"body":{"classes/AdminRepository.html":{}}}],["entities/airtime",{"_index":488,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/AirtimeActivityRepository.html":{}}}],["entities/announcement.entity",{"_index":808,"title":{},"body":{"classes/AnnouncementReository.html":{}}}],["entities/customer",{"_index":1543,"title":{},"body":{"classes/CustomerKycRepository.html":{},"injectables/UserService.html":{}}}],["entities/customer.entity",{"_index":1553,"title":{},"body":{"classes/CustomerRepository.html":{},"injectables/UserService.html":{}}}],["entities/deposit.entity",{"_index":1647,"title":{},"body":{"classes/DepositRepository.html":{}}}],["entities/electricity",{"_index":495,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/ElectricityBillActivityRepository.html":{}}}],["entities/email.entity",{"_index":1687,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{}}}],["entities/log.entity",{"_index":2024,"title":{},"body":{"modules/LogModule.html":{},"injectables/LogService.html":{}}}],["entities/mobiledata",{"_index":491,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/MobileDataActivityRepository.html":{}}}],["entities/receive",{"_index":2382,"title":{},"body":{"classes/ReceiveTransferRepository.html":{}}}],["entities/referral.entity",{"_index":2415,"title":{},"body":{"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{}}}],["entities/seeding.entity",{"_index":2456,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["entities/send",{"_index":2492,"title":{},"body":{"classes/SendTransferRepository.html":{}}}],["entities/setting.entity",{"_index":2552,"title":{},"body":{"modules/SettingsModule.html":{},"injectables/SettingsService.html":{}}}],["entities/transaction.entity",{"_index":2734,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["entities/transfer",{"_index":2867,"title":{},"body":{"classes/TransferRequestRepository.html":{}}}],["entities/transfer.entity",{"_index":2897,"title":{},"body":{"injectables/TransfersService.html":{}}}],["entities/tv",{"_index":493,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/TvSubscriptionActivityRepository.html":{}}}],["entities/wallet.entity",{"_index":3499,"title":{},"body":{"classes/WalletRepository.html":{},"injectables/WalletService.html":{}}}],["entities/withdrawal.entity",{"_index":1648,"title":{},"body":{"classes/DepositRepository.html":{},"injectables/TransactionsService.html":{},"classes/WithdrawalRepository.html":{}}}],["entity",{"_index":147,"title":{"entities/Account.html":{},"entities/Admin.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"entities/Log.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"entities/SeedingLogEntry.html":{},"entities/SendTransfer.html":{},"entities/Setting.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{}},"body":{"entities/Account.html":{},"entities/Admin.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"entities/Log.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"entities/SeedingLogEntry.html":{},"entities/SendTransfer.html":{},"entities/Setting.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{}}}],["entitycontainer",{"_index":175,"title":{"classes/EntityContainer.html":{}},"body":{"entities/Account.html":{},"classes/Activity-1.html":{},"entities/Announcement.html":{},"entities/CustomerKyc.html":{},"classes/EntityContainer.html":{},"entities/Merchant.html":{},"entities/PaymentMerchant.html":{},"entities/Referral.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{},"entities/Wallet.html":{}}}],["entitycontainer:12",{"_index":569,"title":{},"body":{"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["entitycontainer:15",{"_index":573,"title":{},"body":{"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["entitycontainer:9",{"_index":571,"title":{},"body":{"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["entitymanager",{"_index":2448,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["entityrepository",{"_index":244,"title":{},"body":{"classes/AccountRepository.html":{},"classes/AdminRepository.html":{},"classes/AirtimeActivityRepository.html":{},"classes/AnnouncementReository.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DepositRepository.html":{},"classes/ElectricityBillActivityRepository.html":{},"classes/MobileDataActivityRepository.html":{},"classes/ReceiveTransferRepository.html":{},"classes/ReferralRepository.html":{},"classes/SendTransferRepository.html":{},"classes/TransferRequestRepository.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/WalletRepository.html":{},"classes/WithdrawalRepository.html":{}}}],["entityrepository(account",{"_index":246,"title":{},"body":{"classes/AccountRepository.html":{}}}],["entityrepository(admin",{"_index":665,"title":{},"body":{"classes/AdminRepository.html":{}}}],["entityrepository(airtimeactivity",{"_index":723,"title":{},"body":{"classes/AirtimeActivityRepository.html":{}}}],["entityrepository(announcement",{"_index":809,"title":{},"body":{"classes/AnnouncementReository.html":{}}}],["entityrepository(customer",{"_index":1554,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["entityrepository(customerkyc",{"_index":1544,"title":{},"body":{"classes/CustomerKycRepository.html":{}}}],["entityrepository(deposit",{"_index":1649,"title":{},"body":{"classes/DepositRepository.html":{}}}],["entityrepository(electricitybillactivity",{"_index":1663,"title":{},"body":{"classes/ElectricityBillActivityRepository.html":{}}}],["entityrepository(mobiledataactivity",{"_index":2082,"title":{},"body":{"classes/MobileDataActivityRepository.html":{}}}],["entityrepository(receivetransfer",{"_index":2383,"title":{},"body":{"classes/ReceiveTransferRepository.html":{}}}],["entityrepository(referral",{"_index":2420,"title":{},"body":{"classes/ReferralRepository.html":{}}}],["entityrepository(sendtransfer",{"_index":2493,"title":{},"body":{"classes/SendTransferRepository.html":{}}}],["entityrepository(transferrequest",{"_index":2868,"title":{},"body":{"classes/TransferRequestRepository.html":{}}}],["entityrepository(tvsubscriptionactivity",{"_index":2921,"title":{},"body":{"classes/TvSubscriptionActivityRepository.html":{}}}],["entityrepository(wallet",{"_index":3500,"title":{},"body":{"classes/WalletRepository.html":{}}}],["entityrepository(withdrawal",{"_index":3540,"title":{},"body":{"classes/WithdrawalRepository.html":{}}}],["entity{.ts,.js",{"_index":3721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":3580,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":3661,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1441,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["err",{"_index":2832,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":61,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}}}],["error(message",{"_index":1426,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["error.response.data.message",{"_index":1830,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/PaystackService.html":{}}}],["error.response.data.message.error",{"_index":2333,"title":{},"body":{"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["error.response.data.responsecode",{"_index":2165,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["error.response.data.responsemessage",{"_index":2164,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["error.response.status",{"_index":1831,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["error.response.statuscode",{"_index":2197,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["errors",{"_index":2833,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["eventemitter",{"_index":799,"title":{},"body":{"modules/AnnouncementModule.html":{},"injectables/AnnouncementService.html":{}}}],["events",{"_index":800,"title":{},"body":{"modules/AnnouncementModule.html":{},"injectables/AnnouncementService.html":{},"injectables/TransactionsService.html":{}}}],["exceed",{"_index":1921,"title":{},"body":{"controllers/HealthController.html":{}}}],["exclude",{"_index":1505,"title":{},"body":{"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/User.html":{}}}],["exclude()@column",{"_index":3039,"title":{},"body":{"classes/User.html":{}}}],["exclude()@column({nullable",{"_index":1484,"title":{},"body":{"entities/Customer.html":{},"entities/CustomerKyc.html":{}}}],["exec('npm",{"_index":3749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":24,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGaurd.html":{},"miscellaneous/variables.html":{}}}],["existingcode",{"_index":1711,"title":{},"body":{"injectables/EmailService.html":{}}}],["existingsetting",{"_index":2576,"title":{},"body":{"injectables/SettingsService.html":{}}}],["exists",{"_index":2579,"title":{},"body":{"injectables/SettingsService.html":{}}}],["expiresin",{"_index":981,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiry_month",{"_index":1024,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/InitiateDepositDto.html":{}}}],["expiry_year",{"_index":1025,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/InitiateDepositDto.html":{}}}],["export",{"_index":40,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{}}}],["exports",{"_index":146,"title":{},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/BankModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/LogModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{}}}],["express",{"_index":760,"title":{},"body":{"controllers/AnnouncementController.html":{},"dependencies.html":{}}}],["expression",{"_index":537,"title":{},"body":{"classes/Activity.html":{}}}],["extends",{"_index":182,"title":{},"body":{"entities/Account.html":{},"classes/AccountRepository.html":{},"classes/Activity-1.html":{},"entities/Admin.html":{},"classes/AdminRepository.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"classes/AnnouncementReository.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"classes/InitiateWithdrawalData.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"classes/ReferralRepository.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"classes/UssdDepositData.html":{},"entities/Wallet.html":{},"classes/WalletRepository.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":1983,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1990,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":81,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["failed",{"_index":2751,"title":{},"body":{"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":923,"title":{},"body":{"modules/AppModule.html":{},"entities/CustomerKyc.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/variables.html":{}}}],["finalizedeposit",{"_index":2247,"title":{},"body":{"controllers/PaystackController.html":{}}}],["finalizedeposit(@body",{"_index":2285,"title":{},"body":{"controllers/PaystackController.html":{}}}],["finalizedeposit(finalizedepositdto",{"_index":2256,"title":{},"body":{"controllers/PaystackController.html":{}}}],["finalizedepositdto",{"_index":2259,"title":{},"body":{"controllers/PaystackController.html":{}}}],["finalizewithdrawal",{"_index":2301,"title":{},"body":{"injectables/PaystackService.html":{}}}],["finalizewithdrawal(finalizewithdrawaldto",{"_index":2309,"title":{},"body":{"injectables/PaystackService.html":{}}}],["finalizewithdrawaldto",{"_index":1741,"title":{"classes/FinalizeWithdrawalDto.html":{}},"body":{"classes/FinalizeWithdrawalDto.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["finally",{"_index":2839,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["find",{"_index":3122,"title":{},"body":{"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["findaccoutnbyid",{"_index":251,"title":{},"body":{"injectables/AccountService.html":{}}}],["findaccoutnbyid(id",{"_index":271,"title":{},"body":{"injectables/AccountService.html":{}}}],["findaccoutnbyownerid",{"_index":252,"title":{},"body":{"injectables/AccountService.html":{}}}],["findaccoutnbyownerid(id",{"_index":273,"title":{},"body":{"injectables/AccountService.html":{}}}],["findadminforjwt",{"_index":3123,"title":{},"body":{"injectables/UserService.html":{}}}],["findadminforjwt(id",{"_index":3140,"title":{},"body":{"injectables/UserService.html":{}}}],["findall",{"_index":190,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/TransfersController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["findallaccounts",{"_index":253,"title":{},"body":{"injectables/AccountService.html":{}}}],["findbvnbyuserid",{"_index":3124,"title":{},"body":{"injectables/UserService.html":{}}}],["findbvnbyuserid(id",{"_index":3142,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail",{"_index":654,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CustomerRepository.html":{},"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":657,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CustomerRepository.html":{},"injectables/UserService.html":{}}}],["findbyfirstname(firstname",{"_index":3232,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":655,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CustomerRepository.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["findbyid(id",{"_index":659,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CustomerRepository.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["findbylastname(lastname",{"_index":3233,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyphone(phonenumber",{"_index":3231,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyphonenumber",{"_index":656,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CustomerRepository.html":{}}}],["findbyphonenumber(phonenumber",{"_index":661,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CustomerRepository.html":{}}}],["findbyreference",{"_index":1644,"title":{},"body":{"classes/DepositRepository.html":{},"classes/WithdrawalRepository.html":{}}}],["findbyreference(reference",{"_index":1645,"title":{},"body":{"classes/DepositRepository.html":{},"classes/WithdrawalRepository.html":{}}}],["findbyreferralcode",{"_index":1547,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["findbyreferralcode(referralcode",{"_index":1551,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["findbyuseremail",{"_index":3496,"title":{},"body":{"classes/WalletRepository.html":{}}}],["findbyuseremail(email",{"_index":3497,"title":{},"body":{"classes/WalletRepository.html":{}}}],["findcustomerforjwt",{"_index":3125,"title":{},"body":{"injectables/UserService.html":{}}}],["findcustomerforjwt(id",{"_index":3146,"title":{},"body":{"injectables/UserService.html":{}}}],["findkycbyuserid",{"_index":3126,"title":{},"body":{"injectables/UserService.html":{}}}],["findkycbyuserid(id",{"_index":3148,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":366,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["findone(@param('id",{"_index":436,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/MerchantApiController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/TransfersController.html":{},"controllers/VtpassController.html":{}}}],["findone(id",{"_index":393,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["findonetransaction",{"_index":2717,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["findonetransaction(id",{"_index":2723,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["findunapprovedkyc",{"_index":3127,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":1379,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/SeedingMiddleware.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["firstname}${hash",{"_index":3235,"title":{},"body":{"injectables/UserService.html":{}}}],["flutterwave",{"_index":298,"title":{"classes/Flutterwave.html":{}},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"injectables/TransactionsService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["flutterwave(this.publickey",{"_index":1809,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["flutterwave.controller",{"_index":1761,"title":{},"body":{"modules/FlutterwaveModule.html":{}}}],["flutterwave.service",{"_index":1753,"title":{},"body":{"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{}}}],["flutterwave/flutterwave.module",{"_index":869,"title":{},"body":{"modules/AppModule.html":{}}}],["flutterwavecontroller",{"_index":1749,"title":{"controllers/FlutterwaveController.html":{}},"body":{"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{}}}],["flutterwavedata",{"_index":2807,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["flutterwavemodule",{"_index":227,"title":{"modules/FlutterwaveModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/BankModule.html":{},"modules/FlutterwaveModule.html":{},"modules/TransactionsModule.html":{},"modules.html":{},"overview.html":{}}}],["flutterwaveservice",{"_index":258,"title":{"injectables/FlutterwaveService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/BankService.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"injectables/TransactionsService.html":{},"overview.html":{}}}],["flw",{"_index":1767,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["flw_ref",{"_index":3269,"title":{},"body":{"classes/ValidateDepositDto.html":{}}}],["forbiddenerror",{"_index":30,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["forbiddenerror.from(ability).throwunlesscan(rule.action",{"_index":58,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["forbiddenexception",{"_index":33,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["forbiddenexception(error.message",{"_index":65,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["forge",{"_index":1793,"title":{},"body":{"injectables/FlutterwaveService.html":{},"dependencies.html":{}}}],["forge.cipher.createcipher",{"_index":1877,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["forge.util.createbuffer(this.encryptkey",{"_index":1880,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["forge.util.encode64(encrypted.getbytes",{"_index":1889,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["forwardref",{"_index":967,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["found",{"_index":2781,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["fromevent",{"_index":822,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["fromevent(this.eventemitter",{"_index":831,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["fromuser",{"_index":2851,"title":{},"body":{"entities/TransferRequest.html":{}}}],["fromuserid",{"_index":2852,"title":{},"body":{"entities/TransferRequest.html":{}}}],["full_match",{"_index":330,"title":{},"body":{"injectables/AccountService.html":{}}}],["function",{"_index":2453,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["functions",{"_index":3639,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fwwithdrawaldto",{"_index":1732,"title":{"classes/FWWithdrawalDto.html":{}},"body":{"classes/FWWithdrawalDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["generateverificationcode",{"_index":1706,"title":{},"body":{"injectables/EmailService.html":{},"miscellaneous/variables.html":{}}}],["generators",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["generators.ts",{"_index":3646,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["get(':email",{"_index":3086,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':email')@useguards(jwtauthgaurd",{"_index":3066,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":394,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/MerchantApiController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/VtpassController.html":{}}}],["get(':settingname",{"_index":2532,"title":{},"body":{"controllers/SettingsController.html":{}}}],["get('all",{"_index":1062,"title":{},"body":{"controllers/BankController.html":{}}}],["get('banklist",{"_index":2262,"title":{},"body":{"controllers/PaystackController.html":{}}}],["get('byid/:id",{"_index":3088,"title":{},"body":{"controllers/UserController.html":{}}}],["get('byid/:id')@public",{"_index":3069,"title":{},"body":{"controllers/UserController.html":{}}}],["get('current",{"_index":2701,"title":{},"body":{"controllers/TransactionsController.html":{},"controllers/UserController.html":{}}}],["get('get_all_activities",{"_index":636,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('get_variation_codes/:serviceid",{"_index":3339,"title":{},"body":{"controllers/VtpassController.html":{}}}],["get('hello",{"_index":2879,"title":{},"body":{"controllers/TransfersController.html":{}}}],["get('https://api.paystack.co/bank",{"_index":2332,"title":{},"body":{"injectables/PaystackService.html":{}}}],["get('kyc/pending",{"_index":3091,"title":{},"body":{"controllers/UserController.html":{}}}],["get('monnify_token",{"_index":2149,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["get('summary",{"_index":622,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('user/:id",{"_index":2673,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["get('users",{"_index":624,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('users/activities/:id",{"_index":633,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('verify_account_number/:accountnumber/:bankid",{"_index":2271,"title":{},"body":{"controllers/PaystackController.html":{}}}],["get('vtpass_service_ids/:identifier",{"_index":3336,"title":{},"body":{"controllers/VtpassController.html":{}}}],["get('vtpass_services_identifiers",{"_index":3341,"title":{},"body":{"controllers/VtpassController.html":{}}}],["get()@healthcheck",{"_index":1895,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(`${this.baseurl}api/v1/banks",{"_index":2195,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["get(`${this.baseurl}api/v2/disbursements/single/transactions",{"_index":2211,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["get(key",{"_index":3730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getall",{"_index":742,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/BankController.html":{},"controllers/SettingsController.html":{},"controllers/WalletController.html":{}}}],["getall(@query",{"_index":772,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["getall(query",{"_index":751,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["getall(type",{"_index":818,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["getallactivities",{"_index":593,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getallavailablebanks",{"_index":353,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateReservedAccountDto-1.html":{}}}],["getallavailaiblebanks",{"_index":1397,"title":{},"body":{"classes/CreateVirtualAccountDto.html":{}}}],["getallbankcodes",{"_index":2104,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["getallbankcodes(country",{"_index":1852,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["getallbanks",{"_index":1072,"title":{},"body":{"injectables/BankService.html":{},"injectables/MonnifyService.html":{}}}],["getallbillcategories(category",{"_index":1820,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["getallsettings",{"_index":2557,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getalltransactions",{"_index":2656,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["getalltransactions(@query",{"_index":2698,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["getalltransactions(query",{"_index":2664,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["getalltransactions(type",{"_index":2725,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getallusers",{"_index":625,"title":{},"body":{"controllers/AdminController.html":{}}}],["getbanklist",{"_index":2248,"title":{},"body":{"controllers/PaystackController.html":{}}}],["getbillpaymentstatus(verbose",{"_index":1848,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["getbyemail(email",{"_index":3234,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyname",{"_index":2521,"title":{},"body":{"controllers/SettingsController.html":{}}}],["getbyname(@param('settingname",{"_index":2540,"title":{},"body":{"controllers/SettingsController.html":{}}}],["getbyname(settingname",{"_index":2531,"title":{},"body":{"controllers/SettingsController.html":{}}}],["getcurrentservice",{"_index":1084,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["getcurrentuser",{"_index":3047,"title":{},"body":{"controllers/UserController.html":{}}}],["getcurrentuser(@request",{"_index":3082,"title":{},"body":{"controllers/UserController.html":{}}}],["getcurrentuser(req",{"_index":3059,"title":{},"body":{"controllers/UserController.html":{}}}],["getcurrentuserstransactions",{"_index":2657,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["getcurrentuserstransactions(req",{"_index":2666,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["getloglevels",{"_index":1438,"title":{},"body":{"injectables/CustomLogger.html":{},"miscellaneous/functions.html":{}}}],["getloglevels(environment",{"_index":1445,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["getloglevels(isproduction",{"_index":3649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getnairawalletbalance",{"_index":1073,"title":{},"body":{"injectables/BankService.html":{},"injectables/FlutterwaveService.html":{}}}],["getpendingkyc",{"_index":3048,"title":{},"body":{"controllers/UserController.html":{}}}],["getquery",{"_index":2767,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getrawone",{"_index":2758,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/WalletService.html":{}}}],["getrequestid",{"_index":486,"title":{},"body":{"injectables/ActivitiesService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"miscellaneous/variables.html":{}}}],["getreservedaccounttransactions",{"_index":2105,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["getreservedaccounttransactions(reference",{"_index":2121,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["getserviceids",{"_index":3306,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["getserviceids(@param",{"_index":3378,"title":{},"body":{"controllers/VtpassController.html":{}}}],["getserviceids(identifier",{"_index":3429,"title":{},"body":{"injectables/VtpassService.html":{}}}],["getserviceids(params",{"_index":3335,"title":{},"body":{"controllers/VtpassController.html":{}}}],["getsetting",{"_index":2558,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getsetting(id",{"_index":703,"title":{},"body":{"injectables/AdminService.html":{}}}],["getsetting(name",{"_index":2568,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getsummary",{"_index":594,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getting",{"_index":3653,"title":{"index.html":{}},"body":{}}],["gettotaldepositsbalance",{"_index":2718,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettotalnairadepositsbalance",{"_index":2782,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettotalnumberofusers",{"_index":3128,"title":{},"body":{"injectables/UserService.html":{}}}],["gettotalusersnaira",{"_index":3502,"title":{},"body":{"injectables/WalletService.html":{}}}],["gettotalwithdrawalsbalance",{"_index":2719,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["gettransactionbyid",{"_index":2658,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gettransactionbyid(@param('id",{"_index":2704,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gettransactionbyid(id",{"_index":2669,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["gettransactionreference",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/FlutterwaveService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/variables.html":{}}}],["gettransactionstatus",{"_index":2106,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{}}}],["gettransactionstatus(reference",{"_index":2123,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{}}}],["gettransferstatus",{"_index":1771,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["gettransferstatus(id",{"_index":1776,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["getuser",{"_index":3049,"title":{},"body":{"controllers/UserController.html":{}}}],["getuseractivities",{"_index":595,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getuseractivities(@param('id",{"_index":634,"title":{},"body":{"controllers/AdminController.html":{}}}],["getuseractivities(id",{"_index":604,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getuserbyemail",{"_index":3050,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyemail(@param('email",{"_index":3087,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyemail(email",{"_index":3065,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid",{"_index":3051,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(@param('id",{"_index":3089,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(id",{"_index":3068,"title":{},"body":{"controllers/UserController.html":{}}}],["getusertransactions",{"_index":2720,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getusertransactions(id",{"_index":2730,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["getusertransactionsbyid",{"_index":2659,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["getusertransactionsbyid(id",{"_index":2672,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["getvariationcode",{"_index":3307,"title":{},"body":{"controllers/VtpassController.html":{}}}],["getvariationcode(@param",{"_index":3375,"title":{},"body":{"controllers/VtpassController.html":{}}}],["getvariationcode(params",{"_index":3338,"title":{},"body":{"controllers/VtpassController.html":{}}}],["getvariationcodes",{"_index":3413,"title":{},"body":{"injectables/VtpassService.html":{}}}],["getvariationcodes(serviceid",{"_index":3432,"title":{},"body":{"injectables/VtpassService.html":{}}}],["getvtpassservicesidentifiers",{"_index":3308,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["getwalletbalance",{"_index":2107,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["getwalletbalance(accountnumber",{"_index":2125,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["getwalletbyownerid",{"_index":3503,"title":{},"body":{"injectables/WalletService.html":{}}}],["getwalletbyownerid(id",{"_index":3512,"title":{},"body":{"injectables/WalletService.html":{}}}],["gmail",{"_index":2230,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["goke",{"_index":3228,"title":{},"body":{"injectables/UserService.html":{}}}],["gotv.dto",{"_index":412,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{}}}],["gotv.dto.ts",{"_index":1150,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:12",{"_index":1153,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:17",{"_index":1154,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:22",{"_index":1157,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:27",{"_index":1158,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:32",{"_index":1160,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:36",{"_index":1151,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:40",{"_index":1156,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:44",{"_index":1161,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:48",{"_index":1159,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["gotv.dto.ts:7",{"_index":1152,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["graph",{"_index":3676,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":0,"title":{"guards/AbilitiesGuard.html":{}},"body":{"overview.html":{}}}],["guard.decorator",{"_index":612,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/FlutterwaveController.html":{},"injectables/JwtAuthGaurd.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{}}}],["guard.decorator.ts",{"_index":3698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["handleresponse",{"_index":2108,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["handleresponse(result",{"_index":2127,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["handlewebhook",{"_index":2100,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["hash",{"_index":3210,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["hashedpassword",{"_index":3181,"title":{},"body":{"injectables/UserService.html":{}}}],["hashedpin",{"_index":3214,"title":{},"body":{"injectables/UserService.html":{}}}],["headers",{"_index":1811,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["health",{"_index":1890,"title":{"classes/Health.html":{}},"body":{"classes/Health.html":{},"controllers/HealthController.html":{}}}],["health.controller",{"_index":1929,"title":{},"body":{"modules/HealthModule.html":{}}}],["health.dto",{"_index":2988,"title":{},"body":{"classes/UpdateHealthDto.html":{}}}],["health.dto.ts",{"_index":1269,"title":{},"body":{"classes/CreateHealthDto.html":{},"classes/UpdateHealthDto.html":{}}}],["health/health.module",{"_index":874,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":1898,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1897,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1892,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["healthmodule",{"_index":844,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heap",{"_index":1912,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello",{"_index":3520,"title":{},"body":{"injectables/WalletService.html":{}}}],["here",{"_index":1721,"title":{},"body":{"injectables/EmailService.html":{}}}],["hi",{"_index":2169,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["host",{"_index":914,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":1260,"title":{},"body":{"classes/CreateEmailDto.html":{},"injectables/EmailService.html":{}}}],["http",{"_index":943,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FlutterwaveController.html":{}}}],["httperrorbycode",{"_index":2687,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["httpexception",{"_index":282,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"controllers/AnnouncementController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/SettingsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{}}}],["httpexception('email",{"_index":3176,"title":{},"body":{"injectables/UserService.html":{}}}],["httpexception('invalid",{"_index":1015,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/UserService.html":{}}}],["httpexception('no",{"_index":320,"title":{},"body":{"injectables/AccountService.html":{}}}],["httpexception('setting",{"_index":2578,"title":{},"body":{"injectables/SettingsService.html":{}}}],["httpexception('transaction",{"_index":2780,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["httpexception('user",{"_index":3226,"title":{},"body":{"injectables/UserService.html":{}}}],["httpexception(error",{"_index":307,"title":{},"body":{"injectables/AccountService.html":{}}}],["httpexception(error.message",{"_index":2335,"title":{},"body":{"injectables/PaystackService.html":{}}}],["httpexception(error.response.data",{"_index":3449,"title":{},"body":{"injectables/VtpassService.html":{}}}],["httpexception(result.message",{"_index":2746,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["httpexception(result.responsemessage",{"_index":2190,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["httpmodule",{"_index":1762,"title":{},"body":{"modules/FlutterwaveModule.html":{},"modules/MonnifyModule.html":{},"modules/PaystackModule.html":{},"modules/TransactionsModule.html":{},"modules/VtpassModule.html":{}}}],["https://api.flutterwave.com/v3/accounts/resolve",{"_index":1851,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/banks/${country",{"_index":1853,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/bill",{"_index":1824,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/bills",{"_index":1843,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/bills/${reference",{"_index":1849,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/charges?type=card",{"_index":1858,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/charges?type=ussd",{"_index":1867,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/kyc/bvns/${bvn",{"_index":1847,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/transactions/${id}/verify",{"_index":1865,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/transfers",{"_index":1869,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/validate",{"_index":1862,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.flutterwave.com/v3/virtual",{"_index":1871,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["https://api.paystack.co/bank/resolve?account_number=${accountnumber}&bank_code=${bankid",{"_index":2342,"title":{},"body":{"injectables/PaystackService.html":{}}}],["https://api.paystack.co/transaction/initialize",{"_index":2334,"title":{},"body":{"injectables/PaystackService.html":{}}}],["https://api.paystack.co/transaction/verify/${reference",{"_index":2336,"title":{},"body":{"injectables/PaystackService.html":{}}}],["https://api.paystack.co/transfer",{"_index":2338,"title":{},"body":{"injectables/PaystackService.html":{}}}],["https://api.paystack.co/transfer/finalize_transfer",{"_index":2340,"title":{},"body":{"injectables/PaystackService.html":{}}}],["https://api.paystack.co/transferrecipient",{"_index":2337,"title":{},"body":{"injectables/PaystackService.html":{}}}],["https://sandbox.vtpass.com/api/merchant",{"_index":3454,"title":{},"body":{"injectables/VtpassService.html":{}}}],["https://sandbox.vtpass.com/api/pay",{"_index":3448,"title":{},"body":{"injectables/VtpassService.html":{}}}],["https://sandbox.vtpass.com/api/requery",{"_index":3453,"title":{},"body":{"injectables/VtpassService.html":{}}}],["https://sandbox.vtpass.com/api/service",{"_index":3450,"title":{},"body":{"injectables/VtpassService.html":{}}}],["https://vtpass.com/api/services?identifier=${identifier",{"_index":3452,"title":{},"body":{"injectables/VtpassService.html":{}}}],["httpservice",{"_index":1773,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["httpstatus",{"_index":283,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"controllers/AnnouncementController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/EmailService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":322,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AnnouncementController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/MonnifyService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["httpstatus.conflict",{"_index":2580,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UserService.html":{}}}],["httpstatus.internal_server_error",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{}}}],["httpstatus.not_found",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["httpstatus.service_unavailable",{"_index":1090,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["httpstatus.unauthorized",{"_index":1009,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":218,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/Activity-1.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"classes/CustomerRepository.html":{},"entities/Email.html":{},"classes/EntityContainer.html":{},"injectables/FlutterwaveService.html":{},"entities/Log.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"entities/SeedingLogEntry.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"controllers/TransfersController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}}}],["identifier",{"_index":3431,"title":{},"body":{"injectables/VtpassService.html":{}}}],["ignoreexpiration",{"_index":1991,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":42,"title":{},"body":{"guards/AbilitiesGuard.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"injectables/SeedingMiddleware.html":{}}}],["import",{"_index":29,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{}}}],["imports",{"_index":231,"title":{},"body":{"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/HealthModule.html":{},"modules/LogModule.html":{},"modules/MonnifyModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{}}}],["in_progress",{"_index":2180,"title":{},"body":{"injectables/MonnifyService.html":{},"miscellaneous/enumerations.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"entities/SendTransfer.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/TwillioService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inferredtypes",{"_index":113,"title":{},"body":{"injectables/AbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["infersubjects",{"_index":82,"title":{},"body":{"injectables/AbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{}}}],["inherited",{"_index":568,"title":{},"body":{"classes/Activity-1.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{},"classes/UssdDepositData.html":{}}}],["initializedeposit",{"_index":2249,"title":{},"body":{"controllers/PaystackController.html":{}}}],["initializedeposit(@body",{"_index":2283,"title":{},"body":{"controllers/PaystackController.html":{}}}],["initializedeposit(initializewithdrawaldto",{"_index":2264,"title":{},"body":{"controllers/PaystackController.html":{}}}],["initializetransaction",{"_index":2302,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initializetransaction(createtransactiondto",{"_index":2313,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initializewithdrawal",{"_index":2303,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initializewithdrawal(initializewithdrawaldto",{"_index":2315,"title":{},"body":{"injectables/PaystackService.html":{}}}],["initializewithdrawaldto",{"_index":1931,"title":{"classes/InitializeWithdrawalDto.html":{}},"body":{"classes/InitializeWithdrawalDto.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["initialseeding",{"_index":2459,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["initiateaccountcreation",{"_index":254,"title":{},"body":{"injectables/AccountService.html":{}}}],["initiateaccountcreation(accountnumber",{"_index":276,"title":{},"body":{"injectables/AccountService.html":{}}}],["initiatecarddeposit(initiatedepositdto",{"_index":1854,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["initiatedepositdata",{"_index":1855,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["initiatedepositdto",{"_index":1020,"title":{"classes/InitiateDepositDto.html":{}},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"classes/InitiateDepositDto.html":{},"classes/UssdDepositData.html":{}}}],["initiatedepositdto:10",{"_index":1030,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{}}}],["initiatedepositdto:14",{"_index":1029,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{}}}],["initiatedepositdto:18",{"_index":1031,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{}}}],["initiatedepositdto:22",{"_index":1034,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{}}}],["initiatedepositdto:26",{"_index":1035,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{}}}],["initiatedepositdto:31",{"_index":1033,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{}}}],["initiatedepositdto:6",{"_index":1028,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{}}}],["initiatemntransferdto",{"_index":1945,"title":{"classes/InitiateMNTransferDto.html":{}},"body":{"classes/InitiateMNTransferDto.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{}}}],["initiatephonenumberverification",{"_index":2938,"title":{},"body":{"injectables/TwillioService.html":{}}}],["initiatephonenumberverification(phonenumber",{"_index":2943,"title":{},"body":{"injectables/TwillioService.html":{},"injectables/UserService.html":{}}}],["initiatephoneverification(@body",{"_index":3099,"title":{},"body":{"controllers/UserController.html":{}}}],["initiatetransferdto",{"_index":2131,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["initiatetransfers",{"_index":2109,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["initiatetransfers(initiatetransferdto",{"_index":2129,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["initiateussddeposit(ussddepositdto",{"_index":1866,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["initiatewithdrawal(@body",{"_index":2694,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["initiatewithdrawal(dto",{"_index":2738,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["initiatewithdrawal(initiatewithdrawaldto",{"_index":1868,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["initiatewithdrawaldata",{"_index":1798,"title":{"classes/InitiateWithdrawalData.html":{}},"body":{"injectables/FlutterwaveService.html":{},"classes/InitiateWithdrawalData.html":{}}}],["initiatewithdrawaldto",{"_index":1779,"title":{"classes/InitiateWithdrawalDto.html":{}},"body":{"injectables/FlutterwaveService.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["initiatewithdrawaldto:10",{"_index":1959,"title":{},"body":{"classes/InitiateWithdrawalData.html":{}}}],["initiatewithdrawaldto:14",{"_index":1960,"title":{},"body":{"classes/InitiateWithdrawalData.html":{}}}],["initiatewithdrawaldto:18",{"_index":1962,"title":{},"body":{"classes/InitiateWithdrawalData.html":{}}}],["initiatewithdrawaldto:26",{"_index":1961,"title":{},"body":{"classes/InitiateWithdrawalData.html":{}}}],["initiatewithdrawaldto:6",{"_index":1958,"title":{},"body":{"classes/InitiateWithdrawalData.html":{}}}],["initiatewithdrawaldto:7",{"_index":1957,"title":{},"body":{"classes/InitiateWithdrawalData.html":{}}}],["inject",{"_index":976,"title":{},"body":{"modules/AuthModule.html":{},"injectables/BankService.html":{},"modules/DatabaseModule.html":{},"injectables/EmailService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/WalletService.html":{}}}],["inject(cache_manager",{"_index":1082,"title":{},"body":{"injectables/BankService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{}}}],["injectable",{"_index":32,"title":{"injectables/AbilityFactory.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}}}],["injectables",{"_index":72,"title":{},"body":{"injectables/AbilityFactory.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["injectrepository",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/EmailService.html":{},"injectables/LogService.html":{},"injectables/ReferralService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["injectrepository(accountrepository",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectrepository(activity",{"_index":687,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectrepository(adminrepository",{"_index":3165,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(airtimeactivityrepository",{"_index":496,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["injectrepository(announcementreository",{"_index":823,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["injectrepository(customerkycrepository",{"_index":3166,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(customerrepository",{"_index":3164,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(depositrepository",{"_index":2737,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["injectrepository(electricitybillactivityrepository",{"_index":497,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["injectrepository(email",{"_index":1709,"title":{},"body":{"injectables/EmailService.html":{}}}],["injectrepository(log",{"_index":2034,"title":{},"body":{"injectables/LogService.html":{}}}],["injectrepository(mobiledataactivityrepository",{"_index":498,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["injectrepository(receivetransferrepository",{"_index":2899,"title":{},"body":{"injectables/TransfersService.html":{}}}],["injectrepository(referralrepository",{"_index":2432,"title":{},"body":{"injectables/ReferralService.html":{}}}],["injectrepository(sendtransferrepository",{"_index":2900,"title":{},"body":{"injectables/TransfersService.html":{}}}],["injectrepository(setting",{"_index":2572,"title":{},"body":{"injectables/SettingsService.html":{}}}],["injectrepository(transferrequestrepository",{"_index":2901,"title":{},"body":{"injectables/TransfersService.html":{}}}],["injectrepository(tvsubscriptionactivityrepository",{"_index":499,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["injectrepository(walletrepository",{"_index":3516,"title":{},"body":{"injectables/WalletService.html":{}}}],["injectrepository(withdrawalrepository",{"_index":2736,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["install",{"_index":3660,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":62,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["instantiated",{"_index":2843,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["interface",{"_index":833,"title":{"interfaces/ApiSuccessResponse.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{}},"body":{"interfaces/ApiSuccessResponse.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{}}}],["interfaces",{"_index":835,"title":{},"body":{"interfaces/ApiSuccessResponse.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"overview.html":{}}}],["interfaces/bills",{"_index":1790,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["interfaces/deposits.interface",{"_index":1048,"title":{},"body":{"classes/AuthorizeDepositDto.html":{},"injectables/FlutterwaveService.html":{}}}],["interfaces/withdrawal.interface",{"_index":1799,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["internet",{"_index":3691,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["internet_service",{"_index":3628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["interval",{"_index":761,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["invalid",{"_index":774,"title":{},"body":{"controllers/AnnouncementController.html":{},"controllers/TransactionsController.html":{}}}],["is_permanent",{"_index":1328,"title":{},"body":{"classes/CreateReservedAccountDto.html":{},"classes/CreateVirtualAccountDto.html":{},"injectables/TransactionsService.html":{}}}],["is_public_key",{"_index":1969,"title":{},"body":{"injectables/JwtAuthGaurd.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":1339,"title":{},"body":{"classes/CreateSettingDto.html":{},"entities/Setting.html":{}}}],["isboolean",{"_index":1331,"title":{},"body":{"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSettingDto.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["isboolean()@isnotempty",{"_index":1330,"title":{},"body":{"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSettingDto.html":{},"classes/CreateVirtualAccountDto.html":{}}}],["iscreatinglogs",{"_index":2038,"title":{},"body":{"injectables/LogService.html":{}}}],["isemail",{"_index":1332,"title":{},"body":{"classes/CreateReservedAccountDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/InitiateDepositDto.html":{},"classes/TransactionDto.html":{},"classes/VerifySmileEmailDto.html":{}}}],["isemail()@isnotempty",{"_index":1329,"title":{},"body":{"classes/CreateReservedAccountDto.html":{},"classes/CreateTransactionDto.html":{}}}],["isemailverified",{"_index":3241,"title":{},"body":{"injectables/UserService.html":{}}}],["isglobal",{"_index":896,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":582,"title":{},"body":{"classes/AddBankAccountDTO.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/SetPinDTO.html":{},"classes/TransactionDto.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{}}}],["isnotempty()@isnumber",{"_index":1146,"title":{},"body":{"classes/BuyAirtimeDto-2.html":{},"classes/CreateReferralDto.html":{}}}],["isnotempty()@isnumber()@isoptional",{"_index":1123,"title":{},"body":{"classes/BouquetRenewalDto.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyWAECDto.html":{}}}],["isnotempty()@isstring",{"_index":579,"title":{},"body":{"classes/AddBankAccountDTO.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/FinalizeWithdrawalDto.html":{}}}],["isnotempty()@isstring()@isoptional",{"_index":1116,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/QueryTransactionStatusDto.html":{}}}],["isnumber",{"_index":1114,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateReferralDto.html":{},"classes/CreateTransactionDto.html":{},"classes/FWWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/SetPinDTO.html":{},"classes/TransactionDto.html":{}}}],["isnumber()@isnotempty",{"_index":1134,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/CreateAccountDto.html":{},"classes/CreateBillDto.html":{},"classes/FWWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/TransactionDto.html":{}}}],["isnumber()@isnotempty()@max(9999",{"_index":2497,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["isoptional",{"_index":806,"title":{},"body":{"classes/AnnouncementQueryDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateUserDto.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/TransactionQueryDto.html":{}}}],["isoptional()@isnumber",{"_index":1155,"title":{},"body":{"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["isoptional()@isstring",{"_index":804,"title":{},"body":{"classes/AnnouncementQueryDto.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/CreateUserDto.html":{}}}],["isphonenumberverified",{"_index":3238,"title":{},"body":{"injectables/UserService.html":{}}}],["isproduction",{"_index":3650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispublic",{"_index":1973,"title":{},"body":{"injectables/JwtAuthGaurd.html":{},"miscellaneous/variables.html":{}}}],["isseedingcomplete",{"_index":2446,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["isstring",{"_index":583,"title":{},"body":{"classes/AddBankAccountDTO.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/SetPinDTO.html":{},"classes/TransactionQueryDto.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{}}}],["isstring()@isemail()@isnotempty",{"_index":3289,"title":{},"body":{"classes/VerifySmileEmailDto.html":{}}}],["isstring()@isnotempty",{"_index":1026,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/FWWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/SetPinDTO.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{}}}],["isstring()@isnotempty()@isemail",{"_index":1032,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/CreateUserDto.html":{},"classes/InitiateDepositDto.html":{}}}],["isstring()@isnotempty()@isoptional",{"_index":1136,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["isstring()@isnotempty()@matches(/^\\+[1",{"_index":1386,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional",{"_index":2650,"title":{},"body":{"classes/TransactionQueryDto.html":{}}}],["isstring()@length(6",{"_index":3278,"title":{},"body":{"classes/VerifyEmailDTO.html":{}}}],["issue",{"_index":3657,"title":{},"body":{"index.html":{}}}],["item",{"_index":132,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["item.constructor",{"_index":133,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["itemcode",{"_index":1838,"title":{},"body":{"injectables/FlutterwaveService.html":{},"classes/ValidateAirtimeDto.html":{}}}],["items/${itemcode}/validate?code=${billercode}&customer=${customercode",{"_index":1841,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["iv",{"_index":1882,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["joi",{"_index":876,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["joi.number",{"_index":900,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().required",{"_index":905,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":898,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":902,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":1593,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["json.stringify(parameters",{"_index":1591,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["jwt",{"_index":1986,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_expiration",{"_index":910,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwt_secret",{"_index":909,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwtauthgaurd",{"_index":403,"title":{"injectables/JwtAuthGaurd.html":{}},"body":{"controllers/ActivitiesController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGaurd.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":1989,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":971,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":975,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":987,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":964,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["key",{"_index":3731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":3743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys.foreach((key",{"_index":3745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kyc",{"_index":340,"title":{},"body":{"injectables/AccountService.html":{},"entities/Customer.html":{},"injectables/UserService.html":{}}}],["kyc.bvnname",{"_index":348,"title":{},"body":{"injectables/AccountService.html":{}}}],["kyc.entity",{"_index":1514,"title":{},"body":{"entities/Customer.html":{},"classes/CustomerKycRepository.html":{},"injectables/UserService.html":{}}}],["kyc.entity.ts",{"_index":1517,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:11",{"_index":1527,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:14",{"_index":1525,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:17",{"_index":1528,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:20",{"_index":1526,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:23",{"_index":1530,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:26",{"_index":1532,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:30",{"_index":1524,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:33",{"_index":1534,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:36",{"_index":1535,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.entity.ts:39",{"_index":1529,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kyc.repository",{"_index":3117,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["kyc.repository.ts",{"_index":1542,"title":{},"body":{"classes/CustomerKycRepository.html":{}}}],["kyc.user.email",{"_index":351,"title":{},"body":{"injectables/AccountService.html":{}}}],["kyc_status",{"_index":1537,"title":{},"body":{"entities/CustomerKyc.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["kyc_status.pending",{"_index":1539,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kycapproved",{"_index":1522,"title":{},"body":{"entities/CustomerKyc.html":{},"injectables/UserService.html":{}}}],["kyciddocument",{"_index":1523,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["kycstatus",{"_index":1531,"title":{},"body":{"entities/CustomerKyc.html":{},"miscellaneous/typealiases.html":{}}}],["lastname",{"_index":1380,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/SeedingMiddleware.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["lastvaluefrom",{"_index":1787,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["lastvaluefrom(response",{"_index":1832,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["leftjoinandselect('deposit.user",{"_index":2765,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["leftjoinandselect('deposit.wallet",{"_index":2766,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["leftjoinandselect('withdrawal.user",{"_index":2770,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["leftjoinandselect('withdrawal.wallet",{"_index":2771,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["length",{"_index":3279,"title":{},"body":{"classes/VerifyEmailDTO.html":{}}}],["length(6",{"_index":3280,"title":{},"body":{"classes/VerifyEmailDTO.html":{}}}],["lets",{"_index":2834,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["level",{"_index":587,"title":{},"body":{"entities/Admin.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"classes/DatabaseLogger.html":{},"entities/Log.html":{},"injectables/SeedingMiddleware.html":{},"injectables/UserService.html":{}}}],["level_0",{"_index":3604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_1",{"_index":3606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level_2",{"_index":3608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["levels",{"_index":1440,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["levels.ts",{"_index":3643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["listalltransfers",{"_index":2110,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["literal",{"_index":2676,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["local",{"_index":2002,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthgaurd",{"_index":944,"title":{"injectables/LocalAuthGaurd.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGaurd.html":{}}}],["localstrategy",{"_index":965,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["log",{"_index":1414,"title":{"entities/Log.html":{}},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"miscellaneous/functions.html":{}}}],["log(level",{"_index":1567,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["log(message",{"_index":1429,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["log.controller",{"_index":2023,"title":{},"body":{"modules/LogModule.html":{}}}],["log.dto",{"_index":2016,"title":{},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"classes/UpdateLogDto.html":{}}}],["log.dto.ts",{"_index":1272,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/UpdateLogDto.html":{}}}],["log.service",{"_index":2015,"title":{},"body":{"controllers/LogController.html":{},"modules/LogModule.html":{}}}],["log/log.module",{"_index":873,"title":{},"body":{"modules/AppModule.html":{}}}],["logcontroller",{"_index":2013,"title":{"controllers/LogController.html":{}},"body":{"controllers/LogController.html":{},"modules/LogModule.html":{}}}],["logger",{"_index":1558,"title":{},"body":{"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"modules/LogModule.html":{},"miscellaneous/variables.html":{}}}],["logger.service",{"_index":1436,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts",{"_index":1410,"title":{},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{}}}],["logger.ts:15",{"_index":1573,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger.ts:27",{"_index":1430,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:30",{"_index":1575,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger.ts:36",{"_index":1428,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:45",{"_index":1434,"title":{},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{}}}],["logger.ts:48",{"_index":1578,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger.ts:5",{"_index":1566,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger.ts:51",{"_index":1568,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger.ts:54",{"_index":1423,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:63",{"_index":1432,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.ts:69",{"_index":1580,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger.ts:7",{"_index":1571,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger.ts:9",{"_index":1421,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logging",{"_index":3722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1012,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginadmin",{"_index":929,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginadmin(@request",{"_index":956,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginadmin(data",{"_index":991,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginadmin(req",{"_index":932,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuser",{"_index":930,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginuser(@request",{"_index":953,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuser(data",{"_index":993,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuser(req",{"_index":935,"title":{},"body":{"controllers/AuthController.html":{}}}],["loglevel",{"_index":3651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loglevels",{"_index":1444,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logmigration",{"_index":1559,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logmigration(message",{"_index":1569,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logmodule",{"_index":845,"title":{"modules/LogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{},"modules.html":{},"overview.html":{}}}],["logquery",{"_index":1560,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logquery(query",{"_index":1570,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logqueryerror",{"_index":1561,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logqueryerror(error",{"_index":1572,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logqueryslow",{"_index":1562,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logqueryslow(time",{"_index":1574,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logschemabuild",{"_index":1563,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logschemabuild(message",{"_index":1577,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logservice",{"_index":1420,"title":{"injectables/LogService.html":{}},"body":{"injectables/CustomLogger.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"overview.html":{}}}],["logsrepository",{"_index":2031,"title":{},"body":{"injectables/LogService.html":{}}}],["logsservice",{"_index":1412,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["made",{"_index":2837,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["mail",{"_index":1715,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NodemailerService.html":{}}}],["mail.options",{"_index":2224,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["manage",{"_index":109,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/enumerations.html":{}}}],["manager",{"_index":879,"title":{},"body":{"modules/AppModule.html":{},"injectables/BankService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"dependencies.html":{}}}],["manually",{"_index":2842,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["manytomany",{"_index":179,"title":{},"body":{"entities/Account.html":{}}}],["manytoone",{"_index":180,"title":{},"body":{"entities/Account.html":{},"entities/AirtimeActivity.html":{},"entities/Customer.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{}}}],["manytoone(undefined",{"_index":165,"title":{},"body":{"entities/Account.html":{},"entities/AirtimeActivity.html":{},"entities/Customer.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{}}}],["map",{"_index":762,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["map((res",{"_index":1844,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["map((response",{"_index":1827,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["markasadmin(email",{"_index":3249,"title":{},"body":{"injectables/UserService.html":{}}}],["markemailasconfirmed(email",{"_index":3239,"title":{},"body":{"injectables/UserService.html":{}}}],["markphonenumberasconfirmed(id",{"_index":3236,"title":{},"body":{"injectables/UserService.html":{}}}],["match",{"_index":331,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MonnifyService.html":{}}}],["matches",{"_index":1390,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/VerifySmilePhoneDto.html":{}}}],["matches(/^\\+[1",{"_index":1391,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":71,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchroles(roles",{"_index":68,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["matchstatus",{"_index":328,"title":{},"body":{"injectables/AccountService.html":{}}}],["max",{"_index":2502,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["max(9999",{"_index":2504,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["memory",{"_index":1910,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":1900,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchant",{"_index":156,"title":{"entities/Merchant.html":{}},"body":{"entities/Account.html":{},"modules/AppModule.html":{},"classes/CreateMerchantApiDto.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"classes/UpdateMerchantApiDto.html":{}}}],["merchant.accounts",{"_index":166,"title":{},"body":{"entities/Account.html":{}}}],["merchant.entity",{"_index":178,"title":{},"body":{"entities/Account.html":{},"modules/DatabaseModule.html":{}}}],["merchant.entity.ts",{"_index":2234,"title":{},"body":{"entities/PaymentMerchant.html":{}}}],["merchant.entity.ts:12",{"_index":2239,"title":{},"body":{"entities/PaymentMerchant.html":{}}}],["merchant.entity.ts:15",{"_index":2236,"title":{},"body":{"entities/PaymentMerchant.html":{}}}],["merchant.entity.ts:9",{"_index":2237,"title":{},"body":{"entities/PaymentMerchant.html":{}}}],["merchant.owner",{"_index":1481,"title":{},"body":{"entities/Customer.html":{}}}],["merchant.useraccounts",{"_index":1479,"title":{},"body":{"entities/Customer.html":{}}}],["merchantaccounts",{"_index":1456,"title":{},"body":{"entities/Customer.html":{}}}],["merchantapi",{"_index":2076,"title":{},"body":{"injectables/MerchantApiService.html":{}}}],["merchantapicontroller",{"_index":2046,"title":{"controllers/MerchantApiController.html":{}},"body":{"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{}}}],["merchantapimodule",{"_index":846,"title":{"modules/MerchantApiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MerchantApiModule.html":{},"modules.html":{},"overview.html":{}}}],["merchantapiservice",{"_index":2056,"title":{"injectables/MerchantApiService.html":{}},"body":{"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"overview.html":{}}}],["merchantid",{"_index":2623,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["merchantreference",{"_index":2624,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionsService.html":{}}}],["message",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"injectables/AuthService.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"entities/Log.html":{},"injectables/MonnifyService.html":{},"interfaces/ReturnTypeContainer.html":{},"classes/SetPinDTO.html":{},"injectables/TransactionsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["messageevent",{"_index":759,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["metadata",{"_index":3572,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DepositRepository.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"classes/WithdrawalRepository.html":{}}}],["middlewareconsumer",{"_index":2473,"title":{},"body":{"modules/SeedingModule.html":{}}}],["migrations",{"_index":1614,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":1617,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":1620,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":2503,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["min(1000",{"_index":2506,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["minutes",{"_index":2801,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["miscellaneous",{"_index":3579,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin(pingaurdmixin",{"_index":3741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobile_data",{"_index":3601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobile_data_activity",{"_index":543,"title":{},"body":{"classes/Activity.html":{}}}],["mobiledataactivities",{"_index":1457,"title":{},"body":{"entities/Customer.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{}}}],["mobiledataactivity",{"_index":490,"title":{"entities/MobileDataActivity.html":{}},"body":{"injectables/ActivitiesService.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"entities/Wallet.html":{}}}],["mobiledataactivityrepository",{"_index":456,"title":{"classes/MobileDataActivityRepository.html":{}},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/MobileDataActivityRepository.html":{}}}],["mobiledatum.dto",{"_index":2996,"title":{},"body":{"classes/UpdateMobiledatumDto.html":{}}}],["mobiledatum.dto.ts",{"_index":1279,"title":{},"body":{"classes/CreateMobiledatumDto.html":{},"classes/UpdateMobiledatumDto.html":{}}}],["mockedconfigservice",{"_index":3699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockedjwtservice",{"_index":3701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":1044,"title":{},"body":{"classes/AuthorizeDepositDto.html":{},"classes/Transaction.html":{}}}],["module",{"_index":134,"title":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/HealthModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SeedingModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{}},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/HealthModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SeedingModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{}}}],["modules",{"_index":136,"title":{"modules.html":{}},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/HealthModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SeedingModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["monnify",{"_index":297,"title":{"classes/Monnify.html":{}},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["monnify.controller",{"_index":2095,"title":{},"body":{"modules/MonnifyModule.html":{}}}],["monnify.dto",{"_index":2088,"title":{},"body":{"controllers/MonnifyController.html":{},"classes/UpdateMonnifyDto.html":{}}}],["monnify.dto.ts",{"_index":1282,"title":{},"body":{"classes/CreateMonnifyDto.html":{},"classes/UpdateMonnifyDto.html":{}}}],["monnify.service",{"_index":2087,"title":{},"body":{"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{}}}],["monnify/monnify.module",{"_index":875,"title":{},"body":{"modules/AppModule.html":{}}}],["monnifyaccountrepository",{"_index":263,"title":{},"body":{"injectables/AccountService.html":{}}}],["monnifycontroller",{"_index":2084,"title":{"controllers/MonnifyController.html":{}},"body":{"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{}}}],["monnifydata",{"_index":2811,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["monnifymodule",{"_index":228,"title":{"modules/MonnifyModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/BankModule.html":{},"modules/MonnifyModule.html":{},"modules/TransactionsModule.html":{},"modules.html":{},"overview.html":{}}}],["monnifyservice",{"_index":259,"title":{"injectables/MonnifyService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"overview.html":{}}}],["monnifywalletbalance",{"_index":1103,"title":{},"body":{"injectables/BankService.html":{}}}],["more",{"_index":1908,"title":{},"body":{"controllers/HealthController.html":{}}}],["na",{"_index":3227,"title":{},"body":{"injectables/UserService.html":{}}}],["naira",{"_index":510,"title":{},"body":{"injectables/ActivitiesService.html":{},"miscellaneous/enumerations.html":{}}}],["nairawalletbalance",{"_index":1818,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["name",{"_index":20,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransferRecipientDto.html":{},"injectables/CustomLogger.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DepositRepository.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/functions.html":{}}}],["narration",{"_index":1949,"title":{},"body":{"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["need",{"_index":2840,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["nestjs/axios",{"_index":1763,"title":{},"body":{"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"injectables/AnnouncementService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["nestjs/common/services/console",{"_index":1435,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["nestjs/common/utils/http",{"_index":2688,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["nestjs/config",{"_index":284,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"modules/DatabaseModule.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":35,"title":{},"body":{"guards/AbilitiesGuard.html":{},"modules/AppModule.html":{},"injectables/JwtAuthGaurd.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":972,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2967,"title":{},"body":{"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":970,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3549,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":1902,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":234,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AnnouncementModule.html":{},"injectables/AnnouncementService.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"modules/ReferralModule.html":{},"injectables/ReferralService.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["nestlogger",{"_index":1581,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["nestlogger('sql",{"_index":1565,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["nestmiddleware",{"_index":2454,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["new",{"_index":64,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"injectables/AccountService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/LocalStrategy.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"miscellaneous/variables.html":{}}}],["newadmin",{"_index":3206,"title":{},"body":{"injectables/UserService.html":{}}}],["newannouncement",{"_index":827,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["newkyc",{"_index":3192,"title":{},"body":{"injectables/UserService.html":{}}}],["newlog",{"_index":2035,"title":{},"body":{"injectables/LogService.html":{}}}],["newobject",{"_index":3744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newobject[key",{"_index":3746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newreferral",{"_index":2433,"title":{},"body":{"injectables/ReferralService.html":{},"injectables/UserService.html":{}}}],["newuser",{"_index":3184,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":3198,"title":{},"body":{"injectables/UserService.html":{}}}],["newwallet",{"_index":3517,"title":{},"body":{"injectables/WalletService.html":{}}}],["next",{"_index":2451,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["ng",{"_index":1836,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["ngn",{"_index":3613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node",{"_index":1794,"title":{},"body":{"injectables/FlutterwaveService.html":{},"dependencies.html":{}}}],["nodemailer",{"_index":2214,"title":{"classes/Nodemailer.html":{}},"body":{"classes/Nodemailer.html":{},"injectables/NodemailerService.html":{},"dependencies.html":{}}}],["nodemailer.dto",{"_index":3002,"title":{},"body":{"classes/UpdateNodemailerDto.html":{}}}],["nodemailer.dto.ts",{"_index":1285,"title":{},"body":{"classes/CreateNodemailerDto.html":{},"classes/UpdateNodemailerDto.html":{}}}],["nodemailer.service",{"_index":2220,"title":{},"body":{"modules/NodemailerModule.html":{}}}],["nodemailer/lib/mailer",{"_index":2228,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["nodemailer/nodemailer.module",{"_index":885,"title":{},"body":{"modules/AppModule.html":{}}}],["nodemailermodule",{"_index":847,"title":{"modules/NodemailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/NodemailerModule.html":{},"modules.html":{},"overview.html":{}}}],["nodemailerservice",{"_index":1684,"title":{"injectables/NodemailerService.html":{}},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"overview.html":{}}}],["nodemailertransport",{"_index":2222,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["npm",{"_index":3659,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":1000,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/MonnifyService.html":{},"injectables/UserService.html":{}}}],["nullable",{"_index":576,"title":{},"body":{"classes/Activity-1.html":{},"entities/Announcement.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["number",{"_index":172,"title":{},"body":{"entities/Account.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"classes/Activity-1.html":{},"classes/AdminRepository.html":{},"injectables/AuthService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyWAECDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateReferralDto.html":{},"classes/CreateTransferDto.html":{},"entities/CustomerKyc.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"entities/Email.html":{},"classes/EntityContainer.html":{},"injectables/FlutterwaveService.html":{},"classes/InitializeWithdrawalDto.html":{},"entities/Log.html":{},"injectables/MerchantApiService.html":{},"injectables/PaystackService.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"injectables/ReferralService.html":{},"entities/SeedingLogEntry.html":{},"entities/SendTransfer.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"injectables/WalletService.html":{}}}],["number(process.env.postgres_db_port",{"_index":3716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.dto",{"_index":1056,"title":{},"body":{"controllers/BankController.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/SmsController.html":{}}}],["number.dto.ts",{"_index":1226,"title":{},"body":{"classes/ConfirmPhoneNumberDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{}}}],["number.dto.ts:10",{"_index":3274,"title":{},"body":{"classes/VerifyAccountNumberDto-1.html":{}}}],["number.dto.ts:2",{"_index":1228,"title":{},"body":{"classes/ConfirmPhoneNumberDto.html":{},"classes/VerifyAccountNumberDto.html":{}}}],["number.dto.ts:3",{"_index":3271,"title":{},"body":{"classes/VerifyAccountNumberDto.html":{}}}],["number.dto.ts:6",{"_index":3273,"title":{},"body":{"classes/VerifyAccountNumberDto-1.html":{}}}],["numbers",{"_index":1872,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["numbers/${orderref",{"_index":1874,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["object",{"_index":3160,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":763,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["one",{"_index":3605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onetomany",{"_index":1512,"title":{},"body":{"entities/Customer.html":{},"entities/Merchant.html":{},"entities/PaymentMerchant.html":{},"entities/Wallet.html":{}}}],["onetomany(undefined",{"_index":1467,"title":{},"body":{"entities/Customer.html":{},"entities/Merchant.html":{},"entities/PaymentMerchant.html":{},"entities/Wallet.html":{}}}],["onetoone",{"_index":1513,"title":{},"body":{"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Referral.html":{}}}],["onetoone(undefined",{"_index":1474,"title":{},"body":{"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Referral.html":{}}}],["open",{"_index":3668,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DepositRepository.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"interfaces/ReturnTypeContainer.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1418,"title":{},"body":{"injectables/CustomLogger.html":{},"injectables/EmailService.html":{},"injectables/NodemailerService.html":{}}}],["os",{"_index":1536,"title":{},"body":{"entities/CustomerKyc.html":{},"injectables/TransactionsService.html":{}}}],["otp",{"_index":1744,"title":{},"body":{"classes/FinalizeWithdrawalDto.html":{},"classes/ValidateDepositDto.html":{}}}],["out",{"_index":143,"title":{},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["overview",{"_index":3677,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":2040,"title":{},"body":{"entities/Merchant.html":{},"injectables/WalletService.html":{}}}],["package",{"_index":3541,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":3671,"title":{},"body":{"index.html":{}}}],["param",{"_index":200,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{}}}],["param('id",{"_index":438,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/MerchantApiController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{}}}],["param('settingname",{"_index":2543,"title":{},"body":{"controllers/SettingsController.html":{}}}],["parameter",{"_index":775,"title":{},"body":{"controllers/AnnouncementController.html":{},"controllers/TransactionsController.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DepositRepository.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2273,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/VtpassController.html":{}}}],["parseintpipe",{"_index":3075,"title":{},"body":{"controllers/UserController.html":{}}}],["parser",{"_index":3560,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":2966,"title":{},"body":{"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{}}}],["partialtype(createaccountdto",{"_index":2969,"title":{},"body":{"classes/UpdateAccountDto.html":{}}}],["partialtype(createactivitydto",{"_index":2971,"title":{},"body":{"classes/UpdateActivityDto.html":{}}}],["partialtype(createairtimedto",{"_index":2974,"title":{},"body":{"classes/UpdateAirtimeDto.html":{}}}],["partialtype(createannouncementdto",{"_index":2976,"title":{},"body":{"classes/UpdateAnnouncementDto.html":{}}}],["partialtype(createauthdto",{"_index":2980,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createemaildto",{"_index":2985,"title":{},"body":{"classes/UpdateEmailDto.html":{}}}],["partialtype(createhealthdto",{"_index":2989,"title":{},"body":{"classes/UpdateHealthDto.html":{}}}],["partialtype(createlogdto",{"_index":2991,"title":{},"body":{"classes/UpdateLogDto.html":{}}}],["partialtype(createmerchantapidto",{"_index":2993,"title":{},"body":{"classes/UpdateMerchantApiDto.html":{}}}],["partialtype(createmobiledatumdto",{"_index":2997,"title":{},"body":{"classes/UpdateMobiledatumDto.html":{}}}],["partialtype(createmonnifydto",{"_index":2999,"title":{},"body":{"classes/UpdateMonnifyDto.html":{}}}],["partialtype(createnodemailerdto",{"_index":3003,"title":{},"body":{"classes/UpdateNodemailerDto.html":{}}}],["partialtype(createpaystackdto",{"_index":3005,"title":{},"body":{"classes/UpdatePaystackDto.html":{}}}],["partialtype(createreferraldto",{"_index":3007,"title":{},"body":{"classes/UpdateReferralDto.html":{}}}],["partialtype(createroledto",{"_index":3011,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsettingdto",{"_index":3012,"title":{},"body":{"classes/UpdateSettingDto.html":{}}}],["partialtype(createtransactiondto",{"_index":3014,"title":{},"body":{"classes/UpdateTransactionDto.html":{}}}],["partialtype(createtransferdto",{"_index":3016,"title":{},"body":{"classes/UpdateTransferDto.html":{}}}],["partialtype(createtwilliodto",{"_index":3021,"title":{},"body":{"classes/UpdateTwillioDto.html":{}}}],["partialtype(createuserdto",{"_index":3024,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createvtpassdto",{"_index":3028,"title":{},"body":{"classes/UpdateVtpassDto.html":{}}}],["partialtype(createwalletdto",{"_index":3032,"title":{},"body":{"classes/UpdateWalletDto.html":{}}}],["pass",{"_index":2231,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["passport",{"_index":1985,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":969,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1982,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1988,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":917,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"injectables/SeedingMiddleware.html":{},"classes/SetPinDTO.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":199,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{}}}],["patch(':id",{"_index":401,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/MerchantApiController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/TransfersController.html":{},"controllers/VtpassController.html":{}}}],["patch(':settingname",{"_index":2535,"title":{},"body":{"controllers/SettingsController.html":{}}}],["patch('assign_user_level",{"_index":627,"title":{},"body":{"controllers/AdminController.html":{}}}],["patch('kyc/approve",{"_index":3093,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":1594,"title":{},"body":{"modules/DatabaseModule.html":{},"controllers/HealthController.html":{}}}],["payload",{"_index":345,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/MonnifyService.html":{},"injectables/UserService.html":{}}}],["paymentmerchant",{"_index":164,"title":{"entities/PaymentMerchant.html":{}},"body":{"entities/Account.html":{},"modules/DatabaseModule.html":{},"entities/PaymentMerchant.html":{}}}],["paystack",{"_index":2242,"title":{"classes/Paystack.html":{}},"body":{"classes/Paystack.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["paystack.controller",{"_index":2298,"title":{},"body":{"modules/PaystackModule.html":{}}}],["paystack.dto",{"_index":2276,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/UpdatePaystackDto.html":{}}}],["paystack.dto.ts",{"_index":1288,"title":{},"body":{"classes/CreatePaystackDto.html":{},"classes/UpdatePaystackDto.html":{}}}],["paystack.service",{"_index":2275,"title":{},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{}}}],["paystack/paystack.module",{"_index":866,"title":{},"body":{"modules/AppModule.html":{},"modules/TransactionsModule.html":{}}}],["paystackcontroller",{"_index":2244,"title":{"controllers/PaystackController.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{}}}],["paystackmodule",{"_index":848,"title":{"modules/PaystackModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaystackModule.html":{},"modules/TransactionsModule.html":{},"modules.html":{},"overview.html":{}}}],["paystackservice",{"_index":2274,"title":{"injectables/PaystackService.html":{}},"body":{"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"overview.html":{}}}],["pending",{"_index":2178,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["pending_auth",{"_index":3622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pending_authorization",{"_index":2182,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["pending_requery",{"_index":3623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pg",{"_index":3569,"title":{},"body":{"dependencies.html":{}}}],["pgadmin",{"_index":3669,"title":{},"body":{"index.html":{}}}],["pgadmin_default_email",{"_index":907,"title":{},"body":{"modules/AppModule.html":{}}}],["pgadmin_default_password",{"_index":908,"title":{},"body":{"modules/AppModule.html":{}}}],["phone",{"_index":1108,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"controllers/SmsController.html":{},"injectables/UserService.html":{}}}],["phone.dto",{"_index":3363,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["phone.dto.ts",{"_index":3293,"title":{},"body":{"classes/VerifySmilePhoneDto.html":{}}}],["phone.dto.ts:10",{"_index":3295,"title":{},"body":{"classes/VerifySmilePhoneDto.html":{}}}],["phone.dto.ts:6",{"_index":3294,"title":{},"body":{"classes/VerifySmilePhoneDto.html":{}}}],["phone_number",{"_index":3251,"title":{},"body":{"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{}}}],["phonenumber",{"_index":663,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CreateUserDto.html":{},"classes/CustomerRepository.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SmsService.html":{},"injectables/TwillioService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["phonenumberalreadyexists",{"_index":3177,"title":{},"body":{"injectables/UserService.html":{}}}],["pin",{"_index":959,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositDto.html":{},"entities/Customer.html":{},"classes/SetPinDTO.html":{},"injectables/UserService.html":{}}}],["pin.dto",{"_index":949,"title":{},"body":{"controllers/AuthController.html":{}}}],["pin.dto.ts",{"_index":2495,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["pin.dto.ts:16",{"_index":2501,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["pin.dto.ts:6",{"_index":2496,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["pingaurd",{"_index":3703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingaurdmixin",{"_index":3736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":1826,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["port",{"_index":899,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":194,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"injectables/MonnifyService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{}}}],["post('/confirm",{"_index":2691,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["post('/create_transfer_recipient",{"_index":2254,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/finalize_withdrawal",{"_index":2257,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post('/initialize_withdrawal",{"_index":2265,"title":{},"body":{"controllers/PaystackController.html":{}}}],["post(':id",{"_index":789,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["post('bouquet_change",{"_index":3329,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('bouquet_change_dstv_gotv",{"_index":427,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["post('bouquet_renew_dstv_gotv",{"_index":430,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["post('bouquet_renewal",{"_index":3348,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('buy_airtime",{"_index":417,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/VtpassController.html":{}}}],["post('buy_data",{"_index":424,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/VtpassController.html":{}}}],["post('buy_electricity",{"_index":421,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/VtpassController.html":{}}}],["post('buy_showmax",{"_index":3320,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('buy_startimes",{"_index":3323,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('buy_waec",{"_index":3326,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('create",{"_index":619,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('deposit",{"_index":3484,"title":{},"body":{"controllers/WalletController.html":{}}}],["post('emit",{"_index":782,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["post('login/admin",{"_index":955,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login/user",{"_index":952,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('new",{"_index":2524,"title":{},"body":{"controllers/SettingsController.html":{}}}],["post('pin",{"_index":940,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":3080,"title":{},"body":{"controllers/UserController.html":{}}}],["post('transaction_status",{"_index":3344,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('update",{"_index":2677,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["post('verify_smart_card",{"_index":3352,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('verify_smile_email",{"_index":3355,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('verify_smile_phone",{"_index":3358,"title":{},"body":{"controllers/VtpassController.html":{}}}],["post('verifyemail",{"_index":3096,"title":{},"body":{"controllers/UserController.html":{}}}],["post('withdraw",{"_index":2693,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["post(`${this.baseurl}/api/v1/vas/bvn",{"_index":2213,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["post(`${this.baseurl}api/v1/auth/login",{"_index":2163,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["postgres",{"_index":1605,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["postgres_db_host",{"_index":906,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres_db_port",{"_index":904,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres_password",{"_index":903,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres_user",{"_index":901,"title":{},"body":{"modules/AppModule.html":{}}}],["power",{"_index":3690,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prefix",{"_index":187,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/EmailController.html":{},"controllers/FlutterwaveController.html":{},"controllers/HealthController.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/TwillioController.html":{},"controllers/UserController.html":{},"controllers/VtpassController.html":{},"controllers/WalletController.html":{}}}],["primarygeneratedcolumn",{"_index":570,"title":{},"body":{"classes/Activity-1.html":{},"entities/Email.html":{},"classes/EntityContainer.html":{},"entities/Log.html":{},"entities/SeedingLogEntry.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["private",{"_index":43,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}}}],["process",{"_index":1906,"title":{},"body":{"controllers/HealthController.html":{}}}],["process.env.postgres_db",{"_index":3719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_db_host",{"_index":3715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_password",{"_index":3718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_user",{"_index":3717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":915,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_password",{"_index":918,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_port",{"_index":916,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":1446,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["profileimage",{"_index":3034,"title":{},"body":{"classes/User.html":{}}}],["promise",{"_index":28,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/PaystackService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}}}],["promise((resolve",{"_index":3747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":151,"title":{},"body":{"entities/Account.html":{},"injectables/AccountService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"injectables/FlutterwaveService.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"entities/Log.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"entities/SendTransfer.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/TwillioService.html":{},"classes/User.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{}}}],["provide",{"_index":924,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":145,"title":{},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/HealthModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{}}}],["public",{"_index":152,"title":{},"body":{"entities/Account.html":{},"classes/Activity-1.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"controllers/AuthController.html":{},"classes/CreateAnnouncementDto.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/EntityContainer.html":{},"controllers/FlutterwaveController.html":{},"entities/Log.html":{},"entities/Merchant.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"entities/SeedingLogEntry.html":{},"entities/SendTransfer.html":{},"classes/Transaction.html":{},"controllers/TransactionsController.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/User.html":{},"controllers/UserController.html":{},"entities/Wallet.html":{},"miscellaneous/variables.html":{}}}],["public()@get",{"_index":753,"title":{},"body":{"controllers/AnnouncementController.html":{},"controllers/FlutterwaveController.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{}}}],["public()@get('get_all_activities",{"_index":600,"title":{},"body":{"controllers/AdminController.html":{}}}],["public()@get('kyc/pending",{"_index":3062,"title":{},"body":{"controllers/UserController.html":{}}}],["public()@get('summary",{"_index":602,"title":{},"body":{"controllers/AdminController.html":{}}}],["public()@get('users/activities/:id",{"_index":605,"title":{},"body":{"controllers/AdminController.html":{}}}],["public()@patch('kyc/approve",{"_index":3054,"title":{},"body":{"controllers/UserController.html":{}}}],["public()@post('/confirm",{"_index":2662,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["public()@post('create",{"_index":597,"title":{},"body":{"controllers/AdminController.html":{}}}],["public()@post('emit",{"_index":749,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["public()@post('signup",{"_index":3057,"title":{},"body":{"controllers/UserController.html":{}}}],["public()@sse('subscribe",{"_index":756,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["publickey",{"_index":1768,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["published",{"_index":770,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"miscellaneous/enumerations.html":{}}}],["publishedby",{"_index":727,"title":{},"body":{"entities/Announcement.html":{}}}],["quantity",{"_index":1109,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"entities/TvSubscriptionActivity.html":{}}}],["query",{"_index":748,"title":{},"body":{"controllers/AnnouncementController.html":{},"classes/DatabaseLogger.html":{},"controllers/TransactionsController.html":{}}}],["query.dto",{"_index":2686,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["query.dto.ts",{"_index":2649,"title":{},"body":{"classes/TransactionQueryDto.html":{}}}],["query.dto.ts:7",{"_index":2651,"title":{},"body":{"classes/TransactionQueryDto.html":{}}}],["query.id",{"_index":786,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["query.type",{"_index":773,"title":{},"body":{"controllers/AnnouncementController.html":{},"controllers/TransactionsController.html":{}}}],["queryrunner",{"_index":500,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["queryrunner.committransaction",{"_index":2831,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["queryrunner.connect",{"_index":502,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{}}}],["queryrunner.manager.create(administrator",{"_index":3201,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.create(customer",{"_index":3185,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.create(customerkyc",{"_index":3193,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.create(email",{"_index":1716,"title":{},"body":{"injectables/EmailService.html":{}}}],["queryrunner.manager.create(referral",{"_index":3195,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.create(wallet",{"_index":3188,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.decrement",{"_index":3526,"title":{},"body":{"injectables/WalletService.html":{}}}],["queryrunner.manager.findone(email",{"_index":1712,"title":{},"body":{"injectables/EmailService.html":{}}}],["queryrunner.manager.findone(wallet",{"_index":3527,"title":{},"body":{"injectables/WalletService.html":{}}}],["queryrunner.manager.save",{"_index":3203,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.save(customer",{"_index":3187,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.save(customerkyc",{"_index":3194,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.save(deposit",{"_index":2830,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["queryrunner.manager.save(email",{"_index":1717,"title":{},"body":{"injectables/EmailService.html":{}}}],["queryrunner.manager.save(newreferral",{"_index":3196,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.manager.save(wallet",{"_index":3191,"title":{},"body":{"injectables/UserService.html":{}}}],["queryrunner.release",{"_index":2844,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["queryrunner.rollbacktransaction",{"_index":2838,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["queryrunner.starttransaction",{"_index":503,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{}}}],["queryrunner?.data?.iscreatinglogs",{"_index":1582,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["querytransactionstatus",{"_index":3309,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["querytransactionstatus(querytransactionstatusdto",{"_index":3343,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["querytransactionstatusdto",{"_index":2343,"title":{"classes/QueryTransactionStatusDto.html":{}},"body":{"classes/QueryTransactionStatusDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["queued",{"_index":3621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["read",{"_index":112,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/enumerations.html":{}}}],["readonly",{"_index":215,"title":{},"body":{"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"controllers/LogController.html":{},"controllers/MerchantApiController.html":{},"controllers/MonnifyController.html":{},"injectables/MonnifyService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/SeedingMiddleware.html":{},"controllers/SettingsController.html":{},"controllers/SmsController.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/TransfersController.html":{},"injectables/TransfersService.html":{},"controllers/TwillioController.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{}}}],["readreceivetransferpermission",{"_index":1308,"title":{"classes/ReadReceiveTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["readsendtransferpermission",{"_index":1303,"title":{"classes/ReadSendTransferPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["readtransferrequestpermission",{"_index":1311,"title":{"classes/ReadTransferRequestPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["readuserpermission",{"_index":1298,"title":{"classes/ReadUserPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"controllers/UserController.html":{}}}],["readuserpermission())@get('current",{"_index":3060,"title":{},"body":{"controllers/UserController.html":{}}}],["readwithdrawalpermission",{"_index":1315,"title":{"classes/ReadWithdrawalPermission.html":{}},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{}}}],["readwithdrawalpermission())@get(':id",{"_index":2670,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["readwithdrawalpermission())@get('current",{"_index":2667,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["real",{"_index":552,"title":{},"body":{"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"entities/Wallet.html":{}}}],["reason",{"_index":1933,"title":{},"body":{"classes/InitializeWithdrawalDto.html":{}}}],["receive",{"_index":1307,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/enumerations.html":{}}}],["receivedrequests",{"_index":1458,"title":{},"body":{"entities/Customer.html":{}}}],["receivedtransfers",{"_index":1459,"title":{},"body":{"entities/Customer.html":{},"entities/Wallet.html":{}}}],["receivetransfer",{"_index":93,"title":{"entities/ReceiveTransfer.html":{}},"body":{"injectables/AbilityFactory.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Wallet.html":{}}}],["receivetransferrepository",{"_index":2379,"title":{"classes/ReceiveTransferRepository.html":{}},"body":{"classes/ReceiveTransferRepository.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["receiveuser",{"_index":2359,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{}}}],["receiveuserid",{"_index":2360,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{}}}],["receivewallet",{"_index":2361,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["receivewalletid",{"_index":2362,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["recipient",{"_index":1934,"title":{},"body":{"classes/InitializeWithdrawalDto.html":{},"injectables/TransfersService.html":{}}}],["recipient.data.wallet.id",{"_index":2907,"title":{},"body":{"injectables/TransfersService.html":{}}}],["recipient.dto",{"_index":2277,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["recipient.dto.ts",{"_index":1362,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{}}}],["recipient.dto.ts:10",{"_index":1368,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{}}}],["recipient.dto.ts:14",{"_index":1365,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{}}}],["recipient.dto.ts:18",{"_index":1366,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{}}}],["recipient.dto.ts:22",{"_index":1367,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{}}}],["recipient.dto.ts:6",{"_index":1369,"title":{},"body":{"classes/CreateTransferRecipientDto.html":{}}}],["recipientemail",{"_index":1356,"title":{},"body":{"classes/CreateTransferDto.html":{},"injectables/TransfersService.html":{}}}],["recipientwallet",{"_index":2910,"title":{},"body":{"injectables/TransfersService.html":{}}}],["recipientwalletid",{"_index":2906,"title":{},"body":{"injectables/TransfersService.html":{}}}],["redis",{"_index":880,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":911,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":912,"title":{},"body":{"modules/AppModule.html":{}}}],["redisstore",{"_index":877,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":342,"title":{},"body":{"injectables/AccountService.html":{},"classes/CreateBillDto.html":{},"classes/CreateTransactionDto.html":{},"classes/DepositRepository.html":{},"injectables/FlutterwaveService.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{},"classes/VerifyTransactionDto.html":{},"classes/WithdrawalRepository.html":{}}}],["referral",{"_index":1491,"title":{"entities/Referral.html":{}},"body":{"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"injectables/UserService.html":{}}}],["referral.controller",{"_index":2414,"title":{},"body":{"modules/ReferralModule.html":{}}}],["referral.dto",{"_index":2403,"title":{},"body":{"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"classes/UpdateReferralDto.html":{}}}],["referral.dto.ts",{"_index":1321,"title":{},"body":{"classes/CreateReferralDto.html":{},"classes/UpdateReferralDto.html":{}}}],["referral.dto.ts:10",{"_index":1325,"title":{},"body":{"classes/CreateReferralDto.html":{}}}],["referral.dto.ts:6",{"_index":1324,"title":{},"body":{"classes/CreateReferralDto.html":{}}}],["referral.service",{"_index":2402,"title":{},"body":{"controllers/ReferralController.html":{},"modules/ReferralModule.html":{}}}],["referral/referral.module",{"_index":886,"title":{},"body":{"modules/AppModule.html":{}}}],["referralcode",{"_index":1381,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/Customer.html":{},"classes/CustomerRepository.html":{},"injectables/UserService.html":{}}}],["referralcontroller",{"_index":2392,"title":{"controllers/ReferralController.html":{}},"body":{"controllers/ReferralController.html":{},"modules/ReferralModule.html":{}}}],["referralmodule",{"_index":849,"title":{"modules/ReferralModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReferralModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["referralrepository",{"_index":2416,"title":{"classes/ReferralRepository.html":{}},"body":{"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{}}}],["referrals",{"_index":1460,"title":{},"body":{"entities/Customer.html":{}}}],["referrals.referred",{"_index":1494,"title":{},"body":{"entities/Customer.html":{}}}],["referrals.referredby",{"_index":1492,"title":{},"body":{"entities/Customer.html":{}}}],["referralservice",{"_index":2401,"title":{"injectables/ReferralService.html":{}},"body":{"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"injectables/ReferralService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["referred",{"_index":2385,"title":{},"body":{"entities/Referral.html":{}}}],["referredby",{"_index":1461,"title":{},"body":{"entities/Customer.html":{},"entities/Referral.html":{}}}],["referredbyid",{"_index":1322,"title":{},"body":{"classes/CreateReferralDto.html":{},"entities/Referral.html":{},"injectables/UserService.html":{}}}],["referredid",{"_index":1323,"title":{},"body":{"classes/CreateReferralDto.html":{},"entities/Referral.html":{},"injectables/UserService.html":{}}}],["referrerid",{"_index":3179,"title":{},"body":{"injectables/UserService.html":{}}}],["refetch",{"_index":2796,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["reflect",{"_index":3571,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":13,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/JwtAuthGaurd.html":{}}}],["registered",{"_index":321,"title":{},"body":{"injectables/AccountService.html":{}}}],["reject",{"_index":3748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reject(err",{"_index":3753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rejectunauthorized",{"_index":922,"title":{},"body":{"modules/AppModule.html":{}}}],["relations",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{},"classes/CustomerRepository.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{}}}],["release",{"_index":2841,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["remarks",{"_index":523,"title":{},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{}}}],["remove",{"_index":367,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["remove(@param('id",{"_index":440,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/MerchantApiController.html":{},"controllers/PaystackController.html":{},"controllers/ReferralController.html":{},"controllers/TransfersController.html":{},"controllers/VtpassController.html":{}}}],["remove(id",{"_index":396,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["removekeyandpropertyfromobject",{"_index":2812,"title":{},"body":{"injectables/TransactionsService.html":{},"miscellaneous/variables.html":{}}}],["removemoney",{"_index":3504,"title":{},"body":{"injectables/WalletService.html":{}}}],["removemoney(transactiondto",{"_index":3514,"title":{},"body":{"injectables/WalletService.html":{}}}],["removes",{"_index":2078,"title":{},"body":{"injectables/MerchantApiService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/VtpassService.html":{}}}],["renewal.dto",{"_index":3367,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["renewal.dto.ts",{"_index":1122,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewal.dto.ts:11",{"_index":1128,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewal.dto.ts:16",{"_index":1124,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewal.dto.ts:20",{"_index":1126,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewal.dto.ts:24",{"_index":1125,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewal.dto.ts:28",{"_index":1130,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewal.dto.ts:32",{"_index":1129,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewal.dto.ts:7",{"_index":1127,"title":{},"body":{"classes/BouquetRenewalDto.html":{}}}],["renewbouquet",{"_index":3310,"title":{},"body":{"controllers/VtpassController.html":{}}}],["renewbouquet(@body",{"_index":3389,"title":{},"body":{"controllers/VtpassController.html":{}}}],["renewbouquet(bouquetchangedto",{"_index":3347,"title":{},"body":{"controllers/VtpassController.html":{}}}],["repositories/account.repository",{"_index":239,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{}}}],["repositories/airtime",{"_index":451,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{}}}],["repositories/announcement.repository",{"_index":798,"title":{},"body":{"modules/AnnouncementModule.html":{},"injectables/AnnouncementService.html":{}}}],["repositories/customer",{"_index":3116,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["repositories/customer.repository",{"_index":3115,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["repositories/deposit.repository",{"_index":2714,"title":{},"body":{"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{}}}],["repositories/electricity",{"_index":454,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{}}}],["repositories/mobile",{"_index":457,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{}}}],["repositories/receive",{"_index":2890,"title":{},"body":{"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["repositories/referral.repository",{"_index":2417,"title":{},"body":{"modules/ReferralModule.html":{},"injectables/ReferralService.html":{}}}],["repositories/send",{"_index":2892,"title":{},"body":{"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["repositories/transfer",{"_index":2893,"title":{},"body":{"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["repositories/tv",{"_index":459,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{}}}],["repositories/wallet.repository",{"_index":3493,"title":{},"body":{"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["repositories/withdrawal.repository",{"_index":2713,"title":{},"body":{"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{}}}],["repository",{"_index":243,"title":{},"body":{"classes/AccountRepository.html":{},"injectables/ActivitiesService.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"classes/AirtimeActivityRepository.html":{},"classes/AnnouncementReository.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DepositRepository.html":{},"classes/ElectricityBillActivityRepository.html":{},"injectables/EmailService.html":{},"injectables/LogService.html":{},"classes/MobileDataActivityRepository.html":{},"classes/ReceiveTransferRepository.html":{},"classes/ReferralRepository.html":{},"classes/SendTransferRepository.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"classes/TransferRequestRepository.html":{},"injectables/TransfersService.html":{},"classes/TvSubscriptionActivityRepository.html":{},"injectables/UserService.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"classes/WithdrawalRepository.html":{}}}],["req",{"_index":193,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"injectables/SeedingMiddleware.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/UserController.html":{}}}],["req.user",{"_index":420,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{}}}],["req.user.email",{"_index":2877,"title":{},"body":{"controllers/TransfersController.html":{}}}],["req.user.role",{"_index":3084,"title":{},"body":{"controllers/UserController.html":{}}}],["req.user.user",{"_index":3083,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":202,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AuthController.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["request.body.pin",{"_index":3740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.fromuser",{"_index":1496,"title":{},"body":{"entities/Customer.html":{}}}],["request.repository",{"_index":2894,"title":{},"body":{"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["request.repository.ts",{"_index":2866,"title":{},"body":{"classes/TransferRequestRepository.html":{}}}],["request.touser",{"_index":1486,"title":{},"body":{"entities/Customer.html":{}}}],["request.user.pin",{"_index":3738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_id",{"_index":1110,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/QueryTransactionStatusDto.html":{}}}],["requestheaders",{"_index":1769,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["requests.entity",{"_index":100,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"classes/TransferRequestRepository.html":{}}}],["requests.entity.ts",{"_index":2850,"title":{},"body":{"entities/TransferRequest.html":{}}}],["requests.entity.ts:10",{"_index":2855,"title":{},"body":{"entities/TransferRequest.html":{}}}],["requests.entity.ts:13",{"_index":2862,"title":{},"body":{"entities/TransferRequest.html":{}}}],["requests.entity.ts:16",{"_index":2857,"title":{},"body":{"entities/TransferRequest.html":{}}}],["requests.entity.ts:19",{"_index":2860,"title":{},"body":{"entities/TransferRequest.html":{}}}],["requests.entity.ts:22",{"_index":2858,"title":{},"body":{"entities/TransferRequest.html":{}}}],["requests.entity.ts:25",{"_index":2861,"title":{},"body":{"entities/TransferRequest.html":{}}}],["requiredrule",{"_index":37,"title":{"interfaces/RequiredRule.html":{}},"body":{"guards/AbilitiesGuard.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":1296,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":2152,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/SeedingMiddleware.html":{}}}],["res.data",{"_index":1845,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["reserved",{"_index":1327,"title":{},"body":{"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{}}}],["reset",{"_index":142,"title":{},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["resolve",{"_index":3755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":1822,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{}}}],["response.data",{"_index":1828,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["response.data.balance",{"_index":2826,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["result",{"_index":325,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AnnouncementService.html":{},"injectables/BankService.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{}}}],["result.data",{"_index":329,"title":{},"body":{"injectables/AccountService.html":{}}}],["result.data.accountname",{"_index":339,"title":{},"body":{"injectables/AccountService.html":{}}}],["result.data.available_balance",{"_index":1819,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["result.data.complete_message",{"_index":2750,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["result.data.destinationaccountname",{"_index":2743,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["result.data.destinationbankname",{"_index":2742,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["result.data.status",{"_index":2747,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["result.data.transactionreference",{"_index":2744,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["result.responsebody",{"_index":2177,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["result.responsebody.accesstoken",{"_index":2171,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["result.responsebody.availablebalance",{"_index":2210,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["result.responsebody.expiresin",{"_index":2170,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["result.responsebody.status",{"_index":2174,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["result.responsecode",{"_index":2172,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["result.status",{"_index":2741,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{}}}],["result.valid",{"_index":2960,"title":{},"body":{"injectables/TwillioService.html":{}}}],["results",{"_index":70,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":2797,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["return",{"_index":49,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankController.html":{},"injectables/BankService.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DepositRepository.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/TransfersController.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/variables.html":{}}}],["returnedaccountnumber",{"_index":327,"title":{},"body":{"injectables/AccountService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/AdminController.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/CustomLogger.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DepositRepository.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/FlutterwaveController.html":{},"injectables/FlutterwaveService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"controllers/WalletController.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/functions.html":{}}}],["returntypecontainer",{"_index":2436,"title":{"interfaces/ReturnTypeContainer.html":{}},"body":{"interfaces/ReturnTypeContainer.html":{},"injectables/TransfersService.html":{},"injectables/WalletService.html":{}}}],["reversed",{"_index":2184,"title":{},"body":{"injectables/MonnifyService.html":{},"miscellaneous/enumerations.html":{}}}],["rimraf",{"_index":3574,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":118,"title":{},"body":{"injectables/AbilityFactory.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role.dto",{"_index":3010,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":1335,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["roles",{"_index":66,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rollback",{"_index":2835,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["rss",{"_index":1915,"title":{},"body":{"controllers/HealthController.html":{}}}],["rule.subject",{"_index":59,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rules",{"_index":45,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rules.foreach((rule",{"_index":57,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["rules.length",{"_index":48,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["run",{"_index":3658,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runmigrations",{"_index":3706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":764,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{},"dependencies.html":{}}}],["same",{"_index":2799,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["savedadmin",{"_index":3202,"title":{},"body":{"injectables/UserService.html":{}}}],["savedannouncement",{"_index":829,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["saveduser",{"_index":3186,"title":{},"body":{"injectables/UserService.html":{}}}],["saveduser.id",{"_index":3189,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":978,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":1770,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["secretorkey",{"_index":1992,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeding.middleware",{"_index":2476,"title":{},"body":{"modules/SeedingModule.html":{}}}],["seeding/seeding.module",{"_index":892,"title":{},"body":{"modules/AppModule.html":{}}}],["seedinglogentry",{"_index":1602,"title":{"entities/SeedingLogEntry.html":{}},"body":{"modules/DatabaseModule.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{}}}],["seedinglogentry('initialseeding",{"_index":2469,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["seedingmiddleware",{"_index":2444,"title":{"injectables/SeedingMiddleware.html":{}},"body":{"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{}}}],["seedingmodule",{"_index":850,"title":{"modules/SeedingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeedingModule.html":{},"modules.html":{},"overview.html":{}}}],["select",{"_index":538,"title":{},"body":{"classes/Activity.html":{}}}],["select('deposit",{"_index":2764,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["select('sum(deposit.amount",{"_index":2761,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["select('sum(transaction.amount",{"_index":2785,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["select('sum(wallet.balance",{"_index":3532,"title":{},"body":{"injectables/WalletService.html":{}}}],["select('sum(withdrawal.amount",{"_index":2756,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["select('withdrawal",{"_index":2769,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["send",{"_index":1302,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/enumerations.html":{}}}],["send_user_permssion",{"_index":3104,"title":{},"body":{"controllers/UserController.html":{}}}],["sender",{"_index":2904,"title":{},"body":{"injectables/TransfersService.html":{}}}],["sender.data.wallet.id",{"_index":2909,"title":{},"body":{"injectables/TransfersService.html":{}}}],["senderemail",{"_index":1357,"title":{},"body":{"classes/CreateTransferDto.html":{},"controllers/TransfersController.html":{},"injectables/TransfersService.html":{}}}],["senderwallet",{"_index":2912,"title":{},"body":{"injectables/TransfersService.html":{}}}],["senderwallet.balance",{"_index":2914,"title":{},"body":{"injectables/TransfersService.html":{}}}],["senderwalletid",{"_index":2908,"title":{},"body":{"injectables/TransfersService.html":{}}}],["sendgrid/mail",{"_index":1708,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["sendmail",{"_index":1691,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NodemailerService.html":{}}}],["sendmail(options",{"_index":1700,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NodemailerService.html":{}}}],["sendmessage",{"_index":2939,"title":{},"body":{"injectables/TwillioService.html":{}}}],["sendmessage(to",{"_index":2945,"title":{},"body":{"injectables/TwillioService.html":{}}}],["sendphonenumberotp",{"_index":2607,"title":{},"body":{"injectables/SmsService.html":{}}}],["sendphonenumberotp(phonenumber",{"_index":2612,"title":{},"body":{"injectables/SmsService.html":{}}}],["sendtoall",{"_index":790,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["sendtouser",{"_index":791,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["sendtransfer",{"_index":96,"title":{"entities/SendTransfer.html":{}},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"entities/Wallet.html":{}}}],["sendtransferrepository",{"_index":2490,"title":{"classes/SendTransferRepository.html":{}},"body":{"classes/SendTransferRepository.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["senduser",{"_index":2363,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{}}}],["senduserid",{"_index":2364,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{}}}],["sendverificationcode",{"_index":1692,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendverificationcode(email",{"_index":1702,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendwallet",{"_index":2478,"title":{},"body":{"entities/SendTransfer.html":{}}}],["sendwalletid",{"_index":2479,"title":{},"body":{"entities/SendTransfer.html":{}}}],["sent",{"_index":2795,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["sentrequests",{"_index":1462,"title":{},"body":{"entities/Customer.html":{}}}],["senttransfers",{"_index":1463,"title":{},"body":{"entities/Customer.html":{},"entities/Wallet.html":{}}}],["server",{"_index":2794,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["service",{"_index":546,"title":{},"body":{"classes/Activity-1.html":{},"injectables/BankService.html":{},"injectables/NodemailerService.html":{},"injectables/TransactionsService.html":{}}}],["service_status",{"_index":2240,"title":{},"body":{"entities/PaymentMerchant.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["service_status.active",{"_index":2241,"title":{},"body":{"entities/PaymentMerchant.html":{}}}],["serviceid",{"_index":547,"title":{},"body":{"classes/Activity-1.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"injectables/VtpassService.html":{}}}],["services",{"_index":484,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/BankService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["services(servicesid",{"_index":2956,"title":{},"body":{"injectables/TwillioService.html":{}}}],["services.flutterwave",{"_index":1093,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["services.monnify",{"_index":1096,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["servicesettingstype",{"_index":1342,"title":{},"body":{"classes/CreateSettingDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"miscellaneous/typealiases.html":{}}}],["servicesid",{"_index":2952,"title":{},"body":{"injectables/TwillioService.html":{}}}],["servicessettings",{"_index":1080,"title":{},"body":{"injectables/BankService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{}}}],["servicessettings.bank_service",{"_index":1087,"title":{},"body":{"injectables/BankService.html":{},"injectables/SettingsService.html":{}}}],["servicessettings.transactions_service",{"_index":2805,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["servicestatus",{"_index":2238,"title":{},"body":{"entities/PaymentMerchant.html":{},"miscellaneous/typealiases.html":{}}}],["servicestype",{"_index":485,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity-1.html":{},"classes/CreateSettingDto.html":{},"entities/Setting.html":{},"miscellaneous/typealiases.html":{}}}],["serviceused",{"_index":2625,"title":{},"body":{"classes/Transaction.html":{}}}],["set",{"_index":1017,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata",{"_index":1295,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["setmetadata(check_ability",{"_index":1297,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":3728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setpin",{"_index":931,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["setpin(@request",{"_index":958,"title":{},"body":{"controllers/AuthController.html":{}}}],["setpin(email",{"_index":3152,"title":{},"body":{"injectables/UserService.html":{}}}],["setpin(req",{"_index":938,"title":{},"body":{"controllers/AuthController.html":{}}}],["setpindto",{"_index":939,"title":{"classes/SetPinDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/SetPinDTO.html":{}}}],["setrequestheaders",{"_index":2111,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["setrequestheaders(token",{"_index":2133,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["settimezone",{"_index":3644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settimezone(date",{"_index":3652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setting",{"_index":1595,"title":{"entities/Setting.html":{}},"body":{"modules/DatabaseModule.html":{},"entities/Setting.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{}}}],["setting.dto",{"_index":682,"title":{},"body":{"injectables/AdminService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UpdateSettingDto.html":{}}}],["setting.dto.ts",{"_index":1338,"title":{},"body":{"classes/CreateSettingDto.html":{},"classes/UpdateSettingDto.html":{}}}],["setting.dto.ts:13",{"_index":1341,"title":{},"body":{"classes/CreateSettingDto.html":{}}}],["setting.dto.ts:17",{"_index":1344,"title":{},"body":{"classes/CreateSettingDto.html":{}}}],["setting.dto.ts:9",{"_index":1343,"title":{},"body":{"classes/CreateSettingDto.html":{}}}],["settingname",{"_index":2529,"title":{},"body":{"controllers/SettingsController.html":{}}}],["settingrepository",{"_index":2562,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings",{"_index":2518,"title":{},"body":{"controllers/SettingsController.html":{}}}],["settings.controller",{"_index":2551,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.service",{"_index":2537,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings/settings.module",{"_index":870,"title":{},"body":{"modules/AppModule.html":{}}}],["settingscontroller",{"_index":2516,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingsmodule",{"_index":643,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/BankModule.html":{},"modules/SettingsModule.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"modules.html":{},"overview.html":{}}}],["settingsservice",{"_index":670,"title":{"injectables/SettingsService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/BankService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"overview.html":{}}}],["sgmail",{"_index":1707,"title":{},"body":{"injectables/EmailService.html":{}}}],["sgmail.setapikey(this.configservice.get('sendgrid_api_key",{"_index":1725,"title":{},"body":{"injectables/EmailService.html":{}}}],["showmax.dto",{"_index":3368,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["showmax.dto.ts",{"_index":1193,"title":{},"body":{"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:11",{"_index":1198,"title":{},"body":{"classes/BuyShowmaxDto.html":{}}}],["showmax.dto.ts:12",{"_index":1203,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:16",{"_index":1194,"title":{},"body":{"classes/BuyShowmaxDto.html":{}}}],["showmax.dto.ts:17",{"_index":1204,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:20",{"_index":1196,"title":{},"body":{"classes/BuyShowmaxDto.html":{}}}],["showmax.dto.ts:22",{"_index":1206,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:24",{"_index":1195,"title":{},"body":{"classes/BuyShowmaxDto.html":{}}}],["showmax.dto.ts:27",{"_index":1207,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:28",{"_index":1199,"title":{},"body":{"classes/BuyShowmaxDto.html":{}}}],["showmax.dto.ts:32",{"_index":1208,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:36",{"_index":1202,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:40",{"_index":1205,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:44",{"_index":1209,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["showmax.dto.ts:7",{"_index":1197,"title":{},"body":{"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["sign",{"_index":3734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":980,"title":{},"body":{"modules/AuthModule.html":{}}}],["sm",{"_index":2589,"title":{"classes/Sm.html":{}},"body":{"classes/Sm.html":{}}}],["smart",{"_index":3283,"title":{},"body":{"classes/VerifySmartCardDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["smile",{"_index":3288,"title":{},"body":{"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["sms",{"_index":2593,"title":{},"body":{"controllers/SmsController.html":{},"injectables/TwillioService.html":{}}}],["sms.controller",{"_index":2604,"title":{},"body":{"modules/SmsModule.html":{}}}],["sms.service",{"_index":2596,"title":{},"body":{"controllers/SmsController.html":{},"modules/SmsModule.html":{}}}],["sms/sms.module",{"_index":865,"title":{},"body":{"modules/AppModule.html":{}}}],["smscontroller",{"_index":2591,"title":{"controllers/SmsController.html":{}},"body":{"controllers/SmsController.html":{},"modules/SmsModule.html":{}}}],["smsmodule",{"_index":851,"title":{"modules/SmsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SmsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["smsservice",{"_index":2595,"title":{"injectables/SmsService.html":{}},"body":{"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"modules/AbilityModule.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"modules/AccountModule.html":{},"classes/AccountRepository.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"modules/AnnouncementModule.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AnnouncementReository.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/Bank.html":{},"controllers/BankController.html":{},"modules/BankModule.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateActivityDto.html":{},"classes/CreateAirtimeDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateElectricitybillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateHealthDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMerchantApiDto.html":{},"classes/CreateMobiledatumDto.html":{},"classes/CreateMonnifyDto.html":{},"classes/CreateNodemailerDto.html":{},"classes/CreatePaystackDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateTvsubscriptionDto.html":{},"classes/CreateTwillioDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserPermission.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/CreateVtpassDto.html":{},"classes/CreateWalletDto.html":{},"classes/CreateWithdrawalPermission.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/Flutterwave.html":{},"controllers/FlutterwaveController.html":{},"modules/FlutterwaveModule.html":{},"injectables/FlutterwaveService.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGaurd.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"classes/Monnify.html":{},"controllers/MonnifyController.html":{},"modules/MonnifyModule.html":{},"injectables/MonnifyService.html":{},"classes/Nodemailer.html":{},"modules/NodemailerModule.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"classes/Paystack.html":{},"controllers/PaystackController.html":{},"modules/PaystackModule.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"modules/ReferralModule.html":{},"classes/ReferralRepository.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"classes/SetPinDTO.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"classes/Sm.html":{},"controllers/SmsController.html":{},"modules/SmsModule.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/Twillio.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{}}}],["sourceaccountnumber",{"_index":2207,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["sourcenumber",{"_index":2205,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["space",{"_index":1924,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/.../abilities.decorator.ts",{"_index":3694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ability.factory.ts",{"_index":3684,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../account.service.ts",{"_index":3707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../account.type.ts",{"_index":3581,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../activities.type.ts",{"_index":3582,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../announcement.controller.ts",{"_index":3709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../announcement.service.ts",{"_index":3710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../announcement.type.ts",{"_index":3584,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../apisuccessresponse.ts",{"_index":3693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bank.service.ts",{"_index":3708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bills",{"_index":3685,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../config.service.ts",{"_index":3700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../currency.type.ts",{"_index":3586,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../get",{"_index":3642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../jwt",{"_index":3697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.service.ts",{"_index":3702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":3641,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ormconfig.ts",{"_index":3696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permissions.type.ts",{"_index":3592,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pin.gaurd.ts",{"_index":3704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../random",{"_index":3645,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../removekeyandpropertyfromobject.ts",{"_index":3705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.type.ts",{"_index":3583,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../service.type.ts",{"_index":3585,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../settings.type.ts",{"_index":3588,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../status.type.ts",{"_index":3587,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../transaction.type.ts",{"_index":3589,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../transactions.service.ts",{"_index":3711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../transfer.type.ts",{"_index":3591,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wallet.type.ts",{"_index":3593,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/ability/abilities.decorator",{"_index":608,"title":{},"body":{"controllers/AdminController.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{}}}],["src/ability/abilities.decorator.ts",{"_index":1290,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/variables.html":{}}}],["src/ability/abilities.decorator.ts:104",{"_index":2352,"title":{},"body":{"classes/ReadTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:105",{"_index":2353,"title":{},"body":{"classes/ReadTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:109",{"_index":1370,"title":{},"body":{"classes/CreateTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:110",{"_index":1371,"title":{},"body":{"classes/CreateTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:114",{"_index":1654,"title":{},"body":{"classes/EditTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:115",{"_index":1655,"title":{},"body":{"classes/EditTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:119",{"_index":1626,"title":{},"body":{"classes/DeleteTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:120",{"_index":1627,"title":{},"body":{"classes/DeleteTransferRequestPermission.html":{}}}],["src/ability/abilities.decorator.ts:129",{"_index":2356,"title":{},"body":{"classes/ReadWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:130",{"_index":2357,"title":{},"body":{"classes/ReadWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:134",{"_index":1406,"title":{},"body":{"classes/CreateWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:135",{"_index":1407,"title":{},"body":{"classes/CreateWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:139",{"_index":1658,"title":{},"body":{"classes/EditWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:140",{"_index":1659,"title":{},"body":{"classes/EditWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:144",{"_index":1630,"title":{},"body":{"classes/DeleteWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:145",{"_index":1631,"title":{},"body":{"classes/DeleteWithdrawalPermission.html":{}}}],["src/ability/abilities.decorator.ts:29",{"_index":2354,"title":{},"body":{"classes/ReadUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:30",{"_index":2355,"title":{},"body":{"classes/ReadUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:34",{"_index":1392,"title":{},"body":{"classes/CreateUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:35",{"_index":1393,"title":{},"body":{"classes/CreateUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:39",{"_index":1656,"title":{},"body":{"classes/EditUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:40",{"_index":1657,"title":{},"body":{"classes/EditUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:44",{"_index":1628,"title":{},"body":{"classes/DeleteUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:45",{"_index":1629,"title":{},"body":{"classes/DeleteUserPermission.html":{}}}],["src/ability/abilities.decorator.ts:54",{"_index":2350,"title":{},"body":{"classes/ReadSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:55",{"_index":2351,"title":{},"body":{"classes/ReadSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:59",{"_index":1336,"title":{},"body":{"classes/CreateSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:60",{"_index":1337,"title":{},"body":{"classes/CreateSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:64",{"_index":1652,"title":{},"body":{"classes/EditSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:65",{"_index":1653,"title":{},"body":{"classes/EditSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:69",{"_index":1624,"title":{},"body":{"classes/DeleteSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:70",{"_index":1625,"title":{},"body":{"classes/DeleteSendTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:79",{"_index":2348,"title":{},"body":{"classes/ReadReceiveTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:80",{"_index":2349,"title":{},"body":{"classes/ReadReceiveTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:84",{"_index":1293,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:85",{"_index":1294,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:89",{"_index":1650,"title":{},"body":{"classes/EditReceiveTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:90",{"_index":1651,"title":{},"body":{"classes/EditReceiveTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:94",{"_index":1622,"title":{},"body":{"classes/DeleteReceiveTransferPermission.html":{}}}],["src/ability/abilities.decorator.ts:95",{"_index":1623,"title":{},"body":{"classes/DeleteReceiveTransferPermission.html":{}}}],["src/ability/abilities.guard",{"_index":3078,"title":{},"body":{"controllers/UserController.html":{}}}],["src/ability/abilities.guard.ts",{"_index":6,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["src/ability/abilities.guard.ts:13",{"_index":17,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["src/ability/abilities.guard.ts:19",{"_index":25,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["src/ability/ability.factory.ts",{"_index":73,"title":{},"body":{"injectables/AbilityFactory.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/ability/ability.factory.ts:38",{"_index":76,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["src/ability/ability.module",{"_index":3114,"title":{},"body":{"modules/UserModule.html":{}}}],["src/ability/ability.module.ts",{"_index":144,"title":{},"body":{"modules/AbilityModule.html":{}}}],["src/account/account.controller.ts",{"_index":186,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/account/account.controller.ts:23",{"_index":195,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/account/account.controller.ts:34",{"_index":197,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/account/account.controller.ts:39",{"_index":196,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/account/account.module.ts",{"_index":230,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/account/account.service.ts",{"_index":247,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["src/account/account.service.ts:100",{"_index":277,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:144",{"_index":278,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:154",{"_index":280,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:169",{"_index":268,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:18",{"_index":262,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:30",{"_index":275,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:47",{"_index":272,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:62",{"_index":274,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:77",{"_index":265,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/account.service.ts:89",{"_index":270,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/dto/add",{"_index":577,"title":{},"body":{"classes/AddBankAccountDTO.html":{}}}],["src/account/dto/create",{"_index":609,"title":{},"body":{"controllers/AdminController.html":{},"classes/CreateAccountDto.html":{}}}],["src/account/dto/update",{"_index":2965,"title":{},"body":{"classes/UpdateAccountDto.html":{}}}],["src/account/dto/validate",{"_index":3260,"title":{},"body":{"classes/ValidateAccountDto.html":{}}}],["src/account/entities/account.entity",{"_index":1506,"title":{},"body":{"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/PaymentMerchant.html":{}}}],["src/account/entities/account.entity.ts",{"_index":150,"title":{},"body":{"entities/Account.html":{}}}],["src/account/entities/account.entity.ts:10",{"_index":161,"title":{},"body":{"entities/Account.html":{}}}],["src/account/entities/account.entity.ts:13",{"_index":163,"title":{},"body":{"entities/Account.html":{}}}],["src/account/entities/account.entity.ts:16",{"_index":162,"title":{},"body":{"entities/Account.html":{}}}],["src/account/entities/account.entity.ts:19",{"_index":173,"title":{},"body":{"entities/Account.html":{}}}],["src/account/entities/account.entity.ts:22",{"_index":171,"title":{},"body":{"entities/Account.html":{}}}],["src/account/entities/account.entity.ts:25",{"_index":169,"title":{},"body":{"entities/Account.html":{}}}],["src/account/entities/account.entity.ts:31",{"_index":167,"title":{},"body":{"entities/Account.html":{}}}],["src/account/repositories/account.repository.ts",{"_index":242,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/activities/activities.controller.ts",{"_index":359,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:27",{"_index":379,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:33",{"_index":383,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:39",{"_index":388,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:45",{"_index":372,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:51",{"_index":375,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:56",{"_index":391,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:61",{"_index":392,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:66",{"_index":395,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:71",{"_index":402,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.controller.ts:79",{"_index":398,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["src/activities/activities.module.ts",{"_index":448,"title":{},"body":{"modules/ActivitiesModule.html":{}}}],["src/activities/activities.service.ts",{"_index":464,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:135",{"_index":475,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:227",{"_index":476,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:28",{"_index":470,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:326",{"_index":471,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:42",{"_index":474,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:429",{"_index":472,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:532",{"_index":477,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:536",{"_index":478,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:540",{"_index":479,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:544",{"_index":481,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/activities.service.ts:548",{"_index":480,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/activities/dto/buy",{"_index":1131,"title":{},"body":{"classes/BuyAirtimeDto.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDataDto.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyShowmaxStartimesDto.html":{}}}],["src/activities/dto/create",{"_index":1237,"title":{},"body":{"classes/CreateActivityDto.html":{}}}],["src/activities/dto/update",{"_index":2970,"title":{},"body":{"classes/UpdateActivityDto.html":{}}}],["src/activities/entities/activity.entity.ts",{"_index":545,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:11",{"_index":564,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:14",{"_index":556,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:17",{"_index":566,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:20",{"_index":559,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:23",{"_index":565,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:26",{"_index":563,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:29",{"_index":558,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:32",{"_index":553,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:35",{"_index":554,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:38",{"_index":557,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:41",{"_index":562,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/activity.entity.ts:8",{"_index":555,"title":{},"body":{"classes/Activity-1.html":{}}}],["src/activities/entities/airtime",{"_index":708,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/Wallet.html":{}}}],["src/activities/entities/electricity",{"_index":1507,"title":{},"body":{"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/ElectricityBillActivity.html":{},"entities/Wallet.html":{}}}],["src/activities/entities/mobiledata",{"_index":1508,"title":{},"body":{"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/MobileDataActivity.html":{},"entities/Wallet.html":{}}}],["src/activities/entities/tv",{"_index":1509,"title":{},"body":{"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{}}}],["src/activities/repositories/airtime",{"_index":721,"title":{},"body":{"classes/AirtimeActivityRepository.html":{}}}],["src/activities/repositories/electricity",{"_index":1662,"title":{},"body":{"classes/ElectricityBillActivityRepository.html":{}}}],["src/activities/repositories/mobile",{"_index":2081,"title":{},"body":{"classes/MobileDataActivityRepository.html":{}}}],["src/activities/repositories/tv",{"_index":2920,"title":{},"body":{"classes/TvSubscriptionActivityRepository.html":{}}}],["src/admin/admin.controller.ts",{"_index":591,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:23",{"_index":598,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:29",{"_index":603,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:47",{"_index":606,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:54",{"_index":601,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.module.ts",{"_index":645,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.service.ts",{"_index":667,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:16",{"_index":672,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:28",{"_index":675,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:43",{"_index":677,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:86",{"_index":678,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:94",{"_index":676,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/entities/activity.entity.ts",{"_index":520,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:12",{"_index":526,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:15",{"_index":527,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:18",{"_index":531,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:21",{"_index":530,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:24",{"_index":534,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:27",{"_index":535,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:30",{"_index":529,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:33",{"_index":533,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/activity.entity.ts:9",{"_index":532,"title":{},"body":{"classes/Activity.html":{}}}],["src/admin/entities/admin.entity",{"_index":1601,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/SeedingMiddleware.html":{}}}],["src/admin/entities/admin.entity.ts",{"_index":586,"title":{},"body":{"entities/Admin.html":{}}}],["src/admin/entities/admin.entity.ts:8",{"_index":589,"title":{},"body":{"entities/Admin.html":{}}}],["src/admin/repositories/admin.repository.ts",{"_index":653,"title":{},"body":{"classes/AdminRepository.html":{}}}],["src/admin/repositories/admin.repository.ts:10",{"_index":660,"title":{},"body":{"classes/AdminRepository.html":{}}}],["src/admin/repositories/admin.repository.ts:14",{"_index":662,"title":{},"body":{"classes/AdminRepository.html":{}}}],["src/admin/repositories/admin.repository.ts:6",{"_index":658,"title":{},"body":{"classes/AdminRepository.html":{}}}],["src/airtime/dto/buy",{"_index":1143,"title":{},"body":{"classes/BuyAirtimeDto-1.html":{}}}],["src/airtime/dto/create",{"_index":1240,"title":{},"body":{"classes/CreateAirtimeDto.html":{}}}],["src/airtime/dto/update",{"_index":2973,"title":{},"body":{"classes/UpdateAirtimeDto.html":{}}}],["src/airtime/dto/validate",{"_index":3264,"title":{},"body":{"classes/ValidateAirtimeDto.html":{}}}],["src/announcement/announcement.controller.ts",{"_index":740,"title":{},"body":{"controllers/AnnouncementController.html":{},"miscellaneous/variables.html":{}}}],["src/announcement/announcement.controller.ts:35",{"_index":754,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["src/announcement/announcement.controller.ts:59",{"_index":746,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["src/announcement/announcement.controller.ts:66",{"_index":757,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["src/announcement/announcement.controller.ts:72",{"_index":750,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["src/announcement/announcement.module.ts",{"_index":795,"title":{},"body":{"modules/AnnouncementModule.html":{}}}],["src/announcement/announcement.service.ts",{"_index":810,"title":{},"body":{"injectables/AnnouncementService.html":{},"miscellaneous/variables.html":{}}}],["src/announcement/announcement.service.ts:17",{"_index":812,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["src/announcement/announcement.service.ts:25",{"_index":819,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["src/announcement/announcement.service.ts:54",{"_index":815,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["src/announcement/announcement.service.ts:76",{"_index":821,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["src/announcement/announcement.service.ts:80",{"_index":817,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["src/announcement/dto/create",{"_index":802,"title":{},"body":{"classes/AnnouncementQueryDto.html":{},"classes/CreateAnnouncementDto.html":{}}}],["src/announcement/dto/update",{"_index":2975,"title":{},"body":{"classes/UpdateAnnouncementDto.html":{}}}],["src/announcement/entities/announcement.entity.ts",{"_index":725,"title":{},"body":{"entities/Announcement.html":{}}}],["src/announcement/entities/announcement.entity.ts:11",{"_index":735,"title":{},"body":{"entities/Announcement.html":{}}}],["src/announcement/entities/announcement.entity.ts:14",{"_index":734,"title":{},"body":{"entities/Announcement.html":{}}}],["src/announcement/entities/announcement.entity.ts:17",{"_index":733,"title":{},"body":{"entities/Announcement.html":{}}}],["src/announcement/entities/announcement.entity.ts:20",{"_index":730,"title":{},"body":{"entities/Announcement.html":{}}}],["src/announcement/entities/announcement.entity.ts:23",{"_index":731,"title":{},"body":{"entities/Announcement.html":{}}}],["src/announcement/repositories/announcement.repository.ts",{"_index":807,"title":{},"body":{"classes/AnnouncementReository.html":{}}}],["src/app.module.ts",{"_index":854,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":928,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":937,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":934,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":941,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":966,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":2003,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["src/auth/auth.service.ts",{"_index":983,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:14",{"_index":996,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:46",{"_index":994,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":992,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":988,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:98",{"_index":990,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":1244,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["src/auth/dto/set",{"_index":2494,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["src/auth/dto/update",{"_index":2978,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":926,"title":{},"body":{"classes/Auth.html":{}}}],["src/bank/bank.controller.ts",{"_index":1051,"title":{},"body":{"controllers/BankController.html":{}}}],["src/bank/bank.module",{"_index":649,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/bank/bank.module.ts",{"_index":1068,"title":{},"body":{"modules/BankModule.html":{}}}],["src/bank/bank.service",{"_index":679,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/bank/bank.service.ts",{"_index":1070,"title":{},"body":{"injectables/BankService.html":{},"miscellaneous/variables.html":{}}}],["src/bank/bank.service.ts:24",{"_index":1075,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/bank.service.ts:76",{"_index":1077,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/bank.service.ts:87",{"_index":1078,"title":{},"body":{"injectables/BankService.html":{}}}],["src/bank/dto/verify",{"_index":3270,"title":{},"body":{"classes/VerifyAccountNumberDto.html":{},"classes/VerifyBvnDto.html":{}}}],["src/bank/entities/bank.entity.ts",{"_index":1049,"title":{},"body":{"classes/Bank.html":{}}}],["src/common/containers/container.entity",{"_index":2898,"title":{},"body":{"injectables/TransfersService.html":{},"injectables/WalletService.html":{}}}],["src/common/containers/container.entity.ts",{"_index":2437,"title":{},"body":{"interfaces/ReturnTypeContainer.html":{}}}],["src/common/decorators/jwt",{"_index":610,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AnnouncementController.html":{},"controllers/AuthController.html":{},"controllers/FlutterwaveController.html":{},"controllers/TransactionsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["src/common/gaurds/jwt",{"_index":404,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGaurd.html":{},"controllers/SmsController.html":{},"controllers/UserController.html":{}}}],["src/common/gaurds/local",{"_index":945,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGaurd.html":{}}}],["src/common/gaurds/pin.gaurd.ts",{"_index":3735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/common/strategy/jwt.strategy",{"_index":974,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/strategy/jwt.strategy.ts",{"_index":1977,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/strategy/jwt.strategy.ts:21",{"_index":1981,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/strategy/jwt.strategy.ts:9",{"_index":1979,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/strategy/local.strategy",{"_index":973,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/strategy/local.strategy.ts",{"_index":1996,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/strategy/local.strategy.ts:12",{"_index":2000,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/strategy/local.strategy.ts:7",{"_index":1998,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/types/account.type",{"_index":174,"title":{},"body":{"entities/Account.html":{},"injectables/AccountService.html":{}}}],["src/common/types/account.type.ts",{"_index":3594,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/activities.type",{"_index":718,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/TvSubscriptionActivity.html":{}}}],["src/common/types/activities.type.ts",{"_index":3597,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/announcement.type",{"_index":737,"title":{},"body":{"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"classes/CreateAnnouncementDto.html":{}}}],["src/common/types/announcement.type.ts",{"_index":3610,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/currency.type",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{},"injectables/FlutterwaveService.html":{},"entities/ReceiveTransfer.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{},"entities/TransferRequest.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{}}}],["src/common/types/currency.type.ts",{"_index":3612,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/entity",{"_index":176,"title":{},"body":{"entities/Account.html":{},"classes/Activity-1.html":{},"entities/Announcement.html":{},"entities/CustomerKyc.html":{},"entities/Merchant.html":{},"entities/PaymentMerchant.html":{},"entities/Referral.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{},"entities/Wallet.html":{}}}],["src/common/types/entity.ts",{"_index":1728,"title":{},"body":{"classes/EntityContainer.html":{}}}],["src/common/types/entity.ts:12",{"_index":1729,"title":{},"body":{"classes/EntityContainer.html":{}}}],["src/common/types/entity.ts:15",{"_index":1731,"title":{},"body":{"classes/EntityContainer.html":{}}}],["src/common/types/entity.ts:9",{"_index":1730,"title":{},"body":{"classes/EntityContainer.html":{}}}],["src/common/types/permissions.type",{"_index":85,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["src/common/types/permissions.type.ts",{"_index":3637,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/response.type.ts",{"_index":836,"title":{},"body":{"interfaces/ApiSuccessResponse.html":{}}}],["src/common/types/roles.type",{"_index":88,"title":{},"body":{"injectables/AbilityFactory.html":{},"entities/Admin.html":{},"injectables/AuthService.html":{},"entities/Customer.html":{},"injectables/SeedingMiddleware.html":{},"injectables/UserService.html":{}}}],["src/common/types/roles.type.ts",{"_index":3602,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/service.type",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"classes/Activity-1.html":{},"injectables/BankService.html":{},"classes/CreateSettingDto.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["src/common/types/service.type.ts",{"_index":3611,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/settings.type",{"_index":1081,"title":{},"body":{"injectables/BankService.html":{},"classes/CreateSettingDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{}}}],["src/common/types/settings.type.ts",{"_index":3624,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/status.type",{"_index":574,"title":{},"body":{"classes/Activity-1.html":{},"entities/CustomerKyc.html":{},"injectables/MonnifyService.html":{},"entities/PaymentMerchant.html":{},"classes/Transaction.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{}}}],["src/common/types/status.type.ts",{"_index":3614,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/transaction.type",{"_index":1639,"title":{},"body":{"entities/Deposit.html":{},"classes/Transaction.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"entities/Withdrawal.html":{}}}],["src/common/types/transaction.type.ts",{"_index":3633,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/transfer.type",{"_index":2377,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{}}}],["src/common/types/transfer.type.ts",{"_index":3636,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/types/wallet.type",{"_index":3163,"title":{},"body":{"injectables/UserService.html":{},"entities/Wallet.html":{},"injectables/WalletService.html":{}}}],["src/common/types/wallet.type.ts",{"_index":3638,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/database/database",{"_index":1556,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/database/database.module.ts",{"_index":1592,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/electricitybill/dto/buy",{"_index":1184,"title":{},"body":{"classes/BuyElectricityDto-1.html":{}}}],["src/electricitybill/dto/create",{"_index":1255,"title":{},"body":{"classes/CreateElectricitybillDto.html":{}}}],["src/electricitybill/dto/update",{"_index":2982,"title":{},"body":{"classes/UpdateElectricitybillDto.html":{}}}],["src/email/dto/create",{"_index":1258,"title":{},"body":{"classes/CreateEmailDto.html":{}}}],["src/email/dto/update",{"_index":2984,"title":{},"body":{"classes/UpdateEmailDto.html":{}}}],["src/email/email.controller.ts",{"_index":1670,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/email/email.controller.ts:18",{"_index":1671,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/email/email.module",{"_index":3112,"title":{},"body":{"modules/UserModule.html":{}}}],["src/email/email.module.ts",{"_index":1682,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/email/email.service",{"_index":3159,"title":{},"body":{"injectables/UserService.html":{}}}],["src/email/email.service.ts",{"_index":1689,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:18",{"_index":1695,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:23",{"_index":1701,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:27",{"_index":1703,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:58",{"_index":1705,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:85",{"_index":1698,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:89",{"_index":1699,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/entities/email.entity.ts",{"_index":1664,"title":{},"body":{"entities/Email.html":{}}}],["src/email/entities/email.entity.ts:12",{"_index":1666,"title":{},"body":{"entities/Email.html":{}}}],["src/email/entities/email.entity.ts:6",{"_index":1668,"title":{},"body":{"entities/Email.html":{}}}],["src/email/entities/email.entity.ts:9",{"_index":1667,"title":{},"body":{"entities/Email.html":{}}}],["src/flutterwave/dto/authorize",{"_index":1042,"title":{},"body":{"classes/AuthorizeDepositDto.html":{}}}],["src/flutterwave/dto/create",{"_index":1247,"title":{},"body":{"classes/CreateBillDto.html":{},"classes/CreateReservedAccountDto.html":{},"injectables/TransactionsService.html":{}}}],["src/flutterwave/dto/initiate",{"_index":1937,"title":{},"body":{"classes/InitiateDepositDto.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["src/flutterwave/dto/ussd",{"_index":3258,"title":{},"body":{"classes/UssdDepositDto.html":{}}}],["src/flutterwave/dto/validate",{"_index":3268,"title":{},"body":{"classes/ValidateDepositDto.html":{}}}],["src/flutterwave/entities/flutterwave.entity.ts",{"_index":1748,"title":{},"body":{"classes/Flutterwave.html":{}}}],["src/flutterwave/flutterwave.controller.ts",{"_index":1750,"title":{},"body":{"controllers/FlutterwaveController.html":{}}}],["src/flutterwave/flutterwave.controller.ts:21",{"_index":1752,"title":{},"body":{"controllers/FlutterwaveController.html":{}}}],["src/flutterwave/flutterwave.module",{"_index":235,"title":{},"body":{"modules/AccountModule.html":{},"modules/AdminModule.html":{},"modules/BankModule.html":{},"modules/TransactionsModule.html":{}}}],["src/flutterwave/flutterwave.module.ts",{"_index":1760,"title":{},"body":{"modules/FlutterwaveModule.html":{}}}],["src/flutterwave/flutterwave.service",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["src/flutterwave/flutterwave.service.ts",{"_index":1764,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:24",{"_index":1783,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:25",{"_index":1785,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:26",{"_index":1784,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:27",{"_index":1781,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:28",{"_index":1782,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:29",{"_index":1774,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:45",{"_index":1780,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:55",{"_index":1777,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/flutterwave.service.ts:63",{"_index":1775,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["src/flutterwave/interfaces/bills",{"_index":3688,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/flutterwave/interfaces/deposits.interface.ts",{"_index":1019,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/UssdDepositData.html":{}}}],["src/flutterwave/interfaces/deposits.interface.ts:14",{"_index":3252,"title":{},"body":{"classes/UssdDepositData.html":{}}}],["src/flutterwave/interfaces/deposits.interface.ts:8",{"_index":1027,"title":{},"body":{"classes/AuthorizeDepositData.html":{}}}],["src/flutterwave/interfaces/withdrawal.interface.ts",{"_index":1956,"title":{},"body":{"classes/InitiateWithdrawalData.html":{}}}],["src/health/dto/create",{"_index":1268,"title":{},"body":{"classes/CreateHealthDto.html":{}}}],["src/health/dto/update",{"_index":2987,"title":{},"body":{"classes/UpdateHealthDto.html":{}}}],["src/health/entities/health.entity.ts",{"_index":1891,"title":{},"body":{"classes/Health.html":{}}}],["src/health/health.controller.ts",{"_index":1893,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:21",{"_index":1896,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":1928,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/log/custom",{"_index":1409,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["src/log/dto/create",{"_index":1271,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["src/log/dto/update",{"_index":2990,"title":{},"body":{"classes/UpdateLogDto.html":{}}}],["src/log/entities/log.entity",{"_index":1597,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/log/entities/log.entity.ts",{"_index":2006,"title":{},"body":{"entities/Log.html":{}}}],["src/log/entities/log.entity.ts:11",{"_index":2010,"title":{},"body":{"entities/Log.html":{}}}],["src/log/entities/log.entity.ts:14",{"_index":2008,"title":{},"body":{"entities/Log.html":{}}}],["src/log/entities/log.entity.ts:17",{"_index":2012,"title":{},"body":{"entities/Log.html":{}}}],["src/log/entities/log.entity.ts:20",{"_index":2011,"title":{},"body":{"entities/Log.html":{}}}],["src/log/entities/log.entity.ts:23",{"_index":2009,"title":{},"body":{"entities/Log.html":{}}}],["src/log/log.controller.ts",{"_index":2014,"title":{},"body":{"controllers/LogController.html":{}}}],["src/log/log.module.ts",{"_index":2022,"title":{},"body":{"modules/LogModule.html":{}}}],["src/log/log.service",{"_index":1437,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["src/log/log.service.ts",{"_index":2027,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:15",{"_index":2033,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:9",{"_index":2030,"title":{},"body":{"injectables/LogService.html":{}}}],["src/main.ts",{"_index":3648,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/merchant",{"_index":1274,"title":{},"body":{"classes/CreateMerchantApiDto.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"modules/MerchantApiModule.html":{},"injectables/MerchantApiService.html":{},"classes/UpdateMerchantApiDto.html":{}}}],["src/migrations",{"_index":1618,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["src/mobiledata/dto/buy",{"_index":1172,"title":{},"body":{"classes/BuyDataDto-1.html":{}}}],["src/mobiledata/dto/create",{"_index":1278,"title":{},"body":{"classes/CreateMobiledatumDto.html":{}}}],["src/mobiledata/dto/update",{"_index":2995,"title":{},"body":{"classes/UpdateMobiledatumDto.html":{}}}],["src/monnify/dto/create",{"_index":1281,"title":{},"body":{"classes/CreateMonnifyDto.html":{},"classes/CreateReservedAccountDto-1.html":{}}}],["src/monnify/dto/initiate",{"_index":1946,"title":{},"body":{"classes/InitiateMNTransferDto.html":{},"injectables/TransactionsService.html":{}}}],["src/monnify/dto/update",{"_index":2998,"title":{},"body":{"classes/UpdateMonnifyDto.html":{}}}],["src/monnify/entities/monnify.entity.ts",{"_index":2083,"title":{},"body":{"classes/Monnify.html":{}}}],["src/monnify/monnify.controller.ts",{"_index":2085,"title":{},"body":{"controllers/MonnifyController.html":{}}}],["src/monnify/monnify.module",{"_index":236,"title":{},"body":{"modules/AccountModule.html":{},"modules/BankModule.html":{},"modules/TransactionsModule.html":{}}}],["src/monnify/monnify.module.ts",{"_index":2094,"title":{},"body":{"modules/MonnifyModule.html":{}}}],["src/monnify/monnify.service",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["src/monnify/monnify.service.ts",{"_index":2096,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:162",{"_index":2120,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:18",{"_index":2139,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:188",{"_index":2138,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:19",{"_index":2114,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:217",{"_index":2117,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:249",{"_index":2119,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:278",{"_index":2122,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:30",{"_index":2142,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:308",{"_index":2130,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:31",{"_index":2145,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:32",{"_index":2144,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:33",{"_index":2141,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:34",{"_index":2140,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:340",{"_index":2126,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:35",{"_index":2143,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:369",{"_index":2132,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:37",{"_index":2134,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:395",{"_index":2124,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:424",{"_index":2136,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:45",{"_index":2115,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/monnify/monnify.service.ts:98",{"_index":2128,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["src/nodemailer/dto/create",{"_index":1284,"title":{},"body":{"classes/CreateNodemailerDto.html":{}}}],["src/nodemailer/dto/update",{"_index":3001,"title":{},"body":{"classes/UpdateNodemailerDto.html":{}}}],["src/nodemailer/entities/nodemailer.entity.ts",{"_index":2215,"title":{},"body":{"classes/Nodemailer.html":{}}}],["src/nodemailer/nodemailer.module",{"_index":1683,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/nodemailer/nodemailer.module.ts",{"_index":2219,"title":{},"body":{"modules/NodemailerModule.html":{}}}],["src/nodemailer/nodemailer.service",{"_index":1685,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{}}}],["src/nodemailer/nodemailer.service.ts",{"_index":2221,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["src/nodemailer/nodemailer.service.ts:18",{"_index":2225,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["src/nodemailer/nodemailer.service.ts:7",{"_index":2223,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["src/ormconfig.ts",{"_index":3713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/paystack/dto/create",{"_index":1287,"title":{},"body":{"classes/CreatePaystackDto.html":{},"classes/CreateTransferRecipientDto.html":{}}}],["src/paystack/dto/finalize",{"_index":1742,"title":{},"body":{"classes/FinalizeWithdrawalDto.html":{}}}],["src/paystack/dto/initialize",{"_index":1932,"title":{},"body":{"classes/InitializeWithdrawalDto.html":{}}}],["src/paystack/dto/update",{"_index":3004,"title":{},"body":{"classes/UpdatePaystackDto.html":{}}}],["src/paystack/dto/verify",{"_index":3272,"title":{},"body":{"classes/VerifyAccountNumberDto-1.html":{}}}],["src/paystack/entities/paystack.entity.ts",{"_index":2243,"title":{},"body":{"classes/Paystack.html":{}}}],["src/paystack/paystack.controller.ts",{"_index":2245,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:23",{"_index":2252,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:28",{"_index":2255,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:37",{"_index":2266,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:42",{"_index":2258,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:47",{"_index":2263,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:52",{"_index":2272,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:58",{"_index":2260,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:63",{"_index":2261,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:68",{"_index":2269,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.controller.ts:76",{"_index":2267,"title":{},"body":{"controllers/PaystackController.html":{}}}],["src/paystack/paystack.module.ts",{"_index":2297,"title":{},"body":{"modules/PaystackModule.html":{}}}],["src/paystack/paystack.service",{"_index":2682,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["src/paystack/paystack.service.ts",{"_index":2299,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:107",{"_index":2316,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:131",{"_index":2310,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:148",{"_index":2319,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:16",{"_index":2323,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:166",{"_index":2307,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:17",{"_index":2322,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:170",{"_index":2311,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:174",{"_index":2312,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:178",{"_index":2318,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:18",{"_index":2305,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:182",{"_index":2317,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:34",{"_index":2306,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:50",{"_index":2314,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:69",{"_index":2321,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/paystack/paystack.service.ts:88",{"_index":2308,"title":{},"body":{"injectables/PaystackService.html":{}}}],["src/referral/dto/create",{"_index":1320,"title":{},"body":{"classes/CreateReferralDto.html":{}}}],["src/referral/dto/update",{"_index":3006,"title":{},"body":{"classes/UpdateReferralDto.html":{}}}],["src/referral/entities/referral.entity",{"_index":1511,"title":{},"body":{"entities/Customer.html":{},"modules/DatabaseModule.html":{},"injectables/UserService.html":{}}}],["src/referral/entities/referral.entity.ts",{"_index":2384,"title":{},"body":{"entities/Referral.html":{}}}],["src/referral/entities/referral.entity.ts:11",{"_index":2390,"title":{},"body":{"entities/Referral.html":{}}}],["src/referral/entities/referral.entity.ts:14",{"_index":2387,"title":{},"body":{"entities/Referral.html":{}}}],["src/referral/entities/referral.entity.ts:17",{"_index":2391,"title":{},"body":{"entities/Referral.html":{}}}],["src/referral/entities/referral.entity.ts:8",{"_index":2389,"title":{},"body":{"entities/Referral.html":{}}}],["src/referral/referral.controller.ts",{"_index":2393,"title":{},"body":{"controllers/ReferralController.html":{}}}],["src/referral/referral.controller.ts:19",{"_index":2395,"title":{},"body":{"controllers/ReferralController.html":{}}}],["src/referral/referral.controller.ts:24",{"_index":2396,"title":{},"body":{"controllers/ReferralController.html":{}}}],["src/referral/referral.controller.ts:29",{"_index":2397,"title":{},"body":{"controllers/ReferralController.html":{}}}],["src/referral/referral.controller.ts:34",{"_index":2400,"title":{},"body":{"controllers/ReferralController.html":{}}}],["src/referral/referral.controller.ts:42",{"_index":2398,"title":{},"body":{"controllers/ReferralController.html":{}}}],["src/referral/referral.module",{"_index":3113,"title":{},"body":{"modules/UserModule.html":{}}}],["src/referral/referral.module.ts",{"_index":2413,"title":{},"body":{"modules/ReferralModule.html":{}}}],["src/referral/referral.service",{"_index":3161,"title":{},"body":{"injectables/UserService.html":{}}}],["src/referral/referral.service.ts",{"_index":2421,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/referral.service.ts:14",{"_index":2427,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/referral.service.ts:26",{"_index":2425,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/referral.service.ts:30",{"_index":2428,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/referral.service.ts:34",{"_index":2429,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/referral.service.ts:38",{"_index":2431,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/referral.service.ts:42",{"_index":2430,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/referral.service.ts:8",{"_index":2424,"title":{},"body":{"injectables/ReferralService.html":{}}}],["src/referral/repositories/referral.repository.ts",{"_index":2419,"title":{},"body":{"classes/ReferralRepository.html":{}}}],["src/role/dto/create",{"_index":1334,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/role/dto/update",{"_index":3009,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["src/seeding/entities/seeding.entity",{"_index":1603,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/seeding/entities/seeding.entity.ts",{"_index":2438,"title":{},"body":{"entities/SeedingLogEntry.html":{}}}],["src/seeding/entities/seeding.entity.ts:11",{"_index":2440,"title":{},"body":{"entities/SeedingLogEntry.html":{}}}],["src/seeding/entities/seeding.entity.ts:14",{"_index":2441,"title":{},"body":{"entities/SeedingLogEntry.html":{}}}],["src/seeding/entities/seeding.entity.ts:17",{"_index":2439,"title":{},"body":{"entities/SeedingLogEntry.html":{}}}],["src/seeding/seeding.middleware.ts",{"_index":2445,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["src/seeding/seeding.middleware.ts:10",{"_index":2449,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["src/seeding/seeding.middleware.ts:14",{"_index":2452,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["src/seeding/seeding.module.ts",{"_index":2470,"title":{},"body":{"modules/SeedingModule.html":{}}}],["src/seeding/seeding.module.ts:6",{"_index":2474,"title":{},"body":{"modules/SeedingModule.html":{}}}],["src/settings/dto/create",{"_index":681,"title":{},"body":{"injectables/AdminService.html":{},"classes/CreateSettingDto.html":{}}}],["src/settings/dto/update",{"_index":684,"title":{},"body":{"injectables/AdminService.html":{},"classes/UpdateSettingDto.html":{}}}],["src/settings/entities/payment",{"_index":177,"title":{},"body":{"entities/Account.html":{},"modules/DatabaseModule.html":{},"entities/PaymentMerchant.html":{}}}],["src/settings/entities/setting.entity",{"_index":1596,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/settings/entities/setting.entity.ts",{"_index":2507,"title":{},"body":{"entities/Setting.html":{}}}],["src/settings/entities/setting.entity.ts:13",{"_index":2511,"title":{},"body":{"entities/Setting.html":{}}}],["src/settings/entities/setting.entity.ts:16",{"_index":2513,"title":{},"body":{"entities/Setting.html":{}}}],["src/settings/entities/setting.entity.ts:19",{"_index":2515,"title":{},"body":{"entities/Setting.html":{}}}],["src/settings/entities/setting.entity.ts:22",{"_index":2512,"title":{},"body":{"entities/Setting.html":{}}}],["src/settings/entities/setting.entity.ts:25",{"_index":2510,"title":{},"body":{"entities/Setting.html":{}}}],["src/settings/entities/setting.entity.ts:28",{"_index":2514,"title":{},"body":{"entities/Setting.html":{}}}],["src/settings/settings.controller.ts",{"_index":2517,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:19",{"_index":2530,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:24",{"_index":2533,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:29",{"_index":2525,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:34",{"_index":2536,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:42",{"_index":2528,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.module",{"_index":647,"title":{},"body":{"modules/AdminModule.html":{},"modules/BankModule.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{}}}],["src/settings/settings.module.ts",{"_index":2550,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.service",{"_index":685,"title":{},"body":{"injectables/AdminService.html":{},"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["src/settings/settings.service.ts",{"_index":2554,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:20",{"_index":2561,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:25",{"_index":2569,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:33",{"_index":2567,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:37",{"_index":2564,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:52",{"_index":2571,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:74",{"_index":2566,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/sms/dto/confirm",{"_index":1225,"title":{},"body":{"classes/ConfirmPhoneNumberDto.html":{}}}],["src/sms/entities/sm.entity.ts",{"_index":2590,"title":{},"body":{"classes/Sm.html":{}}}],["src/sms/sms.controller.ts",{"_index":2592,"title":{},"body":{"controllers/SmsController.html":{}}}],["src/sms/sms.module",{"_index":3111,"title":{},"body":{"modules/UserModule.html":{}}}],["src/sms/sms.module.ts",{"_index":2603,"title":{},"body":{"modules/SmsModule.html":{}}}],["src/sms/sms.service",{"_index":3158,"title":{},"body":{"injectables/UserService.html":{}}}],["src/sms/sms.service.ts",{"_index":2606,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:13",{"_index":2611,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:16",{"_index":2613,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/sms/sms.service.ts:26",{"_index":2616,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/transactions/dto/create",{"_index":1347,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/CreateVirtualAccountDto.html":{},"injectables/PaystackService.html":{}}}],["src/transactions/dto/transaction",{"_index":2648,"title":{},"body":{"classes/TransactionQueryDto.html":{}}}],["src/transactions/dto/update",{"_index":3013,"title":{},"body":{"classes/UpdateTransactionDto.html":{}}}],["src/transactions/dto/verify",{"_index":3296,"title":{},"body":{"classes/VerifyTransactionDto.html":{}}}],["src/transactions/dto/withdrawal.dto.ts",{"_index":1733,"title":{},"body":{"classes/FWWithdrawalDto.html":{}}}],["src/transactions/dto/withdrawal.dto.ts:10",{"_index":1737,"title":{},"body":{"classes/FWWithdrawalDto.html":{}}}],["src/transactions/dto/withdrawal.dto.ts:14",{"_index":1738,"title":{},"body":{"classes/FWWithdrawalDto.html":{}}}],["src/transactions/dto/withdrawal.dto.ts:18",{"_index":1739,"title":{},"body":{"classes/FWWithdrawalDto.html":{}}}],["src/transactions/dto/withdrawal.dto.ts:22",{"_index":1740,"title":{},"body":{"classes/FWWithdrawalDto.html":{}}}],["src/transactions/dto/withdrawal.dto.ts:6",{"_index":1736,"title":{},"body":{"classes/FWWithdrawalDto.html":{}}}],["src/transactions/entities/deposit.entity",{"_index":1600,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/transactions/entities/deposit.entity.ts",{"_index":1632,"title":{},"body":{"entities/Deposit.html":{}}}],["src/transactions/entities/deposit.entity.ts:13",{"_index":1636,"title":{},"body":{"entities/Deposit.html":{}}}],["src/transactions/entities/deposit.entity.ts:16",{"_index":1638,"title":{},"body":{"entities/Deposit.html":{}}}],["src/transactions/entities/deposit.entity.ts:19",{"_index":1634,"title":{},"body":{"entities/Deposit.html":{}}}],["src/transactions/entities/transaction.entity",{"_index":90,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"injectables/WalletService.html":{}}}],["src/transactions/entities/transaction.entity.ts",{"_index":2621,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:10",{"_index":2629,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:13",{"_index":2628,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:16",{"_index":2626,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:19",{"_index":2632,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:22",{"_index":2636,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:25",{"_index":2637,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:28",{"_index":2640,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:31",{"_index":2639,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:34",{"_index":2641,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:37",{"_index":2642,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:40",{"_index":2630,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:43",{"_index":2638,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:46",{"_index":2631,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:49",{"_index":2627,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:52",{"_index":2634,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/transaction.entity.ts:55",{"_index":2633,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transactions/entities/withdrawal.entity",{"_index":92,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"entities/Wallet.html":{}}}],["src/transactions/entities/withdrawal.entity.ts",{"_index":3534,"title":{},"body":{"entities/Withdrawal.html":{}}}],["src/transactions/entities/withdrawal.entity.ts:13",{"_index":3536,"title":{},"body":{"entities/Withdrawal.html":{}}}],["src/transactions/entities/withdrawal.entity.ts:16",{"_index":3537,"title":{},"body":{"entities/Withdrawal.html":{}}}],["src/transactions/entities/withdrawal.entity.ts:19",{"_index":3535,"title":{},"body":{"entities/Withdrawal.html":{}}}],["src/transactions/repositories/deposit.repository.ts",{"_index":1643,"title":{},"body":{"classes/DepositRepository.html":{}}}],["src/transactions/repositories/deposit.repository.ts:7",{"_index":1646,"title":{},"body":{"classes/DepositRepository.html":{}}}],["src/transactions/repositories/withdrawal.repository.ts",{"_index":3538,"title":{},"body":{"classes/WithdrawalRepository.html":{}}}],["src/transactions/repositories/withdrawal.repository.ts:6",{"_index":3539,"title":{},"body":{"classes/WithdrawalRepository.html":{}}}],["src/transactions/transactions.controller.ts",{"_index":2653,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["src/transactions/transactions.controller.ts:114",{"_index":2674,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["src/transactions/transactions.controller.ts:142",{"_index":2671,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["src/transactions/transactions.controller.ts:40",{"_index":2663,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["src/transactions/transactions.controller.ts:51",{"_index":2679,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["src/transactions/transactions.controller.ts:60",{"_index":2665,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["src/transactions/transactions.controller.ts:86",{"_index":2668,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["src/transactions/transactions.module",{"_index":648,"title":{},"body":{"modules/AdminModule.html":{},"modules/UserModule.html":{}}}],["src/transactions/transactions.module.ts",{"_index":2710,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["src/transactions/transactions.service",{"_index":686,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/transactions/transactions.service.ts",{"_index":2716,"title":{},"body":{"injectables/TransactionsService.html":{},"miscellaneous/variables.html":{}}}],["src/transactions/transactions.service.ts:178",{"_index":2729,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:239",{"_index":2733,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:262",{"_index":2728,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:280",{"_index":2727,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:299",{"_index":2726,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:354",{"_index":2731,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:409",{"_index":2724,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transactions/transactions.service.ts:55",{"_index":2722,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["src/transfers/dto/create",{"_index":1354,"title":{},"body":{"classes/CreateTransferDto.html":{}}}],["src/transfers/dto/update",{"_index":3015,"title":{},"body":{"classes/UpdateTransferDto.html":{}}}],["src/transfers/entities/receive",{"_index":94,"title":{},"body":{"injectables/AbilityFactory.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/ReceiveTransfer.html":{},"entities/Wallet.html":{}}}],["src/transfers/entities/send",{"_index":97,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"entities/SendTransfer.html":{},"entities/Wallet.html":{}}}],["src/transfers/entities/transfer",{"_index":99,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"entities/TransferRequest.html":{}}}],["src/transfers/entities/transfer.entity",{"_index":102,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["src/transfers/entities/transfer.entity.ts",{"_index":2845,"title":{},"body":{"classes/Transfer.html":{}}}],["src/transfers/entities/transfer.entity.ts:10",{"_index":2848,"title":{},"body":{"classes/Transfer.html":{}}}],["src/transfers/entities/transfer.entity.ts:13",{"_index":2847,"title":{},"body":{"classes/Transfer.html":{}}}],["src/transfers/entities/transfer.entity.ts:16",{"_index":2849,"title":{},"body":{"classes/Transfer.html":{}}}],["src/transfers/entities/transfer.entity.ts:7",{"_index":2846,"title":{},"body":{"classes/Transfer.html":{}}}],["src/transfers/repositories/receive",{"_index":2380,"title":{},"body":{"classes/ReceiveTransferRepository.html":{}}}],["src/transfers/repositories/send",{"_index":2491,"title":{},"body":{"classes/SendTransferRepository.html":{}}}],["src/transfers/repositories/transfer",{"_index":2865,"title":{},"body":{"classes/TransferRequestRepository.html":{}}}],["src/transfers/transfers.controller.ts",{"_index":2870,"title":{},"body":{"controllers/TransfersController.html":{}}}],["src/transfers/transfers.module.ts",{"_index":2888,"title":{},"body":{"modules/TransfersModule.html":{}}}],["src/transfers/transfers.service.ts",{"_index":2895,"title":{},"body":{"injectables/TransfersService.html":{}}}],["src/transfers/transfers.service.ts:16",{"_index":2896,"title":{},"body":{"injectables/TransfersService.html":{}}}],["src/tvsubscription/dto/buy",{"_index":1162,"title":{},"body":{"classes/BuyDSTVGOTV-1.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["src/tvsubscription/dto/create",{"_index":1373,"title":{},"body":{"classes/CreateTvsubscriptionDto.html":{}}}],["src/tvsubscription/dto/update",{"_index":3018,"title":{},"body":{"classes/UpdateTvsubscriptionDto.html":{}}}],["src/twillio/dto/create",{"_index":1376,"title":{},"body":{"classes/CreateTwillioDto.html":{}}}],["src/twillio/dto/update",{"_index":3020,"title":{},"body":{"classes/UpdateTwillioDto.html":{}}}],["src/twillio/entities/twillio.entity.ts",{"_index":2923,"title":{},"body":{"classes/Twillio.html":{}}}],["src/twillio/twillio.controller.ts",{"_index":2925,"title":{},"body":{"controllers/TwillioController.html":{}}}],["src/twillio/twillio.module",{"_index":2605,"title":{},"body":{"modules/SmsModule.html":{}}}],["src/twillio/twillio.module.ts",{"_index":2933,"title":{},"body":{"modules/TwillioModule.html":{}}}],["src/twillio/twillio.service",{"_index":2617,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/twillio/twillio.service.ts",{"_index":2935,"title":{},"body":{"injectables/TwillioService.html":{}}}],["src/twillio/twillio.service.ts:16",{"_index":2944,"title":{},"body":{"injectables/TwillioService.html":{}}}],["src/twillio/twillio.service.ts:30",{"_index":2942,"title":{},"body":{"injectables/TwillioService.html":{}}}],["src/twillio/twillio.service.ts:48",{"_index":2946,"title":{},"body":{"injectables/TwillioService.html":{}}}],["src/twillio/twillio.service.ts:7",{"_index":2940,"title":{},"body":{"injectables/TwillioService.html":{}}}],["src/user/dto/create",{"_index":614,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/CreateUserDto.html":{}}}],["src/user/dto/update",{"_index":3023,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/user/dto/verify",{"_index":3277,"title":{},"body":{"classes/VerifyEmailDTO.html":{}}}],["src/user/entities/customer",{"_index":1516,"title":{},"body":{"entities/CustomerKyc.html":{}}}],["src/user/entities/customer.entity",{"_index":104,"title":{},"body":{"injectables/AbilityFactory.html":{},"entities/Account.html":{},"entities/AirtimeActivity.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"interfaces/RequiredRule.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{}}}],["src/user/entities/customer.entity.ts",{"_index":1453,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:23",{"_index":1485,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:26",{"_index":1490,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:29",{"_index":1478,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:32",{"_index":1476,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:35",{"_index":1469,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:38",{"_index":1493,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:41",{"_index":1495,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:44",{"_index":1504,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:47",{"_index":1502,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:50",{"_index":1499,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:56",{"_index":1489,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:62",{"_index":1497,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:68",{"_index":1487,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:74",{"_index":1500,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:80",{"_index":1483,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:86",{"_index":1472,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:92",{"_index":1471,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:95",{"_index":1482,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/customer.entity.ts:98",{"_index":1480,"title":{},"body":{"entities/Customer.html":{}}}],["src/user/entities/user.entity",{"_index":105,"title":{},"body":{"injectables/AbilityFactory.html":{},"entities/Admin.html":{},"injectables/TransactionsService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":3033,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":3038,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:13",{"_index":3036,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:16",{"_index":3041,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:20",{"_index":3040,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:23",{"_index":3042,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":3037,"title":{},"body":{"classes/User.html":{}}}],["src/user/repositories/customer",{"_index":1541,"title":{},"body":{"classes/CustomerKycRepository.html":{}}}],["src/user/repositories/customer.repository.ts",{"_index":1546,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["src/user/repositories/customer.repository.ts:15",{"_index":1549,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["src/user/repositories/customer.repository.ts:24",{"_index":1550,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["src/user/repositories/customer.repository.ts:28",{"_index":1552,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["src/user/repositories/customer.repository.ts:6",{"_index":1548,"title":{},"body":{"classes/CustomerRepository.html":{}}}],["src/user/user.controller.ts",{"_index":3045,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:35",{"_index":3058,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:44",{"_index":3061,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:54",{"_index":3064,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:60",{"_index":3067,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:66",{"_index":3070,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:72",{"_index":3063,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:78",{"_index":3055,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:84",{"_index":3074,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":237,"title":{},"body":{"modules/AccountModule.html":{},"modules/AdminModule.html":{},"modules/EmailModule.html":{},"modules/SmsModule.html":{}}}],["src/user/user.module.ts",{"_index":3109,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/EmailService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/WalletService.html":{}}}],["src/user/user.service.ts",{"_index":3119,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:102",{"_index":3147,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:108",{"_index":3141,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:112",{"_index":3136,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:247",{"_index":3134,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":3131,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:269",{"_index":3157,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:283",{"_index":3138,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:292",{"_index":3153,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:304",{"_index":3151,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:314",{"_index":3143,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:324",{"_index":3149,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:334",{"_index":3150,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:351",{"_index":3132,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:359",{"_index":3155,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:39",{"_index":3139,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:50",{"_index":3144,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:76",{"_index":3145,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/apisuccessresponse.ts",{"_index":3712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/utils/get",{"_index":1439,"title":{},"body":{"injectables/CustomLogger.html":{},"miscellaneous/functions.html":{}}}],["src/utils/mocks/config.service.ts",{"_index":3729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/utils/mocks/jwt.service.ts",{"_index":3733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/utils/random",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/TransactionsService.html":{},"injectables/VtpassService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/utils/removekeyandpropertyfromobject.ts",{"_index":3742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/vtpass/dto/bouquet",{"_index":1105,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{}}}],["src/vtpass/dto/buy",{"_index":1145,"title":{},"body":{"classes/BuyAirtimeDto-2.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{}}}],["src/vtpass/dto/create",{"_index":1401,"title":{},"body":{"classes/CreateVtpassDto.html":{}}}],["src/vtpass/dto/query",{"_index":2344,"title":{},"body":{"classes/QueryTransactionStatusDto.html":{}}}],["src/vtpass/dto/update",{"_index":3026,"title":{},"body":{"classes/UpdateVtpassDto.html":{}}}],["src/vtpass/dto/verify",{"_index":3282,"title":{},"body":{"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{}}}],["src/vtpass/entities/vtpass.entity.ts",{"_index":3298,"title":{},"body":{"classes/Vtpass.html":{}}}],["src/vtpass/vtpass.controller.ts",{"_index":3300,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:103",{"_index":3318,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:108",{"_index":3332,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:113",{"_index":3333,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:118",{"_index":3334,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:123",{"_index":3350,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:128",{"_index":3346,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:31",{"_index":3314,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:37",{"_index":3316,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:41",{"_index":3340,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:46",{"_index":3342,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:51",{"_index":3337,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:56",{"_index":3345,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:63",{"_index":3359,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:68",{"_index":3356,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:73",{"_index":3353,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:78",{"_index":3330,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:83",{"_index":3349,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:88",{"_index":3324,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:93",{"_index":3321,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.controller.ts:98",{"_index":3327,"title":{},"body":{"controllers/VtpassController.html":{}}}],["src/vtpass/vtpass.module",{"_index":461,"title":{},"body":{"modules/ActivitiesModule.html":{}}}],["src/vtpass/vtpass.module.ts",{"_index":3408,"title":{},"body":{"modules/VtpassModule.html":{}}}],["src/vtpass/vtpass.service",{"_index":483,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["src/vtpass/vtpass.service.ts",{"_index":3410,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:104",{"_index":3434,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:121",{"_index":3420,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:140",{"_index":3435,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:159",{"_index":3440,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:178",{"_index":3439,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:197",{"_index":3438,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:216",{"_index":3416,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:236",{"_index":3418,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:24",{"_index":3442,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:25",{"_index":3441,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:255",{"_index":3424,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:26",{"_index":3414,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:274",{"_index":3423,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:293",{"_index":3425,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:312",{"_index":3422,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:331",{"_index":3426,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:335",{"_index":3427,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:339",{"_index":3428,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:343",{"_index":3437,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:347",{"_index":3436,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:47",{"_index":3419,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:66",{"_index":3433,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/vtpass/vtpass.service.ts:86",{"_index":3430,"title":{},"body":{"injectables/VtpassService.html":{}}}],["src/wallet/dto/create",{"_index":1404,"title":{},"body":{"classes/CreateWalletDto.html":{}}}],["src/wallet/dto/transaction.dto.ts",{"_index":2644,"title":{},"body":{"classes/TransactionDto.html":{}}}],["src/wallet/dto/transaction.dto.ts:14",{"_index":2646,"title":{},"body":{"classes/TransactionDto.html":{}}}],["src/wallet/dto/transaction.dto.ts:6",{"_index":2645,"title":{},"body":{"classes/TransactionDto.html":{}}}],["src/wallet/dto/update",{"_index":3030,"title":{},"body":{"classes/UpdateWalletDto.html":{}}}],["src/wallet/entities/wallet.entity",{"_index":107,"title":{},"body":{"injectables/AbilityFactory.html":{},"entities/AirtimeActivity.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/UserService.html":{},"entities/Withdrawal.html":{}}}],["src/wallet/entities/wallet.entity.ts",{"_index":3458,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:17",{"_index":3461,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:20",{"_index":3474,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:23",{"_index":3471,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:26",{"_index":3462,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:29",{"_index":3473,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:32",{"_index":3476,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:38",{"_index":3468,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:44",{"_index":3466,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:50",{"_index":3469,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:56",{"_index":3464,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:62",{"_index":3463,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:68",{"_index":3460,"title":{},"body":{"entities/Wallet.html":{}}}],["src/wallet/repositories/wallet.repository.ts",{"_index":3495,"title":{},"body":{"classes/WalletRepository.html":{}}}],["src/wallet/repositories/wallet.repository.ts:6",{"_index":3498,"title":{},"body":{"classes/WalletRepository.html":{}}}],["src/wallet/wallet.controller.ts",{"_index":3479,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:25",{"_index":3480,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.module",{"_index":462,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{}}}],["src/wallet/wallet.module.ts",{"_index":3490,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/wallet/wallet.service",{"_index":482,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{}}}],["src/wallet/wallet.service.ts",{"_index":3501,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:103",{"_index":3513,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:118",{"_index":3511,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:16",{"_index":3506,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:21",{"_index":3508,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:61",{"_index":3515,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:95",{"_index":3509,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:99",{"_index":3510,"title":{},"body":{"injectables/WalletService.html":{}}}],["sse",{"_index":758,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["sse('subscribe",{"_index":779,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["ssl",{"_index":1612,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["stack",{"_index":1427,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["start",{"_index":2500,"title":{},"body":{"classes/SetPinDTO.html":{}}}],["started",{"_index":3654,"title":{"index.html":{}},"body":{}}],["startimes",{"_index":1201,"title":{},"body":{"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{}}}],["startimes.dto",{"_index":3369,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["startimes.dto.ts",{"_index":1211,"title":{},"body":{"classes/BuyStartimesDto.html":{}}}],["startimes.dto.ts:11",{"_index":1215,"title":{},"body":{"classes/BuyStartimesDto.html":{}}}],["startimes.dto.ts:15",{"_index":1213,"title":{},"body":{"classes/BuyStartimesDto.html":{}}}],["startimes.dto.ts:19",{"_index":1212,"title":{},"body":{"classes/BuyStartimesDto.html":{}}}],["startimes.dto.ts:23",{"_index":1216,"title":{},"body":{"classes/BuyStartimesDto.html":{}}}],["startimes.dto.ts:7",{"_index":1214,"title":{},"body":{"classes/BuyStartimesDto.html":{}}}],["status",{"_index":548,"title":{},"body":{"classes/Activity-1.html":{},"entities/Announcement.html":{},"injectables/AnnouncementService.html":{},"injectables/BankService.html":{},"entities/CustomerKyc.html":{},"injectables/MonnifyService.html":{},"entities/PaymentMerchant.html":{},"classes/Transaction.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{}}}],["status.dto",{"_index":3362,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["status.dto.ts",{"_index":2345,"title":{},"body":{"classes/QueryTransactionStatusDto.html":{}}}],["status.dto.ts:7",{"_index":2346,"title":{},"body":{"classes/QueryTransactionStatusDto.html":{}}}],["status/:id",{"_index":2678,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["stdout",{"_index":3752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":1920,"title":{},"body":{"controllers/HealthController.html":{}}}],["store",{"_index":881,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["strategy",{"_index":1984,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":158,"title":{},"body":{"entities/Account.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"classes/DepositRepository.html":{},"entities/Email.html":{},"injectables/EmailService.html":{},"classes/FinalizeWithdrawalDto.html":{},"injectables/FlutterwaveService.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateWithdrawalData.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"injectables/MonnifyService.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"entities/Setting.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"controllers/TransfersController.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/TwillioService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"classes/WalletRepository.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/variables.html":{}}}],["stringifyparameters",{"_index":1564,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["stringifyparameters(parameters",{"_index":1579,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["sub",{"_index":1007,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":728,"title":{},"body":{"entities/Announcement.html":{},"classes/AnnouncementQueryDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"injectables/EmailService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{}}}],["subjects",{"_index":115,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/typealiases.html":{}}}],["subscribe",{"_index":743,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{}}}],["subscribe(@query",{"_index":780,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["subscribe(email",{"_index":820,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["subscribe(query",{"_index":755,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["subscribeforuser",{"_index":788,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["subscription",{"_index":460,"title":{},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"entities/Wallet.html":{}}}],["subscription_type",{"_index":1111,"title":{},"body":{"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{}}}],["success",{"_index":700,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":1013,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionsService.html":{}}}],["successfully",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["sum",{"_index":2753,"title":{},"body":{"injectables/TransactionsService.html":{},"injectables/WalletService.html":{}}}],["super",{"_index":1972,"title":{},"body":{"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(context",{"_index":1443,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.canactivate(context",{"_index":1976,"title":{},"body":{"injectables/JwtAuthGaurd.html":{},"miscellaneous/variables.html":{}}}],["super.debug.apply(this",{"_index":1452,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.error.apply(this",{"_index":1450,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.log.apply(this",{"_index":1448,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["super.warn.apply(this",{"_index":1451,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["support",{"_index":3673,"title":{},"body":{"modules.html":{}}}],["suspended",{"_index":3609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":3674,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":323,"title":{},"body":{"injectables/AccountService.html":{},"injectables/BankService.html":{},"injectables/SettingsService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1619,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":837,"title":{},"body":{"interfaces/ApiSuccessResponse.html":{},"interfaces/ReturnTypeContainer.html":{},"miscellaneous/variables.html":{}}}],["tap_${firstname}${hash",{"_index":3213,"title":{},"body":{"injectables/UserService.html":{}}}],["tapmoni",{"_index":347,"title":{},"body":{"injectables/AccountService.html":{},"injectables/EmailService.html":{},"injectables/SeedingMiddleware.html":{}}}],["terminusmodule",{"_index":1930,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1751,"title":{},"body":{"controllers/FlutterwaveController.html":{}}}],["testguard(@request",{"_index":2880,"title":{},"body":{"controllers/TransfersController.html":{}}}],["text",{"_index":1261,"title":{},"body":{"classes/CreateEmailDto.html":{},"injectables/EmailService.html":{}}}],["then((res",{"_index":2150,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.accountservice.deleteaccount(1",{"_index":221,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.accountservice.findallaccounts",{"_index":220,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.accountservice.initiateaccountcreation",{"_index":219,"title":{},"body":{"controllers/AccountController.html":{}}}],["this.activitiesservice.bouquetchangedstv_gotv(buydstvgotv",{"_index":429,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.bouquetrenewdstv_gotv(buydstvgotv",{"_index":432,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.buyairtimevtpass(buyairtimedto",{"_index":419,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.buyelectricity(buyelectrictydto",{"_index":423,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.buymobiledata(buydatadto",{"_index":426,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.create(createactivitydto",{"_index":434,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.findall",{"_index":435,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.findone(+id",{"_index":437,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.remove(+id",{"_index":441,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activitiesservice.update(+id",{"_index":439,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["this.activityrepository.find",{"_index":707,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.create",{"_index":3207,"title":{},"body":{"injectables/UserService.html":{}}}],["this.adminrepository.findbyemail(email",{"_index":3169,"title":{},"body":{"injectables/UserService.html":{}}}],["this.adminrepository.findbyid(id",{"_index":3171,"title":{},"body":{"injectables/UserService.html":{}}}],["this.adminrepository.findbyphonenumber(phonenumber",{"_index":3199,"title":{},"body":{"injectables/UserService.html":{}}}],["this.adminrepository.findone(id",{"_index":3173,"title":{},"body":{"injectables/UserService.html":{}}}],["this.adminrepository.save(newadmin",{"_index":3208,"title":{},"body":{"injectables/UserService.html":{}}}],["this.adminservice.assignrole(assignuserleveldto",{"_index":632,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.createnewadmin(createadmindto",{"_index":621,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getallactivities",{"_index":637,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getallusers",{"_index":626,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getsummary",{"_index":623,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getuseractivities(id",{"_index":635,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.announcementrepository.create",{"_index":828,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["this.announcementrepository.find",{"_index":825,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["this.announcementrepository.save",{"_index":830,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["this.announcementservice.create(body",{"_index":777,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["this.announcementservice.emit(query.id",{"_index":784,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["this.announcementservice.getall(type",{"_index":776,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["this.announcementservice.subscribe(query.id",{"_index":781,"title":{},"body":{"controllers/AnnouncementController.html":{}}}],["this.authenticate",{"_index":2193,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.authservice.createtransactionpin(password",{"_index":960,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.loginadmin(req.user",{"_index":957,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.loginuser(req.user",{"_index":954,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":2005,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authtoken",{"_index":2151,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.bankservice.getallbanks",{"_index":1063,"title":{},"body":{"controllers/BankController.html":{}}}],["this.bankservice.getnairawalletbalance",{"_index":694,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.baseurl",{"_index":2153,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.baseurl}/api/v2/disbursements/single/summary?reference=${reference",{"_index":2212,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.baseurl}api/v1/bank",{"_index":2201,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.baseurl}api/v2/bank",{"_index":2199,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.baseurl}api/v2/disbursements/single",{"_index":2206,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.baseurl}api/v2/disbursements/wallet",{"_index":2208,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.cachemanager",{"_index":2148,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.cachemanager.del('allbanks",{"_index":2587,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.cachemanager.del(name",{"_index":2586,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.cachemanager.get",{"_index":2804,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.cachemanager.get(servicessettings.bank_service",{"_index":1085,"title":{},"body":{"injectables/BankService.html":{}}}],["this.cachemanager.set('monnify_token",{"_index":2168,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.cachemanager.set(name",{"_index":2574,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.cachemanager.set(setting.name",{"_index":2583,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.caslabilityfactory.defineability(user",{"_index":55,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["this.configservice.get",{"_index":2953,"title":{},"body":{"injectables/TwillioService.html":{}}}],["this.configservice.get('flutterwave_encrypt_key",{"_index":1807,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.configservice.get('flutterwave_public_key",{"_index":1805,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.configservice.get('flutterwave_secret_key",{"_index":1803,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.configservice.get('monnify_apikey",{"_index":2156,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.configservice.get('monnify_base_url",{"_index":2154,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.configservice.get('monnify_contract_code",{"_index":344,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.configservice.get('monnify_secret_key",{"_index":2158,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.configservice.get('paystack_public_key",{"_index":2328,"title":{},"body":{"injectables/PaystackService.html":{}}}],["this.configservice.get('paystack_secret_key",{"_index":2327,"title":{},"body":{"injectables/PaystackService.html":{}}}],["this.configservice.get('twillio_phone_number",{"_index":2963,"title":{},"body":{"injectables/TwillioService.html":{}}}],["this.configservice.get('vtpass_email",{"_index":3446,"title":{},"body":{"injectables/VtpassService.html":{}}}],["this.configservice.get('vtpass_password",{"_index":3447,"title":{},"body":{"injectables/VtpassService.html":{}}}],["this.configservice.get('vtpass_public_key",{"_index":3444,"title":{},"body":{"injectables/VtpassService.html":{}}}],["this.configservice.get('vtpass_secret_key",{"_index":3443,"title":{},"body":{"injectables/VtpassService.html":{}}}],["this.connection.createqueryrunner",{"_index":501,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/UserService.html":{}}}],["this.connection.manager.query",{"_index":2773,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.createaccount",{"_index":332,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.createreferralcode(createuserdto.firstname",{"_index":3183,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentbankservice",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.currentservice",{"_index":1083,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["this.currentservice.createreservedaccount",{"_index":2813,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.currentservice.createreservedaccount(monnifydata",{"_index":2814,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.currentservice.getallbankcodes",{"_index":1099,"title":{},"body":{"injectables/BankService.html":{}}}],["this.customerkycrepository.find",{"_index":3220,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerkycrepository.findone",{"_index":3218,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerkycrepository.update(id",{"_index":3221,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository",{"_index":3167,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.count",{"_index":3217,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.findbyemail",{"_index":3175,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.findbyemail(email",{"_index":3168,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.findbyid(id",{"_index":3170,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.findbyphonenumber(phonenumber",{"_index":3178,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.findbyreferralcode",{"_index":3209,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.findone(id",{"_index":3172,"title":{},"body":{"injectables/UserService.html":{}}}],["this.customerrepository.update",{"_index":3216,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deletecode(email",{"_index":1724,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.depositrepository",{"_index":2759,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.depositrepository.find",{"_index":2776,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.depositrepository.findone(id",{"_index":2779,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":1925,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.emailrepository.delete",{"_index":1726,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailrepository.find",{"_index":1727,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailrepository.findone",{"_index":1722,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailservice.findall",{"_index":1677,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.sendverificationcode",{"_index":3197,"title":{},"body":{"injectables/UserService.html":{}}}],["this.emailservice.verifymail(code",{"_index":3222,"title":{},"body":{"injectables/UserService.html":{}}}],["this.encrypt(json.stringify(authorizedepositdto",{"_index":1860,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.encrypt(json.stringify(initiatedepositdata",{"_index":1857,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.encryptkey",{"_index":1806,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.entitymanager.findone(seedinglogentry",{"_index":2458,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["this.entitymanager.transaction",{"_index":2460,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["this.eventemitter",{"_index":824,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["this.eventemitter.emit(email",{"_index":832,"title":{},"body":{"injectables/AnnouncementService.html":{}}}],["this.findone",{"_index":666,"title":{},"body":{"classes/AdminRepository.html":{},"classes/CustomerRepository.html":{},"classes/DepositRepository.html":{},"classes/WalletRepository.html":{},"classes/WithdrawalRepository.html":{}}}],["this.flutterwaveservice",{"_index":1094,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["this.flutterwaveservice.getnairawalletbalance",{"_index":1756,"title":{},"body":{"controllers/FlutterwaveController.html":{}}}],["this.flutterwaveservice.gettransferstatus",{"_index":2745,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.flw",{"_index":1808,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.flw.misc.bal_currency",{"_index":1817,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.flw.transfer.get_a_transfer",{"_index":1816,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.flw.transfer.initiate(initiatewithdrawaldto",{"_index":1814,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["this.getcurrentservice",{"_index":1098,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["this.handleresponse(result",{"_index":2198,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.healthcheckservice.check",{"_index":1904,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpservice",{"_index":1823,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["this.isseedingcomplete",{"_index":2457,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["this.jwtservice.sign(payload",{"_index":1011,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug(message",{"_index":1589,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.error",{"_index":1585,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.log",{"_index":1583,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.log(message",{"_index":1588,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.warn",{"_index":1587,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.warn(message",{"_index":1590,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logsrepository.create(log",{"_index":2036,"title":{},"body":{"injectables/LogService.html":{}}}],["this.logsrepository.save(newlog",{"_index":2037,"title":{},"body":{"injectables/LogService.html":{}}}],["this.logsservice",{"_index":1447,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.logsservice.createlog",{"_index":1449,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.markemailasconfirmed(email",{"_index":3242,"title":{},"body":{"injectables/UserService.html":{}}}],["this.markphonenumberasconfirmed(id",{"_index":3246,"title":{},"body":{"injectables/UserService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":1911,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":1917,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.merchantapiservice.create(createmerchantapidto",{"_index":2060,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["this.merchantapiservice.findall",{"_index":2061,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["this.merchantapiservice.findone(+id",{"_index":2062,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["this.merchantapiservice.remove(+id",{"_index":2064,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["this.merchantapiservice.update(+id",{"_index":2063,"title":{},"body":{"controllers/MerchantApiController.html":{}}}],["this.monnifyaccountrepository.create(createaccountdto",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyaccountrepository.delete(id",{"_index":316,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyaccountrepository.find",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyaccountrepository.findone",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyaccountrepository.findone(id",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyaccountrepository.save(account",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyservice",{"_index":1097,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["this.monnifyservice.createreservedaccount",{"_index":354,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyservice.getallbankcodes",{"_index":1100,"title":{},"body":{"injectables/BankService.html":{}}}],["this.monnifyservice.getwalletbalance",{"_index":1101,"title":{},"body":{"injectables/BankService.html":{}}}],["this.monnifyservice.initiatetransfers(withdrawaldto",{"_index":2817,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.monnifyservice.validateaccountbvnmatch",{"_index":326,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.monnifyservice.validateaccountnumber",{"_index":338,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.nodemailerservice.sendmail(options",{"_index":1710,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.nodemailertransport",{"_index":2229,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["this.nodemailertransport.sendmail(options",{"_index":2233,"title":{},"body":{"injectables/NodemailerService.html":{}}}],["this.paystackservice.banklist",{"_index":2287,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.create(createpaystackdto",{"_index":2281,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.createtransferrecipient",{"_index":2282,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.finalizewithdrawal(finalizedepositdto",{"_index":2286,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.findall",{"_index":2290,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.findone(+id",{"_index":2291,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.initializewithdrawal(initializewithdrawaldto",{"_index":2284,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.remove(+id",{"_index":2293,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.update(+id",{"_index":2292,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.verifyaccountnumber(params",{"_index":2289,"title":{},"body":{"controllers/PaystackController.html":{}}}],["this.paystackservice.verifytransaction",{"_index":2819,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.publickey",{"_index":1804,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["this.reference",{"_index":2443,"title":{},"body":{"entities/SeedingLogEntry.html":{}}}],["this.referralrepository.create",{"_index":2434,"title":{},"body":{"injectables/ReferralService.html":{}}}],["this.referralrepository.save(newreferral",{"_index":2435,"title":{},"body":{"injectables/ReferralService.html":{}}}],["this.referralservice.create(createreferraldto",{"_index":2405,"title":{},"body":{"controllers/ReferralController.html":{}}}],["this.referralservice.findall",{"_index":2406,"title":{},"body":{"controllers/ReferralController.html":{}}}],["this.referralservice.findone(+id",{"_index":2407,"title":{},"body":{"controllers/ReferralController.html":{}}}],["this.referralservice.remove(+id",{"_index":2409,"title":{},"body":{"controllers/ReferralController.html":{}}}],["this.referralservice.update(+id",{"_index":2408,"title":{},"body":{"controllers/ReferralController.html":{}}}],["this.reflector.get('roles",{"_index":67,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["this.reflector.get(check_ability",{"_index":46,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1974,"title":{},"body":{"injectables/JwtAuthGaurd.html":{}}}],["this.requestheaders",{"_index":1810,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["this.secretkey",{"_index":1802,"title":{},"body":{"injectables/FlutterwaveService.html":{},"injectables/PaystackService.html":{},"injectables/VtpassService.html":{}}}],["this.sendmail",{"_index":1718,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.setrequestheaders(this.authtoken",{"_index":2194,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["this.settingrepository.create(createsettingdto",{"_index":2581,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingrepository.delete",{"_index":2588,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingrepository.find",{"_index":2575,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingrepository.findone",{"_index":2573,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingrepository.save(setting",{"_index":2582,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingrepository.update",{"_index":2584,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingsservice.addsetting(createsettingdto",{"_index":702,"title":{},"body":{"injectables/AdminService.html":{},"controllers/SettingsController.html":{}}}],["this.settingsservice.deletesetting(settingname",{"_index":2546,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settingsservice.getallsettings",{"_index":2539,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settingsservice.getsetting",{"_index":1086,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["this.settingsservice.getsetting(id",{"_index":704,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.settingsservice.getsetting(settingname",{"_index":2541,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settingsservice.updatesetting(id",{"_index":706,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.settingsservice.updatesetting(settingname",{"_index":2544,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.smsservice.sendphonenumberotp(phonenumber",{"_index":3244,"title":{},"body":{"injectables/UserService.html":{}}}],["this.smsservice.verifyphonenumberotp",{"_index":3245,"title":{},"body":{"injectables/UserService.html":{}}}],["this.stringifyparameters",{"_index":1586,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.stringifyparameters(parameters",{"_index":1584,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.transactionrepository",{"_index":2783,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionrepository.find",{"_index":2789,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionrepository.findone(id",{"_index":2790,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionrepository.update",{"_index":2748,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.transactionsservice.findonetransaction(id",{"_index":2705,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.getalltransactions(type",{"_index":2700,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.gettotaldepositsbalance",{"_index":696,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.transactionsservice.gettotalwithdrawalsbalance",{"_index":698,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.transactionsservice.getusertransactions(id",{"_index":2703,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.getusertransactions(user.id",{"_index":2702,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.initiatewithdrawal(body",{"_index":2695,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transactionsservice.updatetransactionstatus(id",{"_index":2696,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["this.transfersservice.findall",{"_index":2881,"title":{},"body":{"controllers/TransfersController.html":{}}}],["this.transfersservice.findone(+id",{"_index":2882,"title":{},"body":{"controllers/TransfersController.html":{}}}],["this.transfersservice.remove(+id",{"_index":2884,"title":{},"body":{"controllers/TransfersController.html":{}}}],["this.transfersservice.transferfunds",{"_index":2878,"title":{},"body":{"controllers/TransfersController.html":{}}}],["this.transfersservice.update(+id",{"_index":2883,"title":{},"body":{"controllers/TransfersController.html":{}}}],["this.twilioclient",{"_index":2950,"title":{},"body":{"injectables/TwillioService.html":{}}}],["this.twilioclient.messages.create",{"_index":2964,"title":{},"body":{"injectables/TwillioService.html":{}}}],["this.twilioclient.verify",{"_index":2955,"title":{},"body":{"injectables/TwillioService.html":{}}}],["this.twillioservice.confirmphonenumber",{"_index":2620,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.twillioservice.initiatephonenumberverification",{"_index":2619,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":1905,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.userrepository.delete(id",{"_index":3248,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":3230,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":3224,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(id",{"_index":3229,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update",{"_index":3240,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update(id",{"_index":3237,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.approvekyc(id",{"_index":3095,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.createadmin(payload",{"_index":688,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.userservice.createcustomer(createuserdto",{"_index":3081,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.find",{"_index":3085,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findadminforjwt(sub",{"_index":1994,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.findbvnbyuserid(userid",{"_index":319,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.userservice.findbyemail(email",{"_index":999,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/WalletService.html":{}}}],["this.userservice.findbyemail(recipientemail",{"_index":2903,"title":{},"body":{"injectables/TransfersService.html":{}}}],["this.userservice.findbyemail(senderemail",{"_index":2905,"title":{},"body":{"injectables/TransfersService.html":{}}}],["this.userservice.findbyid(id",{"_index":3090,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findcustomerforjwt(id",{"_index":1004,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findcustomerforjwt(sub",{"_index":1993,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.findkycbyuserid(userid",{"_index":341,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.userservice.findunapprovedkyc",{"_index":3092,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.gettotalnumberofusers",{"_index":690,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.userservice.initiatephonenumberverification(phonenumber",{"_index":3100,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setpin(email",{"_index":1016,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.verifyemail(code",{"_index":3098,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.verifyphonenumberotp",{"_index":3102,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateuser(email",{"_index":1014,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifyreferralcode(referralcode",{"_index":3180,"title":{},"body":{"injectables/UserService.html":{}}}],["this.vtpassservice.bouquetchange(bouquetchangedto",{"_index":3388,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.bouquetrenewal(bouquetchangedto",{"_index":3390,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.buyairtime(buyairtimedto",{"_index":3372,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.buydata(buydatadto",{"_index":3374,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.buyelectricity(buyelectricitydto",{"_index":3398,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.buyshowmax(buyshowmaxdto",{"_index":3394,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.buystartimes(buystartimesdto",{"_index":3392,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.buywaec(buywaecdto",{"_index":3396,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.create(createvtpassdto",{"_index":3399,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.findall",{"_index":3400,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.findone(+id",{"_index":3401,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.getserviceids(params.identifier",{"_index":3379,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.getvariationcodes(params.serviceid",{"_index":3376,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.getvtpassservicesidentifiers",{"_index":3377,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.querytransactionstatus(querytransactionstatusdto",{"_index":3380,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.remove(+id",{"_index":3404,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.update(+id",{"_index":3403,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.verifysmartcardnumber(verifysmartcarddto",{"_index":3386,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.verifysmileemail(verifysmileemaildto",{"_index":3384,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.vtpassservice.verifysmilephone(verifysmilephonedto",{"_index":3382,"title":{},"body":{"controllers/VtpassController.html":{}}}],["this.walletrepository",{"_index":3530,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.create(createwalletdto",{"_index":3518,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.decrement",{"_index":3525,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.find",{"_index":3528,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.findbyuseremail",{"_index":3521,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.findone",{"_index":3523,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.findone(id",{"_index":3529,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.increment",{"_index":3522,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletrepository.save(newwallet",{"_index":3519,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.walletservice.deposit(transactiondto",{"_index":2823,"title":{},"body":{"injectables/TransactionsService.html":{},"controllers/WalletController.html":{}}}],["this.walletservice.find",{"_index":3486,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.findbyid",{"_index":2911,"title":{},"body":{"injectables/TransfersService.html":{}}}],["this.walletservice.findbyid(senderwalletid",{"_index":2913,"title":{},"body":{"injectables/TransfersService.html":{}}}],["this.walletservice.gettotalusersnaira",{"_index":692,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.walletservice.getwalletbyownerid(user.id",{"_index":511,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["this.withdrawalrepository",{"_index":2754,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.withdrawalrepository.find",{"_index":2774,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.withdrawalrepository.findone(id",{"_index":2778,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["this.withdrawalrepository.update",{"_index":2740,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["thresholdpercent",{"_index":1926,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":63,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"injectables/AdminService.html":{},"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/LocalStrategy.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{}}}],["time",{"_index":1576,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["title",{"_index":729,"title":{},"body":{"entities/Announcement.html":{},"classes/AnnouncementQueryDto.html":{},"classes/CreateAnnouncementDto.html":{},"index.html":{}}}],["tls",{"_index":921,"title":{},"body":{"modules/AppModule.html":{}}}],["tm",{"_index":3727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":1010,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MonnifyService.html":{}}}],["tostring('base64",{"_index":2161,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/VtpassService.html":{}}}],["totaldeposits",{"_index":695,"title":{},"body":{"injectables/AdminService.html":{},"injectables/TransactionsService.html":{}}}],["totalnairadeposits",{"_index":2788,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["totaltransactions",{"_index":699,"title":{},"body":{"injectables/AdminService.html":{}}}],["totalusers",{"_index":689,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UserService.html":{}}}],["totalusersnaira",{"_index":691,"title":{},"body":{"injectables/AdminService.html":{},"injectables/WalletService.html":{}}}],["totalwithdrawals",{"_index":697,"title":{},"body":{"injectables/AdminService.html":{},"injectables/TransactionsService.html":{}}}],["touser",{"_index":2853,"title":{},"body":{"entities/TransferRequest.html":{}}}],["touserid",{"_index":2854,"title":{},"body":{"entities/TransferRequest.html":{}}}],["transaction",{"_index":89,"title":{"classes/Transaction.html":{}},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"classes/Transaction.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["transaction.deposit",{"_index":1641,"title":{},"body":{"entities/Deposit.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{}}}],["transaction.dto",{"_index":2326,"title":{},"body":{"injectables/PaystackService.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateTransactionDto.html":{}}}],["transaction.dto.ts",{"_index":1348,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/VerifyTransactionDto.html":{}}}],["transaction.dto.ts:10",{"_index":1352,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:14",{"_index":1351,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:6",{"_index":1350,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/VerifyTransactionDto.html":{}}}],["transaction.entity",{"_index":1640,"title":{},"body":{"entities/Deposit.html":{},"entities/Withdrawal.html":{}}}],["transaction.withdrawal",{"_index":2699,"title":{},"body":{"controllers/TransactionsController.html":{},"entities/Withdrawal.html":{}}}],["transaction_modes",{"_index":3590,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transaction_status",{"_index":2147,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transaction_status.completed",{"_index":2176,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["transaction_status.in_progress",{"_index":2181,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["transaction_status.pending_auth",{"_index":2183,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["transaction_status.pending_requery",{"_index":2192,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["transaction_status.reversed",{"_index":2185,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["transactionalentitymanager",{"_index":2461,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["transactionalentitymanager.save",{"_index":2468,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["transactionalentitymanager.save(admin",{"_index":2462,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["transactiondto",{"_index":2643,"title":{"classes/TransactionDto.html":{}},"body":{"classes/TransactionDto.html":{},"injectables/TransactionsService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["transactionmodes",{"_index":2635,"title":{},"body":{"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["transactionquerydto",{"_index":2647,"title":{"classes/TransactionQueryDto.html":{}},"body":{"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{}}}],["transactionreference",{"_index":549,"title":{},"body":{"classes/Activity-1.html":{}}}],["transactions",{"_index":2654,"title":{},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{}}}],["transactions.controller",{"_index":2711,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["transactions.service",{"_index":2680,"title":{},"body":{"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{}}}],["transactions/transactions.module",{"_index":863,"title":{},"body":{"modules/AppModule.html":{}}}],["transactions_service",{"_index":3626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transactionscontroller",{"_index":2652,"title":{"controllers/TransactionsController.html":{}},"body":{"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{}}}],["transactionsmodule",{"_index":644,"title":{"modules/TransactionsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/TransactionsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionsservice",{"_index":671,"title":{"injectables/TransactionsService.html":{}},"body":{"injectables/AdminService.html":{},"controllers/TransactionsController.html":{},"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"overview.html":{}}}],["transactionstatus",{"_index":560,"title":{},"body":{"classes/Activity-1.html":{},"classes/Transaction.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"miscellaneous/typealiases.html":{}}}],["transactionstatus.completed",{"_index":2749,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactionstatus.failed",{"_index":2752,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactionstatus['data",{"_index":2822,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactionstatus['data']['customer']['email",{"_index":2821,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactionstatus['data']['status",{"_index":2820,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["transactiontype",{"_index":1633,"title":{},"body":{"entities/Deposit.html":{},"classes/TransactionQueryDto.html":{},"injectables/TransactionsService.html":{},"entities/Withdrawal.html":{},"miscellaneous/typealiases.html":{}}}],["transfer",{"_index":101,"title":{"classes/Transfer.html":{}},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"injectables/FlutterwaveService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"interfaces/RequiredRule.html":{},"entities/SendTransfer.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"injectables/TransfersService.html":{}}}],["transfer(@body",{"_index":2876,"title":{},"body":{"controllers/TransfersController.html":{}}}],["transfer(initiatewithdrawaldto",{"_index":1778,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["transfer.dto",{"_index":2146,"title":{},"body":{"injectables/MonnifyService.html":{},"injectables/TransactionsService.html":{},"controllers/TransfersController.html":{},"injectables/TransfersService.html":{},"classes/UpdateTransferDto.html":{}}}],["transfer.dto.ts",{"_index":1355,"title":{},"body":{"classes/CreateTransferDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/UpdateTransferDto.html":{}}}],["transfer.dto.ts:10",{"_index":1955,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["transfer.dto.ts:14",{"_index":1954,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["transfer.dto.ts:18",{"_index":1953,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["transfer.dto.ts:2",{"_index":1359,"title":{},"body":{"classes/CreateTransferDto.html":{}}}],["transfer.dto.ts:22",{"_index":1952,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["transfer.dto.ts:26",{"_index":1951,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["transfer.dto.ts:3",{"_index":1360,"title":{},"body":{"classes/CreateTransferDto.html":{}}}],["transfer.dto.ts:4",{"_index":1358,"title":{},"body":{"classes/CreateTransferDto.html":{}}}],["transfer.dto.ts:6",{"_index":1950,"title":{},"body":{"classes/InitiateMNTransferDto.html":{}}}],["transfer.entity",{"_index":95,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"interfaces/RequiredRule.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"entities/TransferRequest.html":{},"entities/Wallet.html":{}}}],["transfer.entity.ts",{"_index":2358,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{}}}],["transfer.entity.ts:10",{"_index":2488,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transfer.entity.ts:11",{"_index":2365,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.entity.ts:13",{"_index":2481,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transfer.entity.ts:14",{"_index":2375,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.entity.ts:16",{"_index":2483,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transfer.entity.ts:17",{"_index":2367,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.entity.ts:19",{"_index":2486,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transfer.entity.ts:20",{"_index":2370,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.entity.ts:22",{"_index":2484,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transfer.entity.ts:23",{"_index":2372,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.entity.ts:25",{"_index":2487,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transfer.entity.ts:26",{"_index":2373,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.entity.ts:28",{"_index":2482,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transfer.entity.ts:29",{"_index":2368,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.entity.ts:32",{"_index":2371,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer.receiveuser",{"_index":1488,"title":{},"body":{"entities/Customer.html":{}}}],["transfer.repository",{"_index":2891,"title":{},"body":{"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["transfer.repository.ts",{"_index":2381,"title":{},"body":{"classes/ReceiveTransferRepository.html":{},"classes/SendTransferRepository.html":{}}}],["transfer.senduser",{"_index":1498,"title":{},"body":{"entities/Customer.html":{}}}],["transfer/reserved",{"_index":2200,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["transfer_code",{"_index":1745,"title":{},"body":{"classes/FinalizeWithdrawalDto.html":{}}}],["transfer_types",{"_index":2376,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transfer_types.receive",{"_index":2378,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["transfer_types.request",{"_index":2863,"title":{},"body":{"entities/TransferRequest.html":{}}}],["transfer_types.send",{"_index":2489,"title":{},"body":{"entities/SendTransfer.html":{}}}],["transferfunds",{"_index":2902,"title":{},"body":{"injectables/TransfersService.html":{}}}],["transferrequest",{"_index":98,"title":{"entities/TransferRequest.html":{}},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{}}}],["transferrequestrepository",{"_index":2864,"title":{"classes/TransferRequestRepository.html":{}},"body":{"classes/TransferRequestRepository.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{}}}],["transfers",{"_index":2871,"title":{},"body":{"controllers/TransfersController.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{}}}],["transfers.controller",{"_index":2889,"title":{},"body":{"modules/TransfersModule.html":{}}}],["transfers.receivewallet",{"_index":3465,"title":{},"body":{"entities/Wallet.html":{}}}],["transfers.sendwallet",{"_index":3467,"title":{},"body":{"entities/Wallet.html":{}}}],["transfers.service",{"_index":2873,"title":{},"body":{"controllers/TransfersController.html":{},"modules/TransfersModule.html":{}}}],["transfers/transfers.module",{"_index":864,"title":{},"body":{"modules/AppModule.html":{}}}],["transferscontroller",{"_index":2869,"title":{"controllers/TransfersController.html":{}},"body":{"controllers/TransfersController.html":{},"modules/TransfersModule.html":{}}}],["transfersmodule",{"_index":852,"title":{"modules/TransfersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransfersModule.html":{},"modules.html":{},"overview.html":{}}}],["transfersservice",{"_index":2872,"title":{"injectables/TransfersService.html":{}},"body":{"controllers/TransfersController.html":{},"modules/TransfersModule.html":{},"injectables/TransfersService.html":{},"overview.html":{}}}],["transfertypes",{"_index":2374,"title":{},"body":{"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"miscellaneous/typealiases.html":{}}}],["transformer",{"_index":1345,"title":{},"body":{"classes/CreateSettingDto.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/User.html":{},"dependencies.html":{}}}],["true",{"_index":50,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"classes/Activity-1.html":{},"entities/Announcement.html":{},"modules/AppModule.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateVirtualAccountDto.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/LogService.html":{},"injectables/SeedingMiddleware.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":56,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/ReferralService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"injectables/TwillioService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["ttl",{"_index":919,"title":{},"body":{"modules/AppModule.html":{},"injectables/MonnifyService.html":{}}}],["tv_subscription",{"_index":3599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tv_subscription_activity",{"_index":542,"title":{},"body":{"classes/Activity.html":{}}}],["tvsubscription.dto",{"_index":3019,"title":{},"body":{"classes/UpdateTvsubscriptionDto.html":{}}}],["tvsubscription.dto.ts",{"_index":1374,"title":{},"body":{"classes/CreateTvsubscriptionDto.html":{},"classes/UpdateTvsubscriptionDto.html":{}}}],["tvsubscriptionactivities",{"_index":1464,"title":{},"body":{"entities/Customer.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{}}}],["tvsubscriptionactivity",{"_index":492,"title":{"entities/TvSubscriptionActivity.html":{}},"body":{"injectables/ActivitiesService.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"entities/Wallet.html":{}}}],["tvsubscriptionactivityrepository",{"_index":458,"title":{"classes/TvSubscriptionActivityRepository.html":{}},"body":{"modules/ActivitiesModule.html":{},"injectables/ActivitiesService.html":{},"classes/TvSubscriptionActivityRepository.html":{}}}],["twilio",{"_index":2618,"title":{},"body":{"injectables/SmsService.html":{},"injectables/TwillioService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["twilio(accountsid",{"_index":2951,"title":{},"body":{"injectables/TwillioService.html":{}}}],["twilioclient",{"_index":2936,"title":{},"body":{"injectables/TwillioService.html":{}}}],["twillio",{"_index":2922,"title":{"classes/Twillio.html":{}},"body":{"classes/Twillio.html":{},"controllers/TwillioController.html":{}}}],["twillio.controller",{"_index":2934,"title":{},"body":{"modules/TwillioModule.html":{}}}],["twillio.dto",{"_index":2927,"title":{},"body":{"controllers/TwillioController.html":{},"classes/UpdateTwillioDto.html":{}}}],["twillio.dto.ts",{"_index":1377,"title":{},"body":{"classes/CreateTwillioDto.html":{},"classes/UpdateTwillioDto.html":{}}}],["twillio.service",{"_index":2926,"title":{},"body":{"controllers/TwillioController.html":{},"modules/TwillioModule.html":{}}}],["twillio/twillio.module",{"_index":872,"title":{},"body":{"modules/AppModule.html":{}}}],["twillio_messaging_service_sid",{"_index":2954,"title":{},"body":{"injectables/TwillioService.html":{}}}],["twilliocontroller",{"_index":2924,"title":{"controllers/TwillioController.html":{}},"body":{"controllers/TwillioController.html":{},"modules/TwillioModule.html":{}}}],["twilliomodule",{"_index":853,"title":{"modules/TwillioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SmsModule.html":{},"modules/TwillioModule.html":{},"modules.html":{},"overview.html":{}}}],["twillioservice",{"_index":2610,"title":{"injectables/TwillioService.html":{}},"body":{"injectables/SmsService.html":{},"controllers/TwillioController.html":{},"modules/TwillioModule.html":{},"injectables/TwillioService.html":{},"overview.html":{}}}],["two",{"_index":3607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tx_ref",{"_index":1021,"title":{},"body":{"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateVirtualAccountDto.html":{},"injectables/FlutterwaveService.html":{},"injectables/TransactionsService.html":{},"classes/UssdDepositData.html":{}}}],["type",{"_index":21,"title":{},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"entities/Account.html":{},"controllers/AccountController.html":{},"injectables/AccountService.html":{},"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/AddBankAccountDTO.html":{},"entities/Admin.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"controllers/AnnouncementController.html":{},"classes/AnnouncementQueryDto.html":{},"injectables/AnnouncementService.html":{},"interfaces/ApiSuccessResponse.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"injectables/BankService.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/ConfirmPhoneNumberDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReferralDto.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomLogger.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"modules/DatabaseModule.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"entities/ElectricityBillActivity.html":{},"entities/Email.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"classes/FinalizeWithdrawalDto.html":{},"injectables/FlutterwaveService.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateWithdrawalData.html":{},"injectables/JwtAuthGaurd.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"entities/MobileDataActivity.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"entities/PaymentMerchant.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/QueryTransactionStatusDto.html":{},"entities/ReceiveTransfer.html":{},"entities/Referral.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"interfaces/RequiredRule.html":{},"interfaces/ReturnTypeContainer.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{},"entities/SendTransfer.html":{},"entities/Setting.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/TwillioService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateAccountDto.html":{},"classes/ValidateAirtimeDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyBvnDto.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"entities/Wallet.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3682,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":114,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["typeorm",{"_index":181,"title":{},"body":{"entities/Account.html":{},"classes/AccountRepository.html":{},"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"entities/Admin.html":{},"classes/AdminRepository.html":{},"injectables/AdminService.html":{},"entities/AirtimeActivity.html":{},"classes/AirtimeActivityRepository.html":{},"entities/Announcement.html":{},"classes/AnnouncementReository.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/CustomerKycRepository.html":{},"classes/CustomerRepository.html":{},"classes/DatabaseLogger.html":{},"entities/Deposit.html":{},"classes/DepositRepository.html":{},"entities/ElectricityBillActivity.html":{},"classes/ElectricityBillActivityRepository.html":{},"entities/Email.html":{},"injectables/EmailService.html":{},"classes/EntityContainer.html":{},"entities/Log.html":{},"injectables/LogService.html":{},"entities/Merchant.html":{},"entities/MobileDataActivity.html":{},"classes/MobileDataActivityRepository.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"classes/ReceiveTransferRepository.html":{},"entities/Referral.html":{},"classes/ReferralRepository.html":{},"entities/SeedingLogEntry.html":{},"injectables/SeedingMiddleware.html":{},"entities/SendTransfer.html":{},"classes/SendTransferRepository.html":{},"entities/Setting.html":{},"injectables/SettingsService.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{},"classes/Transfer.html":{},"entities/TransferRequest.html":{},"classes/TransferRequestRepository.html":{},"injectables/TransfersService.html":{},"entities/TvSubscriptionActivity.html":{},"classes/TvSubscriptionActivityRepository.html":{},"classes/User.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"dependencies.html":{}}}],["typeorm:migrate",{"_index":3750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm:run",{"_index":3751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeormhealthindicator",{"_index":1899,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormlogger",{"_index":1557,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["typeormmodule",{"_index":233,"title":{},"body":{"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/LogModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["typeormmodule.forfeature",{"_index":463,"title":{},"body":{"modules/ActivitiesModule.html":{},"modules/TransfersModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([accountrepository",{"_index":240,"title":{},"body":{"modules/AccountModule.html":{}}}],["typeormmodule.forfeature([activity",{"_index":651,"title":{},"body":{"modules/AdminModule.html":{}}}],["typeormmodule.forfeature([announcementreository",{"_index":801,"title":{},"body":{"modules/AnnouncementModule.html":{}}}],["typeormmodule.forfeature([email",{"_index":1688,"title":{},"body":{"modules/EmailModule.html":{}}}],["typeormmodule.forfeature([log",{"_index":2026,"title":{},"body":{"modules/LogModule.html":{}}}],["typeormmodule.forfeature([referralrepository",{"_index":2418,"title":{},"body":{"modules/ReferralModule.html":{}}}],["typeormmodule.forfeature([setting",{"_index":2553,"title":{},"body":{"modules/SettingsModule.html":{}}}],["typeormmodule.forfeature([walletrepository",{"_index":3494,"title":{},"body":{"modules/WalletModule.html":{}}}],["typeormmodule.forfeature([withdrawalrepository",{"_index":2715,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["typeormmodule.forrootasync",{"_index":1604,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":2968,"title":{},"body":{"classes/UpdateAccountDto.html":{},"classes/UpdateActivityDto.html":{},"classes/UpdateAirtimeDto.html":{},"classes/UpdateAnnouncementDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateElectricitybillDto.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMerchantApiDto.html":{},"classes/UpdateMobiledatumDto.html":{},"classes/UpdateMonnifyDto.html":{},"classes/UpdateNodemailerDto.html":{},"classes/UpdatePaystackDto.html":{},"classes/UpdateReferralDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSettingDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateTransferDto.html":{},"classes/UpdateTvsubscriptionDto.html":{},"classes/UpdateTwillioDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateVtpassDto.html":{},"classes/UpdateWalletDto.html":{},"dependencies.html":{}}}],["types/roles.type",{"_index":1987,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception",{"_index":2001,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unavailable",{"_index":1089,"title":{},"body":{"injectables/BankService.html":{},"injectables/TransactionsService.html":{}}}],["undefined",{"_index":712,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/Announcement.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/PaymentMerchant.html":{},"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"entities/Withdrawal.html":{}}}],["union",{"_index":540,"title":{},"body":{"classes/Activity.html":{},"injectables/TransactionsService.html":{}}}],["unique",{"_index":3043,"title":{},"body":{"classes/User.html":{}}}],["unknown",{"_index":266,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/AnnouncementService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/FlutterwaveService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogService.html":{},"injectables/MonnifyService.html":{},"injectables/NodemailerService.html":{},"injectables/PaystackService.html":{},"injectables/SeedingMiddleware.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["up",{"_index":3666,"title":{},"body":{"index.html":{}}}],["update",{"_index":368,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"injectables/TransactionsService.html":{},"controllers/TransfersController.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["update(@param('id",{"_index":3402,"title":{},"body":{"controllers/VtpassController.html":{}}}],["update(id",{"_index":399,"title":{},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["updateaccountdto",{"_index":211,"title":{"classes/UpdateAccountDto.html":{}},"body":{"controllers/AccountController.html":{},"classes/UpdateAccountDto.html":{}}}],["updateactivitydto",{"_index":400,"title":{"classes/UpdateActivityDto.html":{}},"body":{"controllers/ActivitiesController.html":{},"injectables/ActivitiesService.html":{},"classes/UpdateActivityDto.html":{}}}],["updateairtimedto",{"_index":2972,"title":{"classes/UpdateAirtimeDto.html":{}},"body":{"classes/UpdateAirtimeDto.html":{}}}],["updateannouncementdto",{"_index":768,"title":{"classes/UpdateAnnouncementDto.html":{}},"body":{"controllers/AnnouncementController.html":{},"injectables/AnnouncementService.html":{},"classes/UpdateAnnouncementDto.html":{}}}],["updateauthdto",{"_index":2977,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{}}}],["updatedat",{"_index":2509,"title":{},"body":{"entities/Setting.html":{}}}],["updatedatecolumn",{"_index":572,"title":{},"body":{"classes/Activity-1.html":{},"classes/EntityContainer.html":{},"entities/Setting.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["updateddate",{"_index":524,"title":{},"body":{"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/EntityContainer.html":{},"classes/Transaction.html":{},"classes/Transfer.html":{},"classes/User.html":{}}}],["updateelectricitybilldto",{"_index":2981,"title":{"classes/UpdateElectricitybillDto.html":{}},"body":{"classes/UpdateElectricitybillDto.html":{}}}],["updateemaildto",{"_index":1675,"title":{"classes/UpdateEmailDto.html":{}},"body":{"controllers/EmailController.html":{},"classes/UpdateEmailDto.html":{}}}],["updatehealthdto",{"_index":2986,"title":{"classes/UpdateHealthDto.html":{}},"body":{"classes/UpdateHealthDto.html":{}}}],["updatelogdto",{"_index":2017,"title":{"classes/UpdateLogDto.html":{}},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"classes/UpdateLogDto.html":{}}}],["updatemerchantapidto",{"_index":2054,"title":{"classes/UpdateMerchantApiDto.html":{}},"body":{"controllers/MerchantApiController.html":{},"injectables/MerchantApiService.html":{},"classes/UpdateMerchantApiDto.html":{}}}],["updatemobiledatumdto",{"_index":2994,"title":{"classes/UpdateMobiledatumDto.html":{}},"body":{"classes/UpdateMobiledatumDto.html":{}}}],["updatemonnifydto",{"_index":2089,"title":{"classes/UpdateMonnifyDto.html":{}},"body":{"controllers/MonnifyController.html":{},"classes/UpdateMonnifyDto.html":{}}}],["updatenodemailerdto",{"_index":3000,"title":{"classes/UpdateNodemailerDto.html":{}},"body":{"classes/UpdateNodemailerDto.html":{}}}],["updateone",{"_index":2522,"title":{},"body":{"controllers/SettingsController.html":{}}}],["updateone(settingname",{"_index":2534,"title":{},"body":{"controllers/SettingsController.html":{}}}],["updatepaystackdto",{"_index":2268,"title":{"classes/UpdatePaystackDto.html":{}},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/UpdatePaystackDto.html":{}}}],["updatereferraldto",{"_index":2399,"title":{"classes/UpdateReferralDto.html":{}},"body":{"controllers/ReferralController.html":{},"injectables/ReferralService.html":{},"classes/UpdateReferralDto.html":{}}}],["updateroledto",{"_index":3008,"title":{"classes/UpdateRoleDto.html":{}},"body":{"classes/UpdateRoleDto.html":{}}}],["updates",{"_index":2077,"title":{},"body":{"injectables/MerchantApiService.html":{},"injectables/PaystackService.html":{},"injectables/ReferralService.html":{},"injectables/VtpassService.html":{}}}],["updatesetting",{"_index":2559,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesetting(name",{"_index":2570,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettingdto",{"_index":683,"title":{"classes/UpdateSettingDto.html":{}},"body":{"injectables/AdminService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UpdateSettingDto.html":{}}}],["updatestatus",{"_index":2660,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["updatestatus(body",{"_index":2675,"title":{},"body":{"controllers/TransactionsController.html":{}}}],["updatetransactiondto",{"_index":2681,"title":{"classes/UpdateTransactionDto.html":{}},"body":{"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"classes/UpdateTransactionDto.html":{}}}],["updatetransactionstatus",{"_index":2721,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetransactionstatus(reference",{"_index":2732,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["updatetransferdto",{"_index":2874,"title":{"classes/UpdateTransferDto.html":{}},"body":{"controllers/TransfersController.html":{},"injectables/TransfersService.html":{},"classes/UpdateTransferDto.html":{}}}],["updatetvsubscriptiondto",{"_index":3017,"title":{"classes/UpdateTvsubscriptionDto.html":{}},"body":{"classes/UpdateTvsubscriptionDto.html":{}}}],["updatetwilliodto",{"_index":2928,"title":{"classes/UpdateTwillioDto.html":{}},"body":{"controllers/TwillioController.html":{},"classes/UpdateTwillioDto.html":{}}}],["updateuserdto",{"_index":3022,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["updatevtpassdto",{"_index":3025,"title":{"classes/UpdateVtpassDto.html":{}},"body":{"classes/UpdateVtpassDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["updatewalletdto",{"_index":3029,"title":{"classes/UpdateWalletDto.html":{}},"body":{"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["url/webhooks",{"_index":2792,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["use",{"_index":1907,"title":{},"body":{"controllers/HealthController.html":{},"injectables/SeedingMiddleware.html":{},"injectables/UserService.html":{}}}],["use(req",{"_index":2450,"title":{},"body":{"injectables/SeedingMiddleware.html":{}}}],["useclass",{"_index":925,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1918,"title":{},"body":{"controllers/HealthController.html":{}}}],["usefactory",{"_index":977,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["useguards",{"_index":201,"title":{},"body":{"controllers/AccountController.html":{},"controllers/ActivitiesController.html":{},"controllers/AuthController.html":{},"controllers/SmsController.html":{},"controllers/TransactionsController.html":{},"controllers/TransfersController.html":{},"controllers/UserController.html":{}}}],["useguards(abilitiesguard",{"_index":3103,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthgaurd",{"_index":416,"title":{},"body":{"controllers/ActivitiesController.html":{},"controllers/TransfersController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthgaurd)@post('bouquet_change_dstv_gotv",{"_index":371,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["useguards(jwtauthgaurd)@post('bouquet_renew_dstv_gotv",{"_index":374,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["useguards(jwtauthgaurd)@post('buy_airtime",{"_index":378,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["useguards(jwtauthgaurd)@post('buy_data",{"_index":387,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["useguards(jwtauthgaurd)@post('buy_electricity",{"_index":382,"title":{},"body":{"controllers/ActivitiesController.html":{}}}],["useguards(localauthgaurd",{"_index":951,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthgaurd)@public()@post('login/admin",{"_index":933,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthgaurd)@public()@post('login/user",{"_index":936,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(permissionguard(permission.edit",{"_index":216,"title":{},"body":{"controllers/AccountController.html":{}}}],["useinterceptors",{"_index":942,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankController.html":{},"controllers/MonnifyController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":1060,"title":{},"body":{"controllers/BankController.html":{}}}],["user",{"_index":51,"title":{"classes/User.html":{}},"body":{"guards/AbilitiesGuard.html":{},"injectables/AbilityFactory.html":{},"entities/Account.html":{},"injectables/AccountService.html":{},"injectables/ActivitiesService.html":{},"entities/Admin.html":{},"entities/AirtimeActivity.html":{},"controllers/AnnouncementController.html":{},"injectables/AuthService.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"entities/CustomerKyc.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"entities/Deposit.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"entities/ElectricityBillActivity.html":{},"injectables/JwtStrategy.html":{},"entities/MobileDataActivity.html":{},"injectables/NodemailerService.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/ReceiveTransfer.html":{},"interfaces/RequiredRule.html":{},"entities/SendTransfer.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"entities/TransferRequest.html":{},"entities/TvSubscriptionActivity.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{}}}],["user.airtimeactivities",{"_index":714,"title":{},"body":{"entities/AirtimeActivity.html":{}}}],["user.controller",{"_index":3110,"title":{},"body":{"modules/UserModule.html":{}}}],["user.data.wallet.id",{"_index":3524,"title":{},"body":{"injectables/WalletService.html":{}}}],["user.dto",{"_index":615,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1378,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1383,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":1382,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":1385,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":1388,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":1389,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.electricitybillactivities",{"_index":1660,"title":{},"body":{"entities/ElectricityBillActivity.html":{}}}],["user.email",{"_index":778,"title":{},"body":{"controllers/AnnouncementController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":1515,"title":{},"body":{"entities/Customer.html":{}}}],["user.id",{"_index":1008,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.level",{"_index":125,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["user.mobiledataactivities",{"_index":2079,"title":{},"body":{"entities/MobileDataActivity.html":{}}}],["user.password",{"_index":1002,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.pin",{"_index":1006,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.receivedrequests",{"_index":2859,"title":{},"body":{"entities/TransferRequest.html":{}}}],["user.receivedtransfers",{"_index":2366,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["user.role",{"_index":120,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["user.roles",{"_index":69,"title":{},"body":{"guards/AbilitiesGuard.html":{}}}],["user.sentrequests",{"_index":2856,"title":{},"body":{"entities/TransferRequest.html":{}}}],["user.senttransfers",{"_index":2480,"title":{},"body":{"entities/SendTransfer.html":{}}}],["user.service",{"_index":3076,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.tvsubscriptionactivities",{"_index":2915,"title":{},"body":{"entities/TvSubscriptionActivity.html":{}}}],["user.user.email",{"_index":507,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["user.user['wallets'].find",{"_index":508,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["user.wallet[0].balance",{"_index":2739,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["user/user.module",{"_index":858,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TransfersModule.html":{},"modules/WalletModule.html":{}}}],["user/user.service",{"_index":997,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TransfersService.html":{}}}],["user_actions",{"_index":84,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user_levels",{"_index":86,"title":{},"body":{"injectables/AbilityFactory.html":{},"entities/Customer.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["user_levels.one",{"_index":3223,"title":{},"body":{"injectables/UserService.html":{}}}],["user_levels.suspended",{"_index":130,"title":{},"body":{"injectables/AbilityFactory.html":{}}}],["user_levels.zero",{"_index":126,"title":{},"body":{"injectables/AbilityFactory.html":{},"entities/Customer.html":{}}}],["user_roles",{"_index":87,"title":{},"body":{"injectables/AbilityFactory.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["user_roles.admin",{"_index":119,"title":{},"body":{"injectables/AbilityFactory.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["user_roles.customer",{"_index":124,"title":{},"body":{"injectables/AbilityFactory.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["useraccounts",{"_index":2041,"title":{},"body":{"entities/Merchant.html":{}}}],["useractions",{"_index":83,"title":{},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"miscellaneous/typealiases.html":{}}}],["usercontroller",{"_index":3044,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userid",{"_index":157,"title":{},"body":{"entities/Account.html":{},"injectables/AccountService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"injectables/AdminService.html":{},"classes/CreateAccountDto.html":{},"entities/CustomerKyc.html":{},"classes/Transaction.html":{},"injectables/TransactionsService.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{}}}],["userinfo",{"_index":2735,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["userlevels",{"_index":1477,"title":{},"body":{"entities/Customer.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule",{"_index":229,"title":{"modules/UserModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/SmsModule.html":{},"modules/TransfersModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":1608,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":2004,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpin",{"_index":3737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userroles",{"_index":3687,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":261,"title":{"injectables/UserService.html":{}},"body":{"injectables/AccountService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtStrategy.html":{},"injectables/SmsService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["ussddepositdata",{"_index":1040,"title":{"classes/UssdDepositData.html":{}},"body":{"classes/AuthorizeDepositData.html":{},"injectables/FlutterwaveService.html":{},"classes/UssdDepositData.html":{}}}],["ussddepositdto",{"_index":1038,"title":{"classes/UssdDepositDto.html":{}},"body":{"classes/AuthorizeDepositData.html":{},"injectables/FlutterwaveService.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{}}}],["ussddepositdto:10",{"_index":3254,"title":{},"body":{"classes/UssdDepositData.html":{}}}],["ussddepositdto:14",{"_index":3255,"title":{},"body":{"classes/UssdDepositData.html":{}}}],["ussddepositdto:18",{"_index":3256,"title":{},"body":{"classes/UssdDepositData.html":{}}}],["ussddepositdto:22",{"_index":3257,"title":{},"body":{"classes/UssdDepositData.html":{}}}],["ussddepositdto:6",{"_index":3253,"title":{},"body":{"classes/UssdDepositData.html":{}}}],["utf",{"_index":1884,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["v",{"_index":3672,"title":{},"body":{"index.html":{}}}],["v3",{"_index":1801,"title":{},"body":{"injectables/FlutterwaveService.html":{},"dependencies.html":{}}}],["valid",{"_index":2803,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["validate",{"_index":1978,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":1999,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1980,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateaccountbvnmatch",{"_index":2112,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["validateaccountbvnmatch(undefined",{"_index":2135,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["validateaccountdto",{"_index":3259,"title":{"classes/ValidateAccountDto.html":{}},"body":{"classes/ValidateAccountDto.html":{}}}],["validateaccountname",{"_index":255,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MonnifyService.html":{}}}],["validateaccountnumber",{"_index":2113,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["validateaccountnumber(undefined",{"_index":2137,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["validateaccountwithbvn",{"_index":2101,"title":{},"body":{"injectables/MonnifyService.html":{}}}],["validateairtimedto",{"_index":3263,"title":{"classes/ValidateAirtimeDto.html":{}},"body":{"classes/ValidateAirtimeDto.html":{}}}],["validatebillservice",{"_index":1837,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["validatecarddeposit(validatedepositdto",{"_index":1861,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["validatedepositdto",{"_index":1795,"title":{"classes/ValidateDepositDto.html":{}},"body":{"injectables/FlutterwaveService.html":{},"classes/ValidateDepositDto.html":{}}}],["validatepin(id",{"_index":1003,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":985,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":995,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationschema",{"_index":897,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":584,"title":{},"body":{"classes/AddBankAccountDTO.html":{},"classes/AnnouncementQueryDto.html":{},"classes/AuthorizeDepositData.html":{},"classes/AuthorizeDepositDto.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyAirtimeDto.html":{},"classes/BuyAirtimeDto-1.html":{},"classes/BuyAirtimeDto-2.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAnnouncementDto.html":{},"classes/CreateBillDto.html":{},"classes/CreateEmailDto.html":{},"classes/CreateReferralDto.html":{},"classes/CreateReservedAccountDto.html":{},"classes/CreateReservedAccountDto-1.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateTransferRecipientDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateVirtualAccountDto.html":{},"classes/FWWithdrawalDto.html":{},"classes/FinalizeWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateDepositDto.html":{},"classes/InitiateMNTransferDto.html":{},"classes/InitiateWithdrawalData.html":{},"classes/InitiateWithdrawalDto.html":{},"classes/QueryTransactionStatusDto.html":{},"classes/SetPinDTO.html":{},"classes/TransactionDto.html":{},"classes/TransactionQueryDto.html":{},"classes/UssdDepositData.html":{},"classes/UssdDepositDto.html":{},"classes/ValidateDepositDto.html":{},"classes/VerifyAccountNumberDto-1.html":{},"classes/VerifyEmailDTO.html":{},"classes/VerifySmartCardDto.html":{},"classes/VerifySmileEmailDto.html":{},"classes/VerifySmilePhoneDto.html":{},"classes/VerifyTransactionDto.html":{},"dependencies.html":{}}}],["value",{"_index":1292,"title":{},"body":{"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateSettingDto.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"classes/DatabaseLogger.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"entities/Setting.html":{},"injectables/TransactionsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":3663,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["variation['variation_code",{"_index":513,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["variation_amount",{"_index":515,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["variation_code",{"_index":550,"title":{},"body":{"classes/Activity-1.html":{},"classes/BouquetChangeDto.html":{},"classes/BouquetRenewalDto.html":{},"classes/BuyDSTVGOTV.html":{},"classes/BuyDSTVGOTV-1.html":{},"classes/BuyDataDto.html":{},"classes/BuyDataDto-1.html":{},"classes/BuyDataDto-2.html":{},"classes/BuyElectricityDto.html":{},"classes/BuyElectricityDto-1.html":{},"classes/BuyElectricityDto-2.html":{},"classes/BuyShowmaxDto.html":{},"classes/BuyShowmaxStartimesDto.html":{},"classes/BuyShowmaxStartimesDto-1.html":{},"classes/BuyStartimesDto.html":{},"classes/BuyWAECDto.html":{}}}],["variations?serviceid=${serviceid",{"_index":3451,"title":{},"body":{"injectables/VtpassService.html":{}}}],["verbose",{"_index":1415,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["verbose(message",{"_index":1431,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["verification",{"_index":1720,"title":{},"body":{"injectables/EmailService.html":{},"controllers/UserController.html":{}}}],["verificationchecks.create",{"_index":2959,"title":{},"body":{"injectables/TwillioService.html":{}}}],["verificationcode",{"_index":2615,"title":{},"body":{"injectables/SmsService.html":{},"injectables/TwillioService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifications",{"_index":3219,"title":{},"body":{"injectables/UserService.html":{}}}],["verifications.create",{"_index":2957,"title":{},"body":{"injectables/TwillioService.html":{}}}],["verified",{"_index":3243,"title":{},"body":{"injectables/UserService.html":{}}}],["verify",{"_index":3457,"title":{},"body":{"injectables/VtpassService.html":{}}}],["verify/smile/email",{"_index":3456,"title":{},"body":{"injectables/VtpassService.html":{}}}],["verify/smile/phone",{"_index":3455,"title":{},"body":{"injectables/VtpassService.html":{}}}],["verifyaccountnumber",{"_index":2250,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["verifyaccountnumber(@param",{"_index":2288,"title":{},"body":{"controllers/PaystackController.html":{}}}],["verifyaccountnumber(accountnumber",{"_index":1850,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["verifyaccountnumber(params",{"_index":2270,"title":{},"body":{"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["verifyaccountnumberdto",{"_index":1054,"title":{"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{}},"body":{"controllers/BankController.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{},"classes/VerifyAccountNumberDto.html":{},"classes/VerifyAccountNumberDto-1.html":{}}}],["verifybvn",{"_index":256,"title":{},"body":{"injectables/AccountService.html":{}}}],["verifybvn(accountnumber",{"_index":279,"title":{},"body":{"injectables/AccountService.html":{}}}],["verifybvn(bvn",{"_index":1846,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["verifybvndto",{"_index":1057,"title":{"classes/VerifyBvnDto.html":{}},"body":{"controllers/BankController.html":{},"classes/VerifyBvnDto.html":{}}}],["verifyemail",{"_index":3052,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyemail(@body",{"_index":3097,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyemail(code",{"_index":3154,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyemail(verifyemaildto",{"_index":3071,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyemaildto",{"_index":3072,"title":{"classes/VerifyEmailDTO.html":{}},"body":{"controllers/UserController.html":{},"classes/VerifyEmailDTO.html":{}}}],["verifymail",{"_index":1693,"title":{},"body":{"injectables/EmailService.html":{}}}],["verifymail(code",{"_index":1704,"title":{},"body":{"injectables/EmailService.html":{}}}],["verifyphonenumberotp",{"_index":2608,"title":{},"body":{"injectables/SmsService.html":{},"injectables/UserService.html":{}}}],["verifyphonenumberotp(phonenumber",{"_index":2614,"title":{},"body":{"injectables/SmsService.html":{}}}],["verifyphoneotp(@request",{"_index":3101,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyreferralcode",{"_index":3129,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyreferralcode(referralcode",{"_index":3156,"title":{},"body":{"injectables/UserService.html":{}}}],["verifysmartcarddto",{"_index":3281,"title":{"classes/VerifySmartCardDto.html":{}},"body":{"classes/VerifySmartCardDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmartcardnumber",{"_index":3311,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmartcardnumber(@body",{"_index":3385,"title":{},"body":{"controllers/VtpassController.html":{}}}],["verifysmartcardnumber(verifysmartcarddto",{"_index":3351,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmileemail",{"_index":3312,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmileemail(@body",{"_index":3383,"title":{},"body":{"controllers/VtpassController.html":{}}}],["verifysmileemail(verifysmileemaildto",{"_index":3354,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmileemaildto",{"_index":3287,"title":{"classes/VerifySmileEmailDto.html":{}},"body":{"classes/VerifySmileEmailDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmilephone",{"_index":3313,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmilephone(@body",{"_index":3381,"title":{},"body":{"controllers/VtpassController.html":{}}}],["verifysmilephone(verifysmilephonedto",{"_index":3357,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifysmilephonedto",{"_index":3292,"title":{"classes/VerifySmilePhoneDto.html":{}},"body":{"classes/VerifySmilePhoneDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["verifytransaction",{"_index":2304,"title":{},"body":{"injectables/PaystackService.html":{}}}],["verifytransaction(id",{"_index":1864,"title":{},"body":{"injectables/FlutterwaveService.html":{}}}],["verifytransaction(reference",{"_index":2320,"title":{},"body":{"injectables/PaystackService.html":{}}}],["verifytransactiondto",{"_index":2683,"title":{"classes/VerifyTransactionDto.html":{}},"body":{"controllers/TransactionsController.html":{},"classes/VerifyTransactionDto.html":{}}}],["viewcolumn",{"_index":525,"title":{},"body":{"classes/Activity.html":{}}}],["viewentity",{"_index":536,"title":{},"body":{"classes/Activity.html":{}}}],["virtual",{"_index":1395,"title":{},"body":{"classes/CreateVirtualAccountDto.html":{},"injectables/TransactionsService.html":{}}}],["virtual_account",{"_index":3596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":1425,"title":{},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"injectables/SeedingMiddleware.html":{},"modules/SeedingModule.html":{}}}],["vtpass",{"_index":3297,"title":{"classes/Vtpass.html":{}},"body":{"classes/Vtpass.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{},"miscellaneous/enumerations.html":{}}}],["vtpass.controller",{"_index":3409,"title":{},"body":{"modules/VtpassModule.html":{}}}],["vtpass.dto",{"_index":3027,"title":{},"body":{"classes/UpdateVtpassDto.html":{},"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["vtpass.dto.ts",{"_index":1402,"title":{},"body":{"classes/CreateVtpassDto.html":{},"classes/UpdateVtpassDto.html":{}}}],["vtpass.service",{"_index":3360,"title":{},"body":{"controllers/VtpassController.html":{},"modules/VtpassModule.html":{}}}],["vtpass/vtpass.module",{"_index":867,"title":{},"body":{"modules/AppModule.html":{}}}],["vtpasscontroller",{"_index":3299,"title":{"controllers/VtpassController.html":{}},"body":{"controllers/VtpassController.html":{},"modules/VtpassModule.html":{}}}],["vtpassmodule",{"_index":446,"title":{"modules/VtpassModule.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules/AppModule.html":{},"modules/VtpassModule.html":{},"modules.html":{},"overview.html":{}}}],["vtpassservice",{"_index":468,"title":{"injectables/VtpassService.html":{}},"body":{"injectables/ActivitiesService.html":{},"controllers/VtpassController.html":{},"modules/VtpassModule.html":{},"injectables/VtpassService.html":{},"overview.html":{}}}],["waec.dto",{"_index":3370,"title":{},"body":{"controllers/VtpassController.html":{},"injectables/VtpassService.html":{}}}],["waec.dto.ts",{"_index":1218,"title":{},"body":{"classes/BuyWAECDto.html":{}}}],["waec.dto.ts:11",{"_index":1222,"title":{},"body":{"classes/BuyWAECDto.html":{}}}],["waec.dto.ts:16",{"_index":1219,"title":{},"body":{"classes/BuyWAECDto.html":{}}}],["waec.dto.ts:20",{"_index":1220,"title":{},"body":{"classes/BuyWAECDto.html":{}}}],["waec.dto.ts:24",{"_index":1223,"title":{},"body":{"classes/BuyWAECDto.html":{}}}],["waec.dto.ts:7",{"_index":1221,"title":{},"body":{"classes/BuyWAECDto.html":{}}}],["wallet",{"_index":106,"title":{"entities/Wallet.html":{}},"body":{"injectables/AbilityFactory.html":{},"injectables/ActivitiesService.html":{},"entities/AirtimeActivity.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"entities/Deposit.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{},"entities/ReceiveTransfer.html":{},"entities/SendTransfer.html":{},"injectables/TransactionsService.html":{},"entities/TvSubscriptionActivity.html":{},"injectables/UserService.html":{},"entities/Wallet.html":{},"controllers/WalletController.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{},"entities/Withdrawal.html":{}}}],["wallet.balance",{"_index":512,"title":{},"body":{"injectables/ActivitiesService.html":{},"injectables/WalletService.html":{}}}],["wallet.controller",{"_index":3491,"title":{},"body":{"modules/WalletModule.html":{}}}],["wallet.dto",{"_index":3031,"title":{},"body":{"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["wallet.dto.ts",{"_index":1405,"title":{},"body":{"classes/CreateWalletDto.html":{},"classes/UpdateWalletDto.html":{}}}],["wallet.mobiledataactivities",{"_index":716,"title":{},"body":{"entities/AirtimeActivity.html":{},"entities/ElectricityBillActivity.html":{},"entities/MobileDataActivity.html":{}}}],["wallet.receivedtransfers",{"_index":2369,"title":{},"body":{"entities/ReceiveTransfer.html":{}}}],["wallet.senttransfers",{"_index":2485,"title":{},"body":{"entities/SendTransfer.html":{}}}],["wallet.service",{"_index":3481,"title":{},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{}}}],["wallet.tvsubscriptionactivities",{"_index":2917,"title":{},"body":{"entities/TvSubscriptionActivity.html":{}}}],["wallet.user",{"_index":1501,"title":{},"body":{"entities/Customer.html":{}}}],["wallet.withdrawals",{"_index":1637,"title":{},"body":{"entities/Deposit.html":{},"entities/Withdrawal.html":{}}}],["wallet/wallet.module",{"_index":861,"title":{},"body":{"modules/AppModule.html":{}}}],["wallet['id",{"_index":517,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["wallet['type",{"_index":509,"title":{},"body":{"injectables/ActivitiesService.html":{}}}],["wallet_id",{"_index":1735,"title":{},"body":{"classes/FWWithdrawalDto.html":{}}}],["wallet_types",{"_index":3162,"title":{},"body":{"injectables/UserService.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["wallet_types.naira",{"_index":3190,"title":{},"body":{"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["walletbalance",{"_index":693,"title":{},"body":{"injectables/AdminService.html":{}}}],["walletcontroller",{"_index":3478,"title":{"controllers/WalletController.html":{}},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{}}}],["walletid",{"_index":516,"title":{},"body":{"injectables/ActivitiesService.html":{},"classes/Activity.html":{},"classes/Activity-1.html":{},"classes/Transaction.html":{},"classes/TransactionDto.html":{},"injectables/WalletService.html":{}}}],["walletmodule",{"_index":447,"title":{"modules/WalletModule.html":{}},"body":{"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletrepository",{"_index":3492,"title":{"classes/WalletRepository.html":{}},"body":{"modules/WalletModule.html":{},"classes/WalletRepository.html":{},"injectables/WalletService.html":{}}}],["wallets",{"_index":1465,"title":{},"body":{"entities/Customer.html":{},"classes/CustomerRepository.html":{},"injectables/UserService.html":{}}}],["walletservice",{"_index":469,"title":{"injectables/WalletService.html":{}},"body":{"injectables/ActivitiesService.html":{},"injectables/AdminService.html":{},"injectables/TransactionsService.html":{},"injectables/TransfersService.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["wallettypes",{"_index":3470,"title":{},"body":{"entities/Wallet.html":{},"miscellaneous/typealiases.html":{}}}],["warn",{"_index":1416,"title":{},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{}}}],["warn(message",{"_index":1433,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["where('deposit.currency",{"_index":2762,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["where('transaction.currency",{"_index":2786,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["where('wallet.type",{"_index":3533,"title":{},"body":{"injectables/WalletService.html":{}}}],["where('withdrawal.currency",{"_index":2757,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["where(`user.id",{"_index":2777,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["withdraw(withdrawaldto",{"_index":2815,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["withdrawal",{"_index":91,"title":{"entities/Withdrawal.html":{}},"body":{"injectables/AbilityFactory.html":{},"classes/CreateReceiveTransferPermission.html":{},"classes/CreateSendTransferPermission.html":{},"classes/CreateTransferRequestPermission.html":{},"classes/CreateUserPermission.html":{},"classes/CreateWithdrawalPermission.html":{},"entities/Customer.html":{},"modules/DatabaseModule.html":{},"classes/DeleteReceiveTransferPermission.html":{},"classes/DeleteSendTransferPermission.html":{},"classes/DeleteTransferRequestPermission.html":{},"classes/DeleteUserPermission.html":{},"classes/DeleteWithdrawalPermission.html":{},"classes/DepositRepository.html":{},"classes/EditReceiveTransferPermission.html":{},"classes/EditSendTransferPermission.html":{},"classes/EditTransferRequestPermission.html":{},"classes/EditUserPermission.html":{},"classes/EditWithdrawalPermission.html":{},"classes/ReadReceiveTransferPermission.html":{},"classes/ReadSendTransferPermission.html":{},"classes/ReadTransferRequestPermission.html":{},"classes/ReadUserPermission.html":{},"classes/ReadWithdrawalPermission.html":{},"interfaces/RequiredRule.html":{},"controllers/TransactionsController.html":{},"injectables/TransactionsService.html":{},"entities/Wallet.html":{},"entities/Withdrawal.html":{},"classes/WithdrawalRepository.html":{},"miscellaneous/enumerations.html":{}}}],["withdrawal.dto",{"_index":1797,"title":{},"body":{"injectables/FlutterwaveService.html":{},"classes/InitiateWithdrawalData.html":{},"controllers/PaystackController.html":{},"injectables/PaystackService.html":{}}}],["withdrawal.dto.ts",{"_index":1743,"title":{},"body":{"classes/FinalizeWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["withdrawal.dto.ts:10",{"_index":1746,"title":{},"body":{"classes/FinalizeWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["withdrawal.dto.ts:14",{"_index":1935,"title":{},"body":{"classes/InitializeWithdrawalDto.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["withdrawal.dto.ts:18",{"_index":1936,"title":{},"body":{"classes/InitializeWithdrawalDto.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["withdrawal.dto.ts:22",{"_index":1964,"title":{},"body":{"classes/InitiateWithdrawalDto.html":{}}}],["withdrawal.dto.ts:26",{"_index":1963,"title":{},"body":{"classes/InitiateWithdrawalDto.html":{}}}],["withdrawal.dto.ts:6",{"_index":1747,"title":{},"body":{"classes/FinalizeWithdrawalDto.html":{},"classes/InitializeWithdrawalDto.html":{},"classes/InitiateWithdrawalDto.html":{}}}],["withdrawal.user",{"_index":1503,"title":{},"body":{"entities/Customer.html":{}}}],["withdrawaldto",{"_index":2816,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["withdrawalquery",{"_index":2768,"title":{},"body":{"injectables/TransactionsService.html":{}}}],["withdrawalrepository",{"_index":2712,"title":{"classes/WithdrawalRepository.html":{}},"body":{"modules/TransactionsModule.html":{},"injectables/TransactionsService.html":{},"classes/WithdrawalRepository.html":{}}}],["withdrawals",{"_index":1466,"title":{},"body":{"entities/Customer.html":{},"injectables/TransactionsService.html":{},"entities/Wallet.html":{}}}],["withdrawals.wallet",{"_index":3475,"title":{},"body":{"entities/Wallet.html":{}}}],["yes",{"_index":1424,"title":{},"body":{"injectables/CustomLogger.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{}}}],["yyyymmdd",{"_index":3647,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["zero",{"_index":3603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zoom",{"_index":141,"title":{},"body":{"modules/AbilityModule.html":{},"modules/AccountModule.html":{},"modules/ActivitiesModule.html":{},"modules/AdminModule.html":{},"modules/AnnouncementModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankModule.html":{},"modules/EmailModule.html":{},"modules/FlutterwaveModule.html":{},"modules/LogModule.html":{},"modules/MerchantApiModule.html":{},"modules/MonnifyModule.html":{},"modules/NodemailerModule.html":{},"modules/PaystackModule.html":{},"modules/ReferralModule.html":{},"modules/SettingsModule.html":{},"modules/SmsModule.html":{},"modules/TransactionsModule.html":{},"modules/TransfersModule.html":{},"modules/TwillioModule.html":{},"modules/UserModule.html":{},"modules/VtpassModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbilitiesGuard.html":{"url":"guards/AbilitiesGuard.html","title":"guard - AbilitiesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbilitiesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/ability/abilities.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, caslAbilityFactory: AbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/ability/abilities.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        AbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/ability/abilities.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { ForbiddenError } from '@casl/ability';\nimport {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { CHECK_ABILITY, RequiredRule } from './abilities.decorator';\nimport { AbilityFactory } from './ability.factory';\n\n@Injectable()\nexport class AbilitiesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private caslAbilityFactory: AbilityFactory,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const rules =\n      this.reflector.get(CHECK_ABILITY, context.getHandler()) ||\n      [];\n\n    if (!rules.length) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n\n    //    console.log(context.switchToHttp().getRequest());\n\n    const ability = this.caslAbilityFactory.defineAbility(user);\n\n    try {\n      rules.forEach((rule) => {\n        ForbiddenError.from(ability).throwUnlessCan(rule.action, rule.subject);\n      });\n\n      return true;\n    } catch (error) {\n      if (error instanceof ForbiddenError) {\n        throw new ForbiddenException(error.message);\n      }\n    }\n\n    // const roles = this.reflector.get('roles', context.getHandler());\n    // if (!roles) {\n    //   return true;\n    // }\n\n    // return matchRoles(roles, user.roles);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbilityFactory.html":{"url":"injectables/AbilityFactory.html","title":"injectable - AbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/ability.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAbility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defineAbility\n                        \n                    \n                \n            \n            \n                \ndefineAbility(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/ability/ability.factory.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Ability,\n  AbilityBuilder,\n  AbilityClass,\n  createAliasResolver,\n  ExtractSubjectType,\n  InferSubjects,\n} from '@casl/ability';\nimport { Injectable } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { USER_LEVELS, USER_ROLES } from 'src/common/types/roles.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { ReceiveTransfer } from 'src/transfers/entities/receive-transfer.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\n\nconst { CREATE, MANAGE, EDIT, DELETE, READ } = USER_ACTIONS;\n\ntype InferredTypes =\n  | typeof Customer\n  | typeof SendTransfer\n  | typeof ReceiveTransfer\n  | typeof TransferRequest\n  | typeof Withdrawal\n  | typeof Wallet;\n\nexport type Subjects = InferSubjects | 'all';\n\nexport type AppAbility = Ability;\n\n@Injectable()\nexport class AbilityFactory {\n  defineAbility(data: any) {\n    const { can, cannot, build } = new AbilityBuilder(\n      Ability as AbilityClass,\n    );\n\n    const { user, role } = data;\n\n    // if (role === USER_ROLES.ADMIN) {\n    //   if (user.role === ADMIN_ROLES.ADMIN) {\n    //     can(MANAGE, 'all');\n    //   }\n\n    //   if (user.role === ADMIN_ROLES.SUPPORT) {\n    //     can(MANAGE, 'all');\n    //   }\n    // }\n\n    if (role === USER_ROLES.CUSTOMER) {\n      if (user.level === USER_LEVELS.ZERO) {\n        can([READ, EDIT, DELETE], Customer);\n        can(READ, [\n          Wallet,\n          SendTransfer,\n          ReceiveTransfer,\n          TransferRequest,\n          Withdrawal,\n        ]);\n        can(CREATE, [\n          Wallet,\n          SendTransfer,\n          ReceiveTransfer,\n          TransferRequest,\n          Withdrawal,\n        ]);\n      }\n\n      if (user.level === USER_LEVELS.SUSPENDED) {\n        can(READ, [\n          Customer,\n          Wallet,\n          SendTransfer,\n          ReceiveTransfer,\n          TransferRequest,\n          Withdrawal,\n        ]);\n      }\n    }\n\n    return build({\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AbilityModule.html":{"url":"modules/AbilityModule.html","title":"module - AbilityModule","body":"\n                   \n\n\n\n\n    Modules\n    AbilityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AbilityModule\n\n\n\ncluster_AbilityModule_exports\n\n\n\ncluster_AbilityModule_providers\n\n\n\n\nAbilityFactory \n\nAbilityFactory \n\n\n\nAbilityModule\n\nAbilityModule\n\nAbilityFactory  -->\n\nAbilityModule->AbilityFactory \n\n\n\n\n\nAbilityFactory\n\nAbilityFactory\n\nAbilityModule -->\n\nAbilityFactory->AbilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ability/ability.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AbilityFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AbilityFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AbilityFactory } from './ability.factory';\n\n@Module({\n  providers: [AbilityFactory],\n  exports: [AbilityFactory],\n})\nexport class AbilityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Account.html":{"url":"entities/Account.html","title":"entity - Account","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/entities/account.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accountName\n                            \n                            \n                                    Public\n                                accountNumber\n                            \n                            \n                                    Public\n                                bankCode\n                            \n                            \n                                    Public\n                                merchant\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accountName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/entities/account.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/entities/account.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bankCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/entities/account.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        merchant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentMerchant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, merchant => merchant.accounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/entities/account.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/entities/account.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, customer => customer.accounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/entities/account.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/entities/account.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { AccountTypes } from 'src/common/types/account.type';\nimport { EntityContainer } from 'src/common/types/entity';\nimport { PaymentMerchant } from 'src/settings/entities/payment-merchant.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Column, Entity, ManyToMany, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class Account extends EntityContainer {\n  @Column()\n  public accountName: string;\n\n  @Column()\n  public bankCode: string;\n\n  @Column()\n  public accountNumber: string;\n\n  @Column()\n  public userId: number;\n\n  @ManyToOne(() => Customer, (customer: Customer) => customer.accounts)\n  public user: Customer;\n\n  @Column()\n  public type: AccountTypes;\n\n  @ManyToOne(\n    () => PaymentMerchant,\n    (merchant: PaymentMerchant) => merchant.accounts,\n  )\n  public merchant: PaymentMerchant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountController.html":{"url":"controllers/AccountController.html","title":"controller - AccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                account\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addBankAccount\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBankAccount\n                        \n                    \n                \n            \n            \n                \naddBankAccount(addBankAccountDto: AddBankAccountDTO, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/account/account.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addBankAccountDto\n                                    \n                                                AddBankAccountDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/account/account.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/account/account.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport { AccountService } from './account.service';\nimport { AddBankAccountDTO } from './dto/add-bank-accoiunt.dto';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { UpdateAccountDto } from './dto/update-account.dto';\n\n@Controller('account')\nexport class AccountController {\n  constructor(private readonly accountService: AccountService) {}\n\n  //@UseGuards(PermissionGuard(Permission.EDIT))\n  @Post()\n  addBankAccount(@Body() addBankAccountDto: AddBankAccountDTO, @Request() req) {\n    const { id } = req;\n    const { accountNumber, bankCode } = addBankAccountDto;\n    return this.accountService.initiateAccountCreation(\n      accountNumber,\n      bankCode,\n      id,\n    );\n  }\n\n  @Get()\n  findAll() {\n    return this.accountService.findAllAccounts();\n  }\n\n  @Delete()\n  deleteAccount() {\n    return this.accountService.deleteAccount(1);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\n\nFlutterwaveModule\n\nFlutterwaveModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nFlutterwaveModule->AccountModule\n\n\n\n\n\nMonnifyModule\n\nMonnifyModule\n\nAccountModule -->\n\nMonnifyModule->AccountModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAccountModule -->\n\nUserModule->AccountModule\n\n\n\n\n\nAccountService \n\nAccountService \n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/account/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FlutterwaveModule\n                        \n                        \n                            MonnifyModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountService } from './account.service';\nimport { AccountController } from './account.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FlutterwaveModule } from 'src/flutterwave/flutterwave.module';\nimport { MonnifyModule } from 'src/monnify/monnify.module';\nimport { UserModule } from 'src/user/user.module';\nimport { AccountRepository } from './repositories/account.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([AccountRepository]),\n    FlutterwaveModule,\n    MonnifyModule,\n    UserModule,\n  ],\n  controllers: [AccountController],\n  providers: [AccountService],\n  exports: [AccountService],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountRepository.html":{"url":"classes/AccountRepository.html","title":"class - AccountRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/repositories/account.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Account } from '../entities/account.entity';\n\n@EntityRepository(Account)\nexport class AccountRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentBankService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccount\n                            \n                            \n                                    Async\n                                createVirtualAccount\n                            \n                            \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Async\n                                findAccoutnById\n                            \n                            \n                                    Async\n                                findAccoutnByOwnerId\n                            \n                            \n                                    Async\n                                findAllAccounts\n                            \n                            \n                                    Async\n                                initiateAccountCreation\n                            \n                            \n                                    Async\n                                validateAccountName\n                            \n                            \n                                    Async\n                                verifyBvn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(monnifyAccountRepository: AccountRepository, flutterwaveService: FlutterwaveService, monnifyService: MonnifyService, configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/account/account.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monnifyAccountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flutterwaveService\n                                                  \n                                                        \n                                                                        FlutterwaveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        monnifyService\n                                                  \n                                                        \n                                                                        MonnifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAccount(createAccountDto: CreateAccountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAccountDto\n                                    \n                                                CreateAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createVirtualAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createVirtualAccount(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount(id)\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAccoutnById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAccoutnById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAccoutnByOwnerId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAccoutnByOwnerId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllAccounts\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initiateAccountCreation\n                        \n                    \n                \n            \n            \n                \n                    \n                    initiateAccountCreation(accountNumber: string, bankCode: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bankCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateAccountName\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAccountName()\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyBvn\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyBvn(accountNumber: string, bankCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account/account.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bankCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentBankService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BankServices\n\n                    \n                \n                    \n                        \n                                Defined in src/account/account.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ACCOUNT_TYPES } from 'src/common/types/account.type';\nimport { CURRENCY } from 'src/common/types/currency.type';\nimport { BankServices, BANK_SERVICES } from 'src/common/types/service.type';\nimport { FlutterwaveService } from 'src/flutterwave/flutterwave.service';\nimport { MonnifyService } from 'src/monnify/monnify.service';\nimport { UserService } from 'src/user/user.service';\nimport { getTransactionReference } from 'src/utils/random-generators';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { AccountRepository } from './repositories/account.repository';\n\nconst { MONNIFY, FLUTTERWAVE } = BANK_SERVICES;\n\n@Injectable()\nexport class AccountService {\n  private currentBankService: BankServices;\n  constructor(\n    @InjectRepository(AccountRepository)\n    private monnifyAccountRepository: AccountRepository,\n    private readonly flutterwaveService: FlutterwaveService,\n    private readonly monnifyService: MonnifyService,\n    private readonly configService: ConfigService,\n    private readonly userService: UserService,\n  ) {\n    this.currentBankService = MONNIFY;\n  }\n\n  async findAllAccounts() {\n    try {\n      const data = await this.monnifyAccountRepository.find({\n        relations: ['user'],\n      });\n      if (!data) {\n        throw new HttpException(\n          'There are no avilable accounts',\n          HttpStatus.NOT_FOUND,\n        );\n      }\n      return data;\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async findAccoutnById(id) {\n    try {\n      const data = await this.monnifyAccountRepository.findOne(id);\n      if (!data) {\n        throw new HttpException(\n          'There are no avilable accounts',\n          HttpStatus.NOT_FOUND,\n        );\n      }\n      return data;\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async findAccoutnByOwnerId(id: number) {\n    try {\n      const data = await this.monnifyAccountRepository.findOne({ userId: id });\n      if (!data) {\n        throw new HttpException(\n          'There are no avilable accounts',\n          HttpStatus.NOT_FOUND,\n        );\n      }\n      return data;\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async createAccount(createAccountDto: CreateAccountDto) {\n    try {\n      const account = this.monnifyAccountRepository.create(createAccountDto);\n      await this.monnifyAccountRepository.save(account);\n      return {\n        message: 'Account created successfully',\n      };\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async deleteAccount(id) {\n    try {\n      await this.monnifyAccountRepository.delete(id);\n      return {\n        message: 'Account Deleted successfully',\n      };\n    } catch (error) {\n      throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  async initiateAccountCreation(\n    accountNumber: string,\n    bankCode: string,\n    userId: number,\n  ) {\n    try {\n      const bvn = await this.userService.findBvnByUserId(userId);\n      if (!bvn) {\n        throw new HttpException('No bvn registered', HttpStatus.BAD_REQUEST);\n      }\n      switch (this.currentBankService) {\n        case MONNIFY:\n          const result = await this.monnifyService.validateAccountBvnMatch({\n            accountNumber,\n            bankCode,\n            bvn,\n          });\n          const {\n            accountNumber: returnedAccountNumber,\n            accountName,\n            matchStatus,\n          } = result.data;\n\n          if (matchStatus !== 'FULL_MATCH') {\n            throw new HttpException(\n              'Bvn does not match account',\n              HttpStatus.BAD_REQUEST,\n            );\n          }\n          return await this.createAccount({\n            accountName,\n            accountNumber: returnedAccountNumber,\n            bankCode,\n            userId,\n            accountType: ACCOUNT_TYPES.BANK_ACCOUNT,\n            bankService: BANK_SERVICES.MONNIFY,\n            currency: CURRENCY.NAIRA,\n          });\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async validateAccountName() {\n    try {\n      switch (this.currentBankService) {\n        case MONNIFY:\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyBvn(accountNumber: string, bankCode: string) {\n    try {\n      switch (this.currentBankService) {\n        case MONNIFY:\n          const result = await this.monnifyService.validateAccountNumber({\n            accountNumber,\n            bankCode,\n          });\n          return result.data.accountName;\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async createVirtualAccount(userId) {\n    const kyc = await this.userService.findKycByUserId(userId);\n    const bvn = await this.userService.findBvnByUserId(userId);\n    const reference = await getTransactionReference();\n    const contractCode = await this.configService.get('MONNIFY_CONTRACT_CODE');\n\n    const payload = {\n      accountReference: reference,\n      accountName: `TapMoni-${kyc.bvnName}`,\n      currencyCode: CURRENCY.NAIRA,\n      contractCode,\n      customerEmail: kyc.user.email,\n      bvn: bvn,\n      customerName: kyc.bvnName,\n      getAllAvailableBanks: true,\n    };\n    try {\n      switch (this.currentBankService) {\n        case MONNIFY:\n          const result = await this.monnifyService.createReservedAccount(\n            payload,\n          );\n          const { accounts, accountName, currencyCode } = result.data;\n\n          accounts.forEach(async (account) => {\n            const { bankCode, bankName, accountNumber } = account;\n            await this.createAccount({\n              accountName,\n              accountNumber,\n              bankCode,\n              userId,\n              accountType: ACCOUNT_TYPES.VIRTUAL_ACCOUNT,\n              bankService: BANK_SERVICES.MONNIFY,\n              currency: CURRENCY.NAIRA,\n            });\n          });\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ActivitiesController.html":{"url":"controllers/ActivitiesController.html","title":"controller - ActivitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ActivitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/activities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                activities\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bouquetChangeDSTV_GOTV\n                            \n                            \n                                bouquetRenewDSTV_GOTV\n                            \n                            \n                                buyAirtime\n                            \n                            \n                                buyElectricity\n                            \n                            \n                                buyMobileData\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bouquetChangeDSTV_GOTV\n                        \n                    \n                \n            \n            \n                \nbouquetChangeDSTV_GOTV(BuyDSTVGOTV: BuyDSTVGOTV, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGaurd)@Post('bouquet_change_dstv_gotv')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    BuyDSTVGOTV\n                                    \n                                                BuyDSTVGOTV\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bouquetRenewDSTV_GOTV\n                        \n                    \n                \n            \n            \n                \nbouquetRenewDSTV_GOTV(BuyDSTVGOTV: BuyDSTVGOTV, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGaurd)@Post('bouquet_renew_dstv_gotv')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    BuyDSTVGOTV\n                                    \n                                                BuyDSTVGOTV\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyAirtime\n                        \n                    \n                \n            \n            \n                \nbuyAirtime(buyAirtimeDto: BuyAirtimeDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGaurd)@Post('buy_airtime')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyAirtimeDto\n                                    \n                                                BuyAirtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyElectricity\n                        \n                    \n                \n            \n            \n                \nbuyElectricity(buyElectrictyDto: BuyElectricityDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGaurd)@Post('buy_electricity')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyElectrictyDto\n                                    \n                                                BuyElectricityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyMobileData\n                        \n                    \n                \n            \n            \n                \nbuyMobileData(buyDataDto: BuyDataDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGaurd)@Post('buy_data')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyDataDto\n                                    \n                                                BuyDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createActivityDto: CreateActivityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createActivityDto\n                                    \n                                                CreateActivityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateActivityDto: UpdateActivityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/activities/activities.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateActivityDto\n                                    \n                                                UpdateActivityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Req,\n} from '@nestjs/common';\nimport { JwtAuthGaurd } from 'src/common/gaurds/jwt-auth.gaurd';\nimport { ActivitiesService } from './activities.service';\nimport { BuyAirtimeDto } from './dto/buy-airtime.dto';\nimport { BuyDataDto } from './dto/buy-data.dto';\nimport { BuyDSTVGOTV } from './dto/buy-dstv-gotv.dto';\nimport { BuyElectricityDto } from './dto/buy-electricity.dto';\nimport { CreateActivityDto } from './dto/create-activity.dto';\nimport { UpdateActivityDto } from './dto/update-activity.dto';\n\n@Controller('activities')\nexport class ActivitiesController {\n  constructor(private readonly activitiesService: ActivitiesService) {}\n\n  @UseGuards(JwtAuthGaurd)\n  @Post('buy_airtime')\n  buyAirtime(@Body() buyAirtimeDto: BuyAirtimeDto, @Req() req) {\n    return this.activitiesService.buyAirtimeVTPass(buyAirtimeDto, req.user);\n  }\n\n  @UseGuards(JwtAuthGaurd)\n  @Post('buy_electricity')\n  buyElectricity(@Body() buyElectrictyDto: BuyElectricityDto, @Req() req) {\n    return this.activitiesService.buyElectricity(buyElectrictyDto, req.user);\n  }\n\n  @UseGuards(JwtAuthGaurd)\n  @Post('buy_data')\n  buyMobileData(@Body() buyDataDto: BuyDataDto, @Req() req) {\n    return this.activitiesService.buyMobileData(buyDataDto, req.user);\n  }\n\n  @UseGuards(JwtAuthGaurd)\n  @Post('bouquet_change_dstv_gotv')\n  bouquetChangeDSTV_GOTV(@Body() BuyDSTVGOTV: BuyDSTVGOTV, @Req() req) {\n    return this.activitiesService.bouquetChangeDSTV_GOTV(BuyDSTVGOTV, req.user);\n  }\n\n  @UseGuards(JwtAuthGaurd)\n  @Post('bouquet_renew_dstv_gotv')\n  bouquetRenewDSTV_GOTV(@Body() BuyDSTVGOTV: BuyDSTVGOTV, @Req() req) {\n    return this.activitiesService.bouquetRenewDSTV_GOTV(BuyDSTVGOTV, req.user);\n  }\n\n  @Post()\n  create(@Body() createActivityDto: CreateActivityDto) {\n    return this.activitiesService.create(createActivityDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.activitiesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.activitiesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateActivityDto: UpdateActivityDto,\n  ) {\n    return this.activitiesService.update(+id, updateActivityDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.activitiesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActivitiesModule.html":{"url":"modules/ActivitiesModule.html","title":"module - ActivitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    ActivitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActivitiesModule\n\n\n\ncluster_ActivitiesModule_imports\n\n\n\ncluster_ActivitiesModule_providers\n\n\n\n\nVtpassModule\n\nVtpassModule\n\n\n\nActivitiesModule\n\nActivitiesModule\n\nActivitiesModule -->\n\nVtpassModule->ActivitiesModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nActivitiesModule -->\n\nWalletModule->ActivitiesModule\n\n\n\n\n\nActivitiesService\n\nActivitiesService\n\nActivitiesModule -->\n\nActivitiesService->ActivitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/activities/activities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActivitiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ActivitiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VtpassModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ActivitiesService } from './activities.service';\nimport { ActivitiesController } from './activities.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AirtimeActivityRepository } from './repositories/airtime-activity.repository';\nimport { ElectricityBillActivityRepository } from './repositories/electricity-bill-activity.repository';\nimport { MobileDataActivityRepository } from './repositories/mobile-data-activity.repository';\nimport { TvSubscriptionActivityRepository } from './repositories/tv-subscription-activity.repository';\nimport { VtpassModule } from 'src/vtpass/vtpass.module';\nimport { WalletModule } from 'src/wallet/wallet.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      AirtimeActivityRepository,\n      ElectricityBillActivityRepository,\n      MobileDataActivityRepository,\n      TvSubscriptionActivityRepository,\n    ]),\n    VtpassModule,\n    WalletModule,\n  ],\n  controllers: [ActivitiesController],\n  providers: [ActivitiesService],\n})\nexport class ActivitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivitiesService.html":{"url":"injectables/ActivitiesService.html","title":"injectable - ActivitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/activities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bouquetChangeDSTV_GOTV\n                            \n                            \n                                    Async\n                                bouquetRenewDSTV_GOTV\n                            \n                            \n                                    Async\n                                buyAirtimeVTPass\n                            \n                            \n                                    Async\n                                buyElectricity\n                            \n                            \n                                    Async\n                                buyMobileData\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, airtimeActivityRepository: AirtimeActivityRepository, electricityBillActivityRepository: ElectricityBillActivityRepository, mobileDataActivityRepository: MobileDataActivityRepository, tvSubscriptionActivityRepository: TvSubscriptionActivityRepository, vtpassService: VtpassService, walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/activities/activities.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        airtimeActivityRepository\n                                                  \n                                                        \n                                                                        AirtimeActivityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        electricityBillActivityRepository\n                                                  \n                                                        \n                                                                        ElectricityBillActivityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mobileDataActivityRepository\n                                                  \n                                                        \n                                                                        MobileDataActivityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tvSubscriptionActivityRepository\n                                                  \n                                                        \n                                                                        TvSubscriptionActivityRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vtpassService\n                                                  \n                                                        \n                                                                        VtpassService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bouquetChangeDSTV_GOTV\n                        \n                    \n                \n            \n            \n                \n                    \n                    bouquetChangeDSTV_GOTV(buyDSTVGOTV: BuyDSTVGOTV, user)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:326\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyDSTVGOTV\n                                    \n                                                BuyDSTVGOTV\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bouquetRenewDSTV_GOTV\n                        \n                    \n                \n            \n            \n                \n                    \n                    bouquetRenewDSTV_GOTV(buyDSTVGOTV: BuyDSTVGOTV, user)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:429\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyDSTVGOTV\n                                    \n                                                BuyDSTVGOTV\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyAirtimeVTPass\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyAirtimeVTPass(buyAirtimeDto: BuyAirtimeDto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyAirtimeDto\n                                    \n                                                BuyAirtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyElectricity\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyElectricity(buyElectrictyDto: BuyElectricityDto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyElectrictyDto\n                                    \n                                                BuyElectricityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyMobileData\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyMobileData(buyDataDto: BuyDataDto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyDataDto\n                                    \n                                                BuyDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createActivityDto: CreateActivityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:532\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createActivityDto\n                                    \n                                                CreateActivityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:536\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:540\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:548\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateActivityDto: UpdateActivityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/activities/activities.service.ts:544\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateActivityDto\n                                    \n                                                UpdateActivityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateActivityDto } from './dto/create-activity.dto';\nimport { UpdateActivityDto } from './dto/update-activity.dto';\nimport { Connection, Repository } from 'typeorm';\nimport { WalletService } from 'src/wallet/wallet.service';\nimport { VtpassService } from 'src/vtpass/vtpass.service';\nimport { BuyAirtimeDto } from './dto/buy-airtime.dto';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport { Services, ServicesType } from 'src/common/types/service.type';\nimport {\n  getTransactionReference,\n  getRequestId,\n} from 'src/utils/random-generators';\nimport { AirtimeActivity } from './entities/airtime-activity.entity';\nimport { BuyElectricityDto } from './dto/buy-electricity.dto';\nimport { BuyDataDto } from './dto/buy-data.dto';\nimport { BuyDSTVGOTV } from './dto/buy-dstv-gotv.dto';\nimport { MobileDataActivity } from './entities/mobiledata-activity.entity';\nimport { TvSubscriptionActivity } from './entities/tv-subscription-activity.entity';\nimport { ElectricityBillActivity } from './entities/electricity-bill-activity.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AirtimeActivityRepository } from './repositories/airtime-activity.repository';\nimport { ElectricityBillActivityRepository } from './repositories/electricity-bill-activity.repository';\nimport { MobileDataActivityRepository } from './repositories/mobile-data-activity.repository';\nimport { TvSubscriptionActivityRepository } from './repositories/tv-subscription-activity.repository';\n\n@Injectable()\nexport class ActivitiesService {\n  constructor(\n    private connection: Connection,\n    @InjectRepository(AirtimeActivityRepository)\n    private airtimeActivityRepository: AirtimeActivityRepository,\n    @InjectRepository(ElectricityBillActivityRepository)\n    private electricityBillActivityRepository: ElectricityBillActivityRepository,\n    @InjectRepository(MobileDataActivityRepository)\n    private mobileDataActivityRepository: MobileDataActivityRepository,\n    @InjectRepository(TvSubscriptionActivityRepository)\n    private tvSubscriptionActivityRepository: TvSubscriptionActivityRepository,\n    private readonly vtpassService: VtpassService,\n    private readonly walletService: WalletService,\n  ) {}\n  async buyAirtimeVTPass(buyAirtimeDto: BuyAirtimeDto, user) {\n    const queryRunner = this.connection.createQueryRunner();\n\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const amount = buyAirtimeDto['amount'];\n      const email = user.user.email;\n\n      const wallet = user.user['wallets'].find(\n        (wallet) => wallet['type'] == 'naira',\n      );\n      //      const wallet = await this.walletService.getWalletByOwnerId(user.id);\n\n      if (wallet.balance  wallet['type'] == 'naira',\n      );\n      if (wallet.balance \n            variation['variation_code'] == buyDataDto.variation_code,\n        ).variation_amount,\n      );\n\n      //      const wallet = await this.walletService.getWalletByOwnerId(user.id);\n      const wallet = user.user['wallets'].find(\n        (wallet) => wallet['type'] == 'naira',\n      );\n\n      const walletId = wallet['id'];\n      if (wallet.balance \n            variation['variation_code'] == buyDSTVGOTV.variation_code,\n        ).variation_amount,\n      );\n      //      const wallet = await this.walletService.getWalletByOwnerId(user.id);\n      const wallet = user.user['wallets'].find(\n        (wallet) => wallet['type'] == 'naira',\n      );\n\n      const walletId = wallet['id'];\n      if (wallet.balance \n            variation['variation_code'] == buyDSTVGOTV.variation_code,\n        ).variation_amount,\n      );\n\n      //      const wallet = await this.walletService.getWalletByOwnerId(user.id);\n      const wallet = user.user['wallets'].find(\n        (wallet) => wallet['type'] == 'naira',\n      );\n\n      const walletId = wallet['id'];\n      if (wallet.balance \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Activity.html":{"url":"classes/Activity.html","title":"class - Activity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/entities/activity.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                balance\n                            \n                            \n                                createddate\n                            \n                            \n                                email\n                            \n                            \n                                remarks\n                            \n                            \n                                type\n                            \n                            \n                                updateddate\n                            \n                            \n                                userid\n                            \n                            \n                                walletid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/activity.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewEntity, ViewColumn, Connection } from 'typeorm';\n\n@ViewEntity({\n  expression:\n    'SELECT  type, amount, balance, remarks, email, userid, walletid, createddate, updateddate FROM airtime_activity UNION SELECT type, amount, balance, remarks, email, userid, walletid, createddate, updateddate FROM electricity_bill_activity UNION SELECT type, amount, balance, remarks, email, userid, walletid, createddate, updateddate FROM tv_subscription_activity UNION SELECT type, amount, balance, remarks, email, userid, walletid, createddate, updateddate FROM mobile_data_activity',\n})\nexport class Activity {\n  @ViewColumn()\n  type: string;\n\n  @ViewColumn()\n  amount: string;\n\n  @ViewColumn()\n  balance: string;\n\n  @ViewColumn()\n  remarks: string;\n\n  @ViewColumn()\n  email: string;\n\n  @ViewColumn()\n  userid: string;\n\n  @ViewColumn()\n  walletid: string;\n\n  @ViewColumn()\n  createddate: Date;\n\n  @ViewColumn()\n  updateddate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Activity-1.html":{"url":"classes/Activity-1.html","title":"class - Activity-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/entities/activity.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityContainer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                balance\n                            \n                            \n                                customer\n                            \n                            \n                                email\n                            \n                            \n                                    Public\n                                remarks\n                            \n                            \n                                service\n                            \n                            \n                                serviceID\n                            \n                            \n                                status\n                            \n                            \n                                transactionReference\n                            \n                            \n                                userid\n                            \n                            \n                                variation_code\n                            \n                            \n                                walletid\n                            \n                            \n                                createddate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'real'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'real'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        remarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServicesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionReference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/activity.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityContainer } from 'src/common/types/entity';\nimport { ServicesType } from 'src/common/types/service.type';\nimport { TransactionStatus } from 'src/common/types/status.type';\nimport { Column } from 'typeorm';\n\nexport abstract class Activity extends EntityContainer {\n  @Column()\n  customer: string;\n\n  @Column()\n  userid: number;\n\n  @Column()\n  email: string;\n\n  @Column()\n  walletid: number;\n\n  @Column()\n  serviceID: string;\n\n  @Column({ nullable: true })\n  variation_code: string;\n\n  @Column()\n  transactionReference: string;\n\n  @Column()\n  service: ServicesType;\n\n  @Column({ type: 'real' })\n  amount: number;\n\n  @Column({ type: 'real' })\n  balance: number;\n\n  @Column()\n  public remarks: string;\n\n  @Column({ nullable: true })\n  status: TransactionStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddBankAccountDTO.html":{"url":"classes/AddBankAccountDTO.html","title":"class - AddBankAccountDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddBankAccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/dto/add-bank-accoiunt.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountNumber\n                            \n                            \n                                bankCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/add-bank-accoiunt.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bankCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/add-bank-accoiunt.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class AddBankAccountDTO {\n  @IsNotEmpty()\n  @IsString()\n  bankCode: string;\n\n  @IsNotEmpty()\n  @IsString()\n  accountNumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Admin.html":{"url":"entities/Admin.html","title":"entity - Admin","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/entities/admin.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdminLevels\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/entities/admin.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { AdminLevels } from 'src/common/types/roles.type';\nimport { User } from 'src/user/entities/user.entity';\nimport { Column, Entity } from 'typeorm';\n\n@Entity()\nexport class Admin extends User {\n  @Column()\n  public level: AdminLevels;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAdmin\n                            \n                            \n                                getAllActivities\n                            \n                            \n                                getSummary\n                            \n                            \n                                getUserActivities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAdmin\n                        \n                    \n                \n            \n            \n                \ncreateAdmin(createAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('create')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAdminDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllActivities\n                        \n                    \n                \n            \n            \n                \ngetAllActivities()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('get_all_activities')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSummary\n                        \n                    \n                \n            \n            \n                \ngetSummary()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('summary')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserActivities\n                        \n                    \n                \n            \n            \n                \ngetUserActivities(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('users/activities/:id')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CheckAbilities } from 'src/ability/abilities.decorator';\nimport { CreateAccountDto } from 'src/account/dto/create-account.dto';\nimport { Public } from 'src/common/decorators/jwt-auth-guard.decorator';\nimport { CreateUserDto } from 'src/user/dto/create-user.dto';\nimport { UserService } from 'src/user/user.service';\nimport { AdminService } from './admin.service';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n\n  @Public()\n  @Post('create')\n  createAdmin(@Body() createAdminDto) {\n    return this.adminService.createNewAdmin(createAdminDto);\n  }\n\n  @Public()\n  @Get('summary')\n  getSummary() {\n    return this.adminService.getSummary();\n  }\n\n  // @Get('users')\n  // getAllUsers() {\n  //   return this.adminService.getAllUsers();\n  // }\n\n  // @Patch('assign_user_level')\n  // //  @CheckAbilities(new ADMIN_PERMISSION())\n  // assignUserLevel(@Body() assignUserLevelDto: AssignUserLevelDto) {\n  //   return this.adminService.assignRole(assignUserLevelDto);\n  // }\n\n  @Public()\n  @Get('users/activities/:id')\n  //  @CheckAbilities(new ADMIN_PERMISSION())\n  getUserActivities(@Param('id') id) {\n    return this.adminService.getUserActivities(id);\n  }\n\n  @Public()\n  @Get('get_all_activities')\n  //  @CheckAbilities(new ADMIN_PERMISSION())\n  getAllActivities() {\n    return this.adminService.getAllActivities();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nBankModule\n\nBankModule\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nBankModule->AdminModule\n\n\n\n\n\nFlutterwaveModule\n\nFlutterwaveModule\n\nAdminModule -->\n\nFlutterwaveModule->AdminModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAdminModule -->\n\nSettingsModule->AdminModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAdminModule -->\n\nTransactionsModule->AdminModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAdminModule -->\n\nUserModule->AdminModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nAdminModule -->\n\nWalletModule->AdminModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BankModule\n                        \n                        \n                            FlutterwaveModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            TransactionsModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { AdminController } from './admin.controller';\nimport { SettingsModule } from 'src/settings/settings.module';\nimport { FlutterwaveModule } from 'src/flutterwave/flutterwave.module';\nimport { UserModule } from 'src/user/user.module';\nimport { WalletModule } from 'src/wallet/wallet.module';\nimport { TransactionsModule } from 'src/transactions/transactions.module';\nimport { BankModule } from 'src/bank/bank.module';\nimport { Activity } from './entities/activity.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Activity]),\n    SettingsModule,\n    FlutterwaveModule,\n    UserModule,\n    WalletModule,\n    TransactionsModule,\n    BankModule,\n  ],\n  controllers: [AdminController],\n  providers: [AdminService],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminRepository.html":{"url":"classes/AdminRepository.html","title":"class - AdminRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/repositories/admin.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                findByPhoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/repositories/admin.repository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/repositories/admin.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByPhoneNumber\n                        \n                    \n                \n            \n            \n                \nfindByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/repositories/admin.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Admin } from '../entities/admin.entity';\n\n@EntityRepository(Admin)\nexport class AdminRepository extends Repository {\n  findByEmail(email: string) {\n    return this.findOne({ email });\n  }\n\n  findById(id: number) {\n    return this.findOne({ id });\n  }\n\n  findByPhoneNumber(phoneNumber: string) {\n    return this.findOne({ phoneNumber });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewAdmin\n                            \n                            \n                                    Async\n                                getAllActivities\n                            \n                            \n                                    Async\n                                getSummary\n                            \n                            \n                                    Async\n                                getUserActivities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activityRepository: Repository, settingsService: SettingsService, userService: UserService, walletService: WalletService, flutterwaveService: FlutterwaveService, transactionsService: TransactionsService, bankService: BankService)\n                    \n                \n                        \n                            \n                                Defined in src/admin/admin.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activityRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flutterwaveService\n                                                  \n                                                        \n                                                                        FlutterwaveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionsService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bankService\n                                                  \n                                                        \n                                                                        BankService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createNewAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewAdmin(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllActivities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllActivities()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSummary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSummary()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserActivities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserActivities(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BankService } from 'src/bank/bank.service';\nimport { FlutterwaveService } from 'src/flutterwave/flutterwave.service';\nimport { CreateSettingDto } from 'src/settings/dto/create-setting.dto';\nimport { UpdateSettingDto } from 'src/settings/dto/update-setting.dto';\nimport { SettingsService } from 'src/settings/settings.service';\nimport { TransactionsService } from 'src/transactions/transactions.service';\nimport { CreateUserDto } from 'src/user/dto/create-user.dto';\nimport { UserService } from 'src/user/user.service';\nimport { WalletService } from 'src/wallet/wallet.service';\nimport { Connection, Repository } from 'typeorm';\nimport { Activity } from './entities/activity.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class AdminService {\n  constructor(\n    @InjectRepository(Activity)\n    private readonly activityRepository: Repository,\n    private readonly settingsService: SettingsService,\n    private readonly userService: UserService,\n    private readonly walletService: WalletService,\n    private readonly flutterwaveService: FlutterwaveService,\n    private readonly transactionsService: TransactionsService,\n    private readonly bankService: BankService,\n  ) {}\n\n  async createNewAdmin(payload) {\n    try {\n      const admin = await this.userService.createAdmin(payload);\n\n      return {\n        message: 'Admin created successfully',\n        data: {\n          admin,\n        },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getSummary() {\n    try {\n      const { totalUsers } = await this.userService.getTotalNumberOfUsers();\n\n      const { totalUsersNaira } = await this.walletService.getTotalUsersNaira();\n\n      const walletBalance = await this.bankService.getNairaWalletBAlance();\n\n      const { totalDeposits } =\n        await this.transactionsService.getTotalDepositsBalance();\n\n      const { totalWithdrawals } =\n        await this.transactionsService.getTotalWithdrawalsBalance();\n\n      const totalTransactions = totalDeposits + totalWithdrawals;\n\n      return {\n        message: 'Success',\n        data: {\n          totalUsers,\n          totalUsersNaira,\n          ...walletBalance,\n          totalDeposits,\n          totalTransactions,\n          totalWithdrawals,\n        },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /*async addNewSetting(createSettingDto: CreateSettingDto) {\n    return await this.settingsService.addSetting(createSettingDto);\n  }\n  async getSetting(id) {\n    return await this.settingsService.getSetting(id);\n  }\n\n  async editSetting(updateSettingDto: UpdateSettingDto, id) {\n    return await this.settingsService.updateSetting(id, updateSettingDto);\n  }\n*/\n  async getUserActivities(id: string) {\n    try {\n      return await this.activityRepository.find({ userid: id });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getAllActivities() {\n    try {\n      return await this.activityRepository.find();\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AirtimeActivity.html":{"url":"entities/AirtimeActivity.html","title":"entity - AirtimeActivity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AirtimeActivity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/entities/airtime-activity.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivitiesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/airtime-activity.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.airtimeActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/airtime-activity.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.mobileDataActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/airtime-activity.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ACTIVITIES, ActivitiesType } from 'src/common/types/activities.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Activity } from './activity.entity';\n\n@Entity()\nexport class AirtimeActivity extends Activity {\n  @Column({ default: ACTIVITIES.AIRTIME })\n  type: ActivitiesType;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.airtimeActivities)\n  user: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.mobileDataActivities)\n  wallet: Wallet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirtimeActivityRepository.html":{"url":"classes/AirtimeActivityRepository.html","title":"class - AirtimeActivityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirtimeActivityRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/repositories/airtime-activity.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { AirtimeActivity } from '../entities/airtime-activity.entity';\n\n@EntityRepository(AirtimeActivity)\nexport class AirtimeActivityRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Announcement.html":{"url":"entities/Announcement.html","title":"entity - Announcement","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Announcement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcement/entities/announcement.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdBy\n                            \n                            \n                                    Public\n                                publishedBy\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                subject\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/entities/announcement.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        publishedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/entities/announcement.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/entities/announcement.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/entities/announcement.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/entities/announcement.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AnnouncementStatus,\n  ANNOUNCEMENT_STATUS,\n} from 'src/common/types/announcement.type';\nimport { EntityContainer } from 'src/common/types/entity';\nimport { Column, Entity } from 'typeorm';\n\n@Entity()\nexport class Announcement extends EntityContainer {\n  @Column()\n  public title: string;\n\n  @Column()\n  public subject: string;\n\n  @Column({ default: ANNOUNCEMENT_STATUS.DRAFT })\n  public status: AnnouncementStatus;\n\n  @Column()\n  public createdBy: string;\n\n  @Column({ nullable: true })\n  public publishedBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnnouncementController.html":{"url":"controllers/AnnouncementController.html","title":"controller - AnnouncementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnnouncementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcement/announcement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                announcement\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                emit\n                            \n                            \n                                getAll\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(body: CreateAnnouncementDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/announcement/announcement.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateAnnouncementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(body, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('emit')\n                \n            \n\n            \n                \n                    Defined in src/announcement/announcement.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(query: AnnouncementQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n            \n                \n                    Defined in src/announcement/announcement.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                AnnouncementQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Sse('subscribe')\n                \n            \n\n            \n                \n                    Defined in src/announcement/announcement.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  HttpException,\n  HttpStatus,\n  Sse,\n  Req,\n  MessageEvent,\n} from '@nestjs/common';\nimport { query } from 'express';\nimport { interval, map, Observable } from 'rxjs';\nimport { Public } from 'src/common/decorators/jwt-auth-guard.decorator';\nimport { ANNOUNCEMENT_STATUS } from 'src/common/types/announcement.type';\nimport { AnnouncementService } from './announcement.service';\nimport {\n  AnnouncementQueryDto,\n  CreateAnnouncementDto,\n} from './dto/create-announcement.dto';\nimport { UpdateAnnouncementDto } from './dto/update-announcement.dto';\n\nconst { DRAFT, PUBLISHED } = ANNOUNCEMENT_STATUS;\n\n@Controller('announcement')\nexport class AnnouncementController {\n  constructor(private readonly announcementService: AnnouncementService) {}\n\n  @Public()\n  @Get()\n  getAll(@Query() query: AnnouncementQueryDto) {\n    let type;\n\n    if (query) {\n      if (query.type === DRAFT) {\n        type = DRAFT;\n      } else if (query.type === PUBLISHED) {\n        type = PUBLISHED;\n      } else if (!query.type) {\n        type = 'all';\n      } else {\n        throw new HttpException(\n          'Invalid query parameter',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n    }\n    if (!query) {\n      type = 'all';\n    }\n    return this.announcementService.getAll(type);\n  }\n\n  @Post()\n  create(@Body() body: CreateAnnouncementDto, @Req() req) {\n    const { user } = req.user;\n    return this.announcementService.create(body, user.email);\n  }\n\n  @Public()\n  @Sse('subscribe')\n  subscribe(@Query() query) {\n    return this.announcementService.subscribe(query.id);\n  }\n\n  @Public()\n  @Post('emit')\n  emit(@Body() body, @Query() query) {\n    this.announcementService.emit(query.id, { ...body.data, id: query.id });\n    return {\n      message: 'done',\n    };\n  }\n\n  /*@Sse()\n  subscribeForUSer() {}\n\n  @Post(':id')\n  sendToAll() {}\n\n  @Post()\n  sendToUser() {}\n  */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnnouncementModule.html":{"url":"modules/AnnouncementModule.html","title":"module - AnnouncementModule","body":"\n                   \n\n\n\n\n    Modules\n    AnnouncementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnnouncementModule\n\n\n\ncluster_AnnouncementModule_providers\n\n\n\n\nAnnouncementService\n\nAnnouncementService\n\n\n\nAnnouncementModule\n\nAnnouncementModule\n\nAnnouncementModule -->\n\nAnnouncementService->AnnouncementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/announcement/announcement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnnouncementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnnouncementController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnnouncementService } from './announcement.service';\nimport { AnnouncementController } from './announcement.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AnnouncementReository } from './repositories/announcement.repository';\nimport EventEmitter from 'events';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AnnouncementReository])],\n  controllers: [AnnouncementController],\n  providers: [AnnouncementService],\n})\nexport class AnnouncementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnnouncementQueryDto.html":{"url":"classes/AnnouncementQueryDto.html","title":"class - AnnouncementQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnnouncementQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcement/dto/create-announcement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnnouncementStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/dto/create-announcement.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { AnnouncementStatus } from 'src/common/types/announcement.type';\n\nexport class CreateAnnouncementDto {\n  @IsNotEmpty()\n  @IsString()\n  public title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public subject: string;\n}\n\nexport class AnnouncementQueryDto {\n  @IsOptional()\n  @IsString()\n  type: AnnouncementStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnnouncementReository.html":{"url":"classes/AnnouncementReository.html","title":"class - AnnouncementReository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnnouncementReository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcement/repositories/announcement.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Announcement } from '../entities/announcement.entity';\n\n@EntityRepository(Announcement)\nexport class AnnouncementReository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnnouncementService.html":{"url":"injectables/AnnouncementService.html","title":"injectable - AnnouncementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnnouncementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcement/announcement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(announcementRepository: AnnouncementReository)\n                    \n                \n                        \n                            \n                                Defined in src/announcement/announcement.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        announcementRepository\n                                                  \n                                                        \n                                                                        AnnouncementReository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: CreateAnnouncementDto, email)\n                \n            \n\n\n            \n                \n                    Defined in src/announcement/announcement.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateAnnouncementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                    \n                    emit(email, data)\n                \n            \n\n\n            \n                \n                    Defined in src/announcement/announcement.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(type: AnnouncementStatus | \"all\")\n                \n            \n\n\n            \n                \n                    Defined in src/announcement/announcement.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AnnouncementStatus | \"all\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/announcement/announcement.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                    \n                        \n                                Defined in src/announcement/announcement.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { fromEvent } from 'rxjs';\nimport {\n  AnnouncementStatus,\n  ANNOUNCEMENT_STATUS,\n} from 'src/common/types/announcement.type';\nimport { EventEmitter } from 'events';\nimport { CreateAnnouncementDto } from './dto/create-announcement.dto';\nimport { UpdateAnnouncementDto } from './dto/update-announcement.dto';\nimport { AnnouncementReository } from './repositories/announcement.repository';\n\nconst { DRAFT, PUBLISHED } = ANNOUNCEMENT_STATUS;\n\n@Injectable()\nexport class AnnouncementService {\n  private readonly eventEmitter: EventEmitter;\n  constructor(\n    @InjectRepository(AnnouncementReository)\n    private announcementRepository: AnnouncementReository,\n  ) {\n    this.eventEmitter = new EventEmitter();\n  }\n\n  async getAll(type: AnnouncementStatus | 'all') {\n    try {\n      let result;\n      if (type === 'all') {\n        result = await this.announcementRepository.find();\n        return {\n          message: 'Success',\n          data: {\n            announcements: result,\n          },\n        };\n      }\n\n      result = await this.announcementRepository.find({\n        where: {\n          status: type,\n        },\n      });\n      return {\n        message: 'Success',\n        data: {\n          announcements: result,\n        },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async create(payload: CreateAnnouncementDto, email) {\n    try {\n      const newAnnouncement = await this.announcementRepository.create({\n        ...payload,\n        createdBy: email,\n      });\n\n      const savedAnnouncement = await this.announcementRepository.save(\n        newAnnouncement,\n      );\n\n      return {\n        message: 'Announcement created successfully',\n        data: {\n          announcement: savedAnnouncement,\n        },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  subscribe(email: string) {\n    return fromEvent(this.eventEmitter, email);\n  }\n\n  async emit(email, data) {\n    this.eventEmitter.emit(email, { data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiSuccessResponse.html":{"url":"interfaces/ApiSuccessResponse.html","title":"interface - ApiSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/types/response.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiSuccessResponse {\n  message: string;\n  data: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAbilityModule\n\nAbilityModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbilityModule->AppModule\n\n\n\n\n\nAccountModule\n\nAccountModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nActivitiesModule\n\nActivitiesModule\n\nAppModule -->\n\nActivitiesModule->AppModule\n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAnnouncementModule\n\nAnnouncementModule\n\nAppModule -->\n\nAnnouncementModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankModule\n\nBankModule\n\nAppModule -->\n\nBankModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nFlutterwaveModule\n\nFlutterwaveModule\n\nAppModule -->\n\nFlutterwaveModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nAppModule -->\n\nLogModule->AppModule\n\n\n\n\n\nMerchantApiModule\n\nMerchantApiModule\n\nAppModule -->\n\nMerchantApiModule->AppModule\n\n\n\n\n\nMonnifyModule\n\nMonnifyModule\n\nAppModule -->\n\nMonnifyModule->AppModule\n\n\n\n\n\nNodemailerModule\n\nNodemailerModule\n\nAppModule -->\n\nNodemailerModule->AppModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nReferralModule\n\nReferralModule\n\nAppModule -->\n\nReferralModule->AppModule\n\n\n\n\n\nSeedingModule\n\nSeedingModule\n\nAppModule -->\n\nSeedingModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSmsModule\n\nSmsModule\n\nAppModule -->\n\nSmsModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nTransfersModule\n\nTransfersModule\n\nAppModule -->\n\nTransfersModule->AppModule\n\n\n\n\n\nTwillioModule\n\nTwillioModule\n\nAppModule -->\n\nTwillioModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nVtpassModule\n\nVtpassModule\n\nAppModule -->\n\nVtpassModule->AppModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nAppModule -->\n\nWalletModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AbilityModule\n                        \n                        \n                            AccountModule\n                        \n                        \n                            ActivitiesModule\n                        \n                        \n                            AdminModule\n                        \n                        \n                            AnnouncementModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BankModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            FlutterwaveModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            LogModule\n                        \n                        \n                            MerchantApiModule\n                        \n                        \n                            MonnifyModule\n                        \n                        \n                            NodemailerModule\n                        \n                        \n                            PaystackModule\n                        \n                        \n                            ReferralModule\n                        \n                        \n                            SeedingModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            SmsModule\n                        \n                        \n                            TransactionsModule\n                        \n                        \n                            TransfersModule\n                        \n                        \n                            TwillioModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            VtpassModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheInterceptor, CacheModule, Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { DatabaseModule } from './database/database.module';\nimport { WalletModule } from './wallet/wallet.module';\nimport { AccountModule } from './account/account.module';\nimport { TransactionsModule } from './transactions/transactions.module';\nimport { TransfersModule } from './transfers/transfers.module';\nimport { SmsModule } from './sms/sms.module';\nimport { PaystackModule } from './paystack/paystack.module';\nimport { VtpassModule } from './vtpass/vtpass.module';\nimport { BankModule } from './bank/bank.module';\nimport { FlutterwaveModule } from './flutterwave/flutterwave.module';\nimport { SettingsModule } from './settings/settings.module';\nimport { AdminModule } from './admin/admin.module';\nimport { TwillioModule } from './twillio/twillio.module';\nimport { LogModule } from './log/log.module';\nimport { HealthModule } from './health/health.module';\nimport { MonnifyModule } from './monnify/monnify.module';\nimport * as Joi from 'joi';\nimport * as redisStore from 'cache-manager-redis-store';\nimport { APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { EmailModule } from './email/email.module';\nimport { NodemailerModule } from './nodemailer/nodemailer.module';\nimport { ReferralModule } from './referral/referral.module';\nimport { AbilityModule } from './ability/ability.module';\nimport { AbilitiesGuard } from './ability/abilities.guard';\nimport { JwtAuthGaurd } from './common/gaurds/jwt-auth.gaurd';\nimport { AnnouncementModule } from './announcement/announcement.module';\nimport { ActivitiesModule } from './activities/activities.module';\nimport { SeedingModule } from './seeding/seeding.module';\nimport { MerchantApiModule } from './merchant-api/merchant-api.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        PORT: Joi.number(),\n        POSTGRES_USER: Joi.string().required(),\n        POSTGRES_PASSWORD: Joi.string().required(),\n        POSTGRES_DB_PORT: Joi.number().required(),\n        POSTGRES_DB_HOST: Joi.string().required(),\n        PGADMIN_DEFAULT_EMAIL: Joi.string().required(),\n        PGADMIN_DEFAULT_PASSWORD: Joi.string().required(),\n        JWT_SECRET: Joi.string().required(),\n        JWT_EXPIRATION: Joi.string().required(),\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.string().required(),\n      }),\n    }),\n    CacheModule.register({\n      store: redisStore,\n      host: process.env.REDIS_HOST,\n      port: process.env.REDIS_PORT,\n      password: process.env.REDIS_PASSWORD,\n      ttl: 1200,\n      isGlobal: true,\n      tls: {\n        rejectUnauthorized: false,\n      },\n    }),\n    AuthModule,\n    UserModule,\n    DatabaseModule,\n    WalletModule,\n    AccountModule,\n    TransactionsModule,\n    TransfersModule,\n    SmsModule,\n    PaystackModule,\n    VtpassModule,\n    BankModule,\n    FlutterwaveModule,\n    SettingsModule,\n    AdminModule,\n    TwillioModule,\n    LogModule,\n    HealthModule,\n    MonnifyModule,\n    EmailModule,\n    NodemailerModule,\n    ReferralModule,\n    AbilityModule,\n    AnnouncementModule,\n    ActivitiesModule,\n    SeedingModule,\n    MerchantApiModule,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGaurd,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AbilitiesGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loginAdmin\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                            \n                                setPin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAdmin(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGaurd)@Public()@Post('login/admin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGaurd)@Public()@Post('login/user')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPin\n                        \n                    \n                \n            \n            \n                \nsetPin(req, setPinDto: SetPinDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('pin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setPinDto\n                                    \n                                                SetPinDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UseGuards,\n  Request,\n  UseInterceptors,\n  Body,\n} from '@nestjs/common';\nimport { get } from 'http';\nimport { Public } from 'src/common/decorators/jwt-auth-guard.decorator';\nimport { JwtAuthGaurd } from 'src/common/gaurds/jwt-auth.gaurd';\nimport { LocalAuthGaurd } from 'src/common/gaurds/local-auth.gaurd';\nimport { AuthService } from './auth.service';\nimport { SetPinDTO } from './dto/set-pin.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @UseGuards(LocalAuthGaurd)\n  @Public()\n  @Post('login/user')\n  async loginUser(@Request() req) {\n    const data = await this.authService.loginUser(req.user);\n    return data;\n  }\n\n  @UseGuards(LocalAuthGaurd)\n  @Public()\n  @Post('login/admin')\n  async loginAdmin(@Request() req) {\n    return this.authService.loginAdmin(req.user);\n  }\n\n  @Post('pin')\n  setPin(@Request() req, @Body() setPinDto: SetPinDTO) {\n    const { password, pin } = setPinDto;\n    const { email } = req.user;\n    return this.authService.createTransactionPin(password, pin, email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UserModule } from '../user/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { LocalStrategy } from 'src/common/strategy/local.strategy';\nimport { JwtStrategy } from 'src/common/strategy/jwt.strategy';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: '2400s' },\n      }),\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransactionPin\n                            \n                            \n                                    Async\n                                loginAdmin\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTransactionPin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransactionPin(password: string, pin: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAdmin(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { USER_ROLES } from 'src/common/types/roles.type';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, password: string) {\n    try {\n      const data = await this.userService.findByEmail(email);\n      if (!data) {\n        return null;\n      }\n      const { user, role } = data;\n\n      if (user && (await bcrypt.compare(password, user.password))) {\n        return {\n          user,\n          role,\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // async validatePin(id: number, pin: string) {\n  //   try {\n  //     const user = await this.userService.findCustomerForJwt(id);\n\n  //     if (user && (await bcrypt.compare(pin, user.pin))) {\n  //       return user;\n  //     }\n  //     return null;\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // }\n\n  async loginUser(data: any) {\n    try {\n      const { user, role } = data;\n      const payload = {\n        email: user.email,\n        sub: user.id,\n        role,\n      };\n\n      if (role !== USER_ROLES.CUSTOMER) {\n        throw new HttpException(\n          'This is not a user account',\n          HttpStatus.UNAUTHORIZED,\n        );\n      }\n\n      return {\n        user,\n        token: this.jwtService.sign(payload),\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async loginAdmin(data: any) {\n    try {\n      const { user, role } = data;\n      const payload = {\n        email: user.email,\n        sub: user.id,\n        role,\n      };\n\n      if (role !== USER_ROLES.ADMIN) {\n        throw new HttpException(\n          'This is not an Admin Account',\n          HttpStatus.UNAUTHORIZED,\n        );\n      }\n      return {\n        message: 'Login successful',\n        data: {\n          user,\n          token: this.jwtService.sign(payload),\n        },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async createTransactionPin(password: string, pin: number, email: string) {\n    try {\n      const user = await this.validateUser(email, password);\n\n      if (!user) {\n        throw new HttpException('invalid password', HttpStatus.BAD_REQUEST);\n      }\n\n      await this.userService.setPin(email, pin);\n\n      return {\n        message: 'Pin Set successfully',\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizeDepositData.html":{"url":"classes/AuthorizeDepositData.html","title":"class - AuthorizeDepositData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizeDepositData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/interfaces/deposits.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        InitiateDepositDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tx_ref\n                            \n                            \n                                amount\n                            \n                            \n                                card_number\n                            \n                            \n                                currency\n                            \n                            \n                                cvv\n                            \n                            \n                                email\n                            \n                            \n                                expiry_month\n                            \n                            \n                                expiry_year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tx_ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/interfaces/deposits.interface.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        card_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cvv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { InitiateDepositDto } from '../dto/initiate-deposit.dto';\nimport { UssdDepositDto } from '../dto/ussd-deposit.dto';\n\nexport class AuthorizeDepositData extends InitiateDepositDto {\n  @IsString()\n  @IsNotEmpty()\n  tx_ref: string;\n}\n\nexport class UssdDepositData extends UssdDepositDto {\n  @IsString()\n  @IsNotEmpty()\n  tx_ref: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizeDepositDto.html":{"url":"classes/AuthorizeDepositDto.html","title":"class - AuthorizeDepositDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizeDepositDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/dto/authorize-deposit.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthorizeDepositData\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                pin\n                            \n                            \n                                tx_ref\n                            \n                            \n                                amount\n                            \n                            \n                                card_number\n                            \n                            \n                                currency\n                            \n                            \n                                cvv\n                            \n                            \n                                email\n                            \n                            \n                                expiry_month\n                            \n                            \n                                expiry_year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/authorize-deposit.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/authorize-deposit.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tx_ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AuthorizeDepositData\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthorizeDepositData:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        card_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cvv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateDepositDto:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { AuthorizeDepositData } from '../interfaces/deposits.interface';\n\nexport class AuthorizeDepositDto extends AuthorizeDepositData {\n  @IsNotEmpty()\n  @IsString()\n  mode: string;\n\n  @IsNotEmpty()\n  @IsString()\n  pin: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bank.html":{"url":"classes/Bank.html","title":"class - Bank","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/entities/bank.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bank {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BankController.html":{"url":"controllers/BankController.html","title":"controller - BankController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BankController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/bank.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bank\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  CacheInterceptor,\n  CacheKey,\n} from '@nestjs/common';\nimport { BankService } from './bank.service';\nimport { VerifyAccountNumberDto } from './dto/verify-account-number.dto';\nimport { VerifyBvnDto } from './dto/verify-bvn.dto';\n\n@Controller('bank')\nexport class BankController {\n  constructor(private readonly bankService: BankService) {}\n\n  /*@UseInterceptors(CacheInterceptor)\n  @CacheKey('allBanks')\n  @Get('all')\n  getAll() {\n    return this.bankService.getAllBanks();\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankModule.html":{"url":"modules/BankModule.html","title":"module - BankModule","body":"\n                   \n\n\n\n\n    Modules\n    BankModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BankModule\n\n\n\ncluster_BankModule_providers\n\n\n\ncluster_BankModule_exports\n\n\n\ncluster_BankModule_imports\n\n\n\n\nFlutterwaveModule\n\nFlutterwaveModule\n\n\n\nBankModule\n\nBankModule\n\nBankModule -->\n\nFlutterwaveModule->BankModule\n\n\n\n\n\nMonnifyModule\n\nMonnifyModule\n\nBankModule -->\n\nMonnifyModule->BankModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nBankModule -->\n\nSettingsModule->BankModule\n\n\n\n\n\nBankService \n\nBankService \n\nBankService  -->\n\nBankModule->BankService \n\n\n\n\n\nBankService\n\nBankService\n\nBankModule -->\n\nBankService->BankModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bank/bank.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BankController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FlutterwaveModule\n                        \n                        \n                            MonnifyModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BankService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BankService } from './bank.service';\nimport { BankController } from './bank.controller';\nimport { SettingsModule } from 'src/settings/settings.module';\nimport { FlutterwaveModule } from 'src/flutterwave/flutterwave.module';\nimport { MonnifyModule } from 'src/monnify/monnify.module';\n\n@Module({\n  imports: [SettingsModule, FlutterwaveModule, MonnifyModule],\n  controllers: [BankController],\n  providers: [BankService],\n  exports: [BankService],\n})\nexport class BankModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankService.html":{"url":"injectables/BankService.html","title":"injectable - BankService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BankService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/bank.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllBanks\n                            \n                            \n                                    Async\n                                getNairaWalletBAlance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheManager: Cache, settingsService: SettingsService, flutterwaveService: FlutterwaveService, monnifyService: MonnifyService)\n                    \n                \n                        \n                            \n                                Defined in src/bank/bank.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flutterwaveService\n                                                  \n                                                        \n                                                                        FlutterwaveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        monnifyService\n                                                  \n                                                        \n                                                                        MonnifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllBanks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllBanks()\n                \n            \n\n\n            \n                \n                    Defined in src/bank/bank.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getNairaWalletBAlance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNairaWalletBAlance()\n                \n            \n\n\n            \n                \n                    Defined in src/bank/bank.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BankServices\n\n                    \n                \n                    \n                        \n                                Defined in src/bank/bank.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CACHE_MANAGER,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Cache } from 'cache-manager';\nimport { ServicesSettings } from 'src/common/types/settings.type';\nimport {\n  BankServices,\n  BANK_SERVICES,\n  Services,\n} from 'src/common/types/service.type';\nimport { FlutterwaveService } from 'src/flutterwave/flutterwave.service';\nimport { SettingsService } from 'src/settings/settings.service';\nimport { MonnifyService } from 'src/monnify/monnify.service';\n\nconst { MONNIFY, FLUTTERWAVE } = BANK_SERVICES;\n\n@Injectable()\nexport class BankService {\n  private currentService: BankServices;\n  constructor(\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n    private readonly settingsService: SettingsService,\n    private readonly flutterwaveService: FlutterwaveService,\n    private readonly monnifyService: MonnifyService,\n  ) {\n    this.currentService = MONNIFY;\n  }\n\n  /*async getCurrentService() {\n    let data;\n    data = await this.cacheManager.get(ServicesSettings.BANK_SERVICE);\n\n    if (!data) {\n      data = await this.settingsService.getSetting(\n        ServicesSettings.BANK_SERVICE,\n      );\n    }\n\n    if (!data) {\n      throw new HttpException(\n        'Service currently unavailable',\n        HttpStatus.SERVICE_UNAVAILABLE,\n      );\n    }\n\n    const status = data.isActive;\n\n    if (!status) {\n      throw new HttpException(\n        'Service currently unavailable',\n        HttpStatus.SERVICE_UNAVAILABLE,\n      );\n    }\n    const service = data.value;\n\n    switch (service) {\n      case Services.FLUTTERWAVE:\n        this.currentService = this.flutterwaveService;\n        break;\n      case Services.MONNIFY:\n        this.currentService = this.monnifyService;\n    }\n  }\n\n  /async getAllBanks() {\n    await this.getCurrentService();\n\n    return this.currentService.getAllBankCodes();\n  }*/\n\n  async getAllBanks() {\n    try {\n      switch (this.currentService) {\n        case MONNIFY:\n          return await this.monnifyService.getAllBankCodes();\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getNairaWalletBAlance() {\n    try {\n      switch (this.currentService) {\n        case MONNIFY:\n          const result = await this.monnifyService.getWalletBalance(\n            '2953846525',\n          );\n\n          return {\n            monnifyWalletBalance: result,\n          };\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BouquetChangeDto.html":{"url":"classes/BouquetChangeDto.html","title":"class - BouquetChangeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BouquetChangeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/bouquet-change.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                phone\n                            \n                            \n                                quantity\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                subscription_type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-change.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-change.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-change.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-change.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-change.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-change.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-change.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BouquetChangeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  subscription_type: string;\n\n  @IsNumber()\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BouquetRenewalDto.html":{"url":"classes/BouquetRenewalDto.html","title":"class - BouquetRenewalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BouquetRenewalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/bouquet-renewal.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                billersCode\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                subscription_type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-renewal.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-renewal.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-renewal.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-renewal.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-renewal.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-renewal.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/bouquet-renewal.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BouquetRenewalDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @IsOptional()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  subscription_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyAirtimeDto.html":{"url":"classes/BuyAirtimeDto.html","title":"class - BuyAirtimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyAirtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/dto/buy-airtime.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-airtime.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-airtime.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-airtime.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-airtime.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-airtime.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-airtime.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-airtime.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyAirtimeDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  amount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyAirtimeDto-1.html":{"url":"classes/BuyAirtimeDto-1.html","title":"class - BuyAirtimeDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyAirtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/airtime/dto/buy-airtime.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/buy-airtime.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/buy-airtime.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/buy-airtime.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/buy-airtime.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/buy-airtime.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/buy-airtime.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/buy-airtime.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyAirtimeDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  amount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyAirtimeDto-2.html":{"url":"classes/BuyAirtimeDto-2.html","title":"class - BuyAirtimeDto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyAirtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/buy-airtime.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-airtime.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-airtime.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-airtime.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-airtime.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString, IsOptional } from 'class-validator';\n\nexport class BuyAirtimeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyDSTVGOTV.html":{"url":"classes/BuyDSTVGOTV.html","title":"class - BuyDSTVGOTV","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyDSTVGOTV\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/dto/buy-dstv-gotv.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                quantity\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                subscription_type\n                            \n                            \n                                type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-dstv-gotv.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyDSTVGOTV {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsOptional()\n  @IsNumber()\n  quantity: number;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  subscription_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyDSTVGOTV-1.html":{"url":"classes/BuyDSTVGOTV-1.html","title":"class - BuyDSTVGOTV-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyDSTVGOTV\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tvsubscription/dto/buy-dstv-gotv.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                quantity\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                subscription_type\n                            \n                            \n                                type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-dstv-gotv.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyDSTVGOTV {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsOptional()\n  @IsNumber()\n  quantity: number;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  subscription_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyDataDto.html":{"url":"classes/BuyDataDto.html","title":"class - BuyDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/dto/buy-data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-data.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyDataDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyDataDto-1.html":{"url":"classes/BuyDataDto-1.html","title":"class - BuyDataDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mobiledata/dto/buy-data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mobiledata/dto/buy-data.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyDataDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyDataDto-2.html":{"url":"classes/BuyDataDto-2.html","title":"class - BuyDataDto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/buy-data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-data.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-data.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-data.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-data.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-data.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyDataDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyElectricityDto.html":{"url":"classes/BuyElectricityDto.html","title":"class - BuyElectricityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyElectricityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/dto/buy-electricity.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                billersCode\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-electricity.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-electricity.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-electricity.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-electricity.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-electricity.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-electricity.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyElectricityDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @IsOptional()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyElectricityDto-1.html":{"url":"classes/BuyElectricityDto-1.html","title":"class - BuyElectricityDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyElectricityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/electricitybill/dto/buy-electricity.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/electricitybill/dto/buy-electricity.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyElectricityDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyElectricityDto-2.html":{"url":"classes/BuyElectricityDto-2.html","title":"class - BuyElectricityDto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyElectricityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/buy-electricity.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                billersCode\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-electricity.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-electricity.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-electricity.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-electricity.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-electricity.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-electricity.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyElectricityDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @IsOptional()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyShowmaxDto.html":{"url":"classes/BuyShowmaxDto.html","title":"class - BuyShowmaxDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyShowmaxDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/buy-showmax.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                billersCode\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-showmax.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-showmax.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-showmax.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-showmax.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-showmax.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-showmax.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyShowmaxDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @IsOptional()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyShowmaxStartimesDto.html":{"url":"classes/BuyShowmaxStartimesDto.html","title":"class - BuyShowmaxStartimesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyShowmaxStartimesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/dto/buy-startimes-showmax.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                quantity\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/dto/buy-startimes-showmax.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyShowmaxStartimesDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsOptional()\n  @IsNumber()\n  quantity: number;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyShowmaxStartimesDto-1.html":{"url":"classes/BuyShowmaxStartimesDto-1.html","title":"class - BuyShowmaxStartimesDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyShowmaxStartimesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tvsubscription/dto/buy-startimes-showmax.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                phone\n                            \n                            \n                                quantity\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                type\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tvsubscription/dto/buy-startimes-showmax.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyShowmaxStartimesDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  serviceID: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  billersCode: string;\n\n  @IsOptional()\n  @IsNumber()\n  quantity: number;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyStartimesDto.html":{"url":"classes/BuyStartimesDto.html","title":"class - BuyStartimesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyStartimesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/buy-startimes.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-startimes.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-startimes.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-startimes.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-startimes.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-startimes.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyStartimesDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsNotEmpty()\n  @IsString()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyWAECDto.html":{"url":"classes/BuyWAECDto.html","title":"class - BuyWAECDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyWAECDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/buy-waec.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                phone\n                            \n                            \n                                request_id\n                            \n                            \n                                serviceID\n                            \n                            \n                                variation_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-waec.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-waec.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-waec.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-waec.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        variation_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/buy-waec.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BuyWAECDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  serviceID: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @IsOptional()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  phone: string;\n\n  @IsString()\n  @IsNotEmpty()\n  variation_code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfirmPhoneNumberDto.html":{"url":"classes/ConfirmPhoneNumberDto.html","title":"class - ConfirmPhoneNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfirmPhoneNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/dto/confirm-phone-number.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/sms/dto/confirm-phone-number.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConfirmPhoneNumberDto {\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto.html":{"url":"classes/CreateAccountDto.html","title":"class - CreateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/dto/create-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountName\n                            \n                            \n                                accountNumber\n                            \n                            \n                                accountType\n                            \n                            \n                                bankCode\n                            \n                            \n                                bankService\n                            \n                            \n                                currency\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountName\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/create-account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/create-account.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/create-account.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bankCode\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/create-account.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bankService\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/create-account.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/create-account.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/dto/create-account.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateAccountDto {\n  @IsString()\n  @IsNotEmpty()\n  accountName;\n\n  @IsString()\n  @IsNotEmpty()\n  accountNumber;\n\n  @IsString()\n  @IsNotEmpty()\n  bankCode;\n\n  @IsNumber()\n  @IsNotEmpty()\n  userId;\n\n  @IsString()\n  @IsNotEmpty()\n  accountType;\n\n  @IsString()\n  @IsNotEmpty()\n  bankService;\n\n  @IsString()\n  @IsNotEmpty()\n  currency;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateActivityDto.html":{"url":"classes/CreateActivityDto.html","title":"class - CreateActivityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateActivityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/dto/create-activity.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateActivityDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAirtimeDto.html":{"url":"classes/CreateAirtimeDto.html","title":"class - CreateAirtimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAirtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/airtime/dto/create-airtime.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAirtimeDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnnouncementDto.html":{"url":"classes/CreateAnnouncementDto.html","title":"class - CreateAnnouncementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnnouncementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcement/dto/create-announcement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                subject\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/dto/create-announcement.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/announcement/dto/create-announcement.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { AnnouncementStatus } from 'src/common/types/announcement.type';\n\nexport class CreateAnnouncementDto {\n  @IsNotEmpty()\n  @IsString()\n  public title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  public subject: string;\n}\n\nexport class AnnouncementQueryDto {\n  @IsOptional()\n  @IsString()\n  type: AnnouncementStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBillDto.html":{"url":"classes/CreateBillDto.html","title":"class - CreateBillDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBillDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/dto/create-bill.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                country\n                            \n                            \n                                customer\n                            \n                            \n                                reference\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-bill.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-bill.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-bill.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-bill.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-bill.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class CreateBillDto {\n  @IsString()\n  @IsNotEmpty()\n  country: string;\n\n  @IsString()\n  @IsNotEmpty()\n  customer: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  amount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  type: string;\n\n  @IsString()\n  @IsNotEmpty()\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateElectricitybillDto.html":{"url":"classes/CreateElectricitybillDto.html","title":"class - CreateElectricitybillDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateElectricitybillDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/electricitybill/dto/create-electricitybill.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateElectricitybillDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmailDto.html":{"url":"classes/CreateEmailDto.html","title":"class - CreateEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/dto/create-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/dto/create-email.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/dto/create-email.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/dto/create-email.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/dto/create-email.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/dto/create-email.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateEmailDto {\n  @IsNotEmpty()\n  @IsString()\n  to: string;\n\n  @IsNotEmpty()\n  @IsString()\n  from: string;\n\n  @IsNotEmpty()\n  @IsString()\n  subject: string;\n\n  @IsNotEmpty()\n  @IsString()\n  text: string;\n\n  @IsNotEmpty()\n  @IsString()\n  html: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHealthDto.html":{"url":"classes/CreateHealthDto.html","title":"class - CreateHealthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHealthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/dto/create-health.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateHealthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateLogDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMerchantApiDto.html":{"url":"classes/CreateMerchantApiDto.html","title":"class - CreateMerchantApiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMerchantApiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/merchant-api/dto/create-merchant-api.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMerchantApiDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMobiledatumDto.html":{"url":"classes/CreateMobiledatumDto.html","title":"class - CreateMobiledatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMobiledatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mobiledata/dto/create-mobiledatum.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMobiledatumDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMonnifyDto.html":{"url":"classes/CreateMonnifyDto.html","title":"class - CreateMonnifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMonnifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monnify/dto/create-monnify.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMonnifyDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNodemailerDto.html":{"url":"classes/CreateNodemailerDto.html","title":"class - CreateNodemailerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNodemailerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nodemailer/dto/create-nodemailer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateNodemailerDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaystackDto.html":{"url":"classes/CreatePaystackDto.html","title":"class - CreatePaystackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaystackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dto/create-paystack.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePaystackDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReceiveTransferPermission.html":{"url":"classes/CreateReceiveTransferPermission.html","title":"class - CreateReceiveTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReceiveTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CREATE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:85\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReferralDto.html":{"url":"classes/CreateReferralDto.html","title":"class - CreateReferralDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReferralDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/referral/dto/create-referral.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                referredById\n                            \n                            \n                                referredId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        referredById\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/referral/dto/create-referral.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referredId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/referral/dto/create-referral.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class CreateReferralDto {\n  @IsNotEmpty()\n  @IsNumber()\n  referredById: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  referredId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReservedAccountDto.html":{"url":"classes/CreateReservedAccountDto.html","title":"class - CreateReservedAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReservedAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/dto/create-reserved-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bvn\n                            \n                            \n                                email\n                            \n                            \n                                is_permanent\n                            \n                            \n                                tx_ref\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bvn\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-reserved-account.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-reserved-account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_permanent\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-reserved-account.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tx_ref\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/create-reserved-account.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateReservedAccountDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email;\n\n  @IsString()\n  @IsNotEmpty()\n  bvn;\n\n  @IsString()\n  @IsNotEmpty()\n  tx_ref;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  is_permanent: true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReservedAccountDto-1.html":{"url":"classes/CreateReservedAccountDto-1.html","title":"class - CreateReservedAccountDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReservedAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monnify/dto/create-reserved-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountName\n                            \n                            \n                                accountReference\n                            \n                            \n                                bvn\n                            \n                            \n                                currencyCode\n                            \n                            \n                                customerEmail\n                            \n                            \n                                customerName\n                            \n                            \n                                getAllAvailableBanks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountName\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/create-reserved-account.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountReference\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/create-reserved-account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bvn\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/create-reserved-account.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currencyCode\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/create-reserved-account.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerEmail\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/create-reserved-account.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerName\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/create-reserved-account.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAvailableBanks\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/create-reserved-account.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateReservedAccountDto {\n  @IsString()\n  @IsNotEmpty()\n  accountReference;\n\n  @IsString()\n  @IsNotEmpty()\n  accountName;\n\n  @IsString()\n  @IsNotEmpty()\n  currencyCode;\n\n  @IsString()\n  @IsNotEmpty()\n  customerEmail;\n\n  @IsString()\n  @IsNotEmpty()\n  bvn;\n\n  @IsString()\n  @IsNotEmpty()\n  customerName;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  getAllAvailableBanks;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRoleDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSendTransferPermission.html":{"url":"classes/CreateSendTransferPermission.html","title":"class - CreateSendTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSendTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CREATE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SendTransfer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSettingDto.html":{"url":"classes/CreateSettingDto.html","title":"class - CreateSettingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSettingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/dto/create-setting.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-setting.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceSettingsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-setting.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServicesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-setting.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsBoolean, IsNotEmpty, IsString } from 'class-validator';\nimport { ServicesType } from 'src/common/types/service.type';\nimport { ServiceSettingsType } from 'src/common/types/settings.type';\n\nexport class CreateSettingDto {\n  @IsString()\n  @IsNotEmpty()\n  name: ServiceSettingsType;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  isActive: boolean;\n\n  @IsString()\n  @IsNotEmpty()\n  value: ServicesType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDto.html":{"url":"classes/CreateTransactionDto.html","title":"class - CreateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/dto/create-transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                callback_url\n                            \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-transaction.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        callback_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-transaction.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-transaction.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateTransactionDto {\n  @IsString()\n  @IsNotEmpty()\n  amount: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  callback_url: string;\n\n  // @IsString()\n  // @IsNotEmpty()\n  // reference: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransferDto.html":{"url":"classes/CreateTransferDto.html","title":"class - CreateTransferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/dto/create-transfer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                recipientEmail\n                            \n                            \n                                senderEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/transfers/dto/create-transfer.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipientEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/transfers/dto/create-transfer.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        senderEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/transfers/dto/create-transfer.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTransferDto {\n  recipientEmail: string;\n  senderEmail: string;\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransferRecipientDto.html":{"url":"classes/CreateTransferRecipientDto.html","title":"class - CreateTransferRecipientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransferRecipientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dto/create-transfer-recipient.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account_number\n                            \n                            \n                                bank_code\n                            \n                            \n                                currency\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/create-transfer-recipient.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bank_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/create-transfer-recipient.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/create-transfer-recipient.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/create-transfer-recipient.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/create-transfer-recipient.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateTransferRecipientDto {\n  @IsNotEmpty()\n  @IsString()\n  type: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  account_number: string;\n\n  @IsNotEmpty()\n  @IsString()\n  bank_code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransferRequestPermission.html":{"url":"classes/CreateTransferRequestPermission.html","title":"class - CreateTransferRequestPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransferRequestPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CREATE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:110\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTvsubscriptionDto.html":{"url":"classes/CreateTvsubscriptionDto.html","title":"class - CreateTvsubscriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTvsubscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tvsubscription/dto/create-tvsubscription.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTvsubscriptionDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTwillioDto.html":{"url":"classes/CreateTwillioDto.html","title":"class - CreateTwillioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTwillioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twillio/dto/create-twillio.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTwillioDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                referralCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Matches(/^\\+[1-9]\\d{1,14}$/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  lastName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^\\+[1-9]\\d{1,14}$/)\n  phoneNumber: string;\n\n  @IsOptional()\n  @IsString()\n  referralCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserPermission.html":{"url":"classes/CreateUserPermission.html","title":"class - CreateUserPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CREATE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Customer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVirtualAccountDto.html":{"url":"classes/CreateVirtualAccountDto.html","title":"class - CreateVirtualAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVirtualAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/dto/create-virtual-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountName\n                            \n                            \n                                accountRecference\n                            \n                            \n                                bvn\n                            \n                            \n                                currencyCode\n                            \n                            \n                                customerEmail\n                            \n                            \n                                customerName\n                            \n                            \n                                getAllAvailaibleBanks\n                            \n                            \n                                is_permanent\n                            \n                            \n                                tx_ref\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountName\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountRecference\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bvn\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currencyCode\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerEmail\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerName\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAvailaibleBanks\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_permanent\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tx_ref\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/create-virtual-account.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsBoolean } from 'class-validator';\n\nexport class CreateVirtualAccountDto {\n  @IsString()\n  @IsNotEmpty()\n  accountRecference;\n\n  @IsString()\n  @IsNotEmpty()\n  accountName;\n\n  @IsString()\n  @IsNotEmpty()\n  currencyCode;\n\n  @IsString()\n  @IsNotEmpty()\n  customerEmail;\n\n  @IsString()\n  @IsNotEmpty()\n  bvn;\n\n  @IsString()\n  @IsNotEmpty()\n  customerName;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  getAllAvailaibleBanks;\n\n  @IsString()\n  @IsNotEmpty()\n  tx_ref;\n\n  @IsBoolean()\n  @IsNotEmpty()\n  is_permanent: true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVtpassDto.html":{"url":"classes/CreateVtpassDto.html","title":"class - CreateVtpassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVtpassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/create-vtpass.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateVtpassDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWalletDto.html":{"url":"classes/CreateWalletDto.html","title":"class - CreateWalletDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWalletDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/dto/create-wallet.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateWalletDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWithdrawalPermission.html":{"url":"classes/CreateWithdrawalPermission.html","title":"class - CreateWithdrawalPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWithdrawalPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CREATE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Withdrawal\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:135\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomLogger.html":{"url":"injectables/CustomLogger.html","title":"injectable - CustomLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/custom-logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: string, options: ConsoleLoggerOptions, configService: ConfigService, logsService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/log/custom-logger.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ConsoleLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logsService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, stack?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stack\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/log/custom-logger.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n                    \n                        \n                                Defined in src/log/custom-logger.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConsoleLogger } from '@nestjs/common';\nimport { ConsoleLoggerOptions } from '@nestjs/common/services/console-logger.service';\nimport { ConfigService } from '@nestjs/config';\nimport { LogService } from 'src/log/log.service';\nimport getLogLevels from 'src/utils/get-log-levels';\n\n@Injectable()\nclass CustomLogger extends ConsoleLogger {\n  private readonly logsService: LogService;\n\n  constructor(\n    context: string,\n    options: ConsoleLoggerOptions,\n    configService: ConfigService,\n    logsService: LogService,\n  ) {\n    const environment = configService.get('NODE_ENV');\n\n    super(context, {\n      ...options,\n      logLevels: getLogLevels(environment === 'production'),\n    });\n\n    this.logsService = logsService;\n  }\n\n  log(message: string, context?: string) {\n    super.log.apply(this, [message, context]);\n\n    this.logsService.createLog({\n      message,\n      context,\n      level: 'log',\n    });\n  }\n  error(message: string, stack?: string, context?: string) {\n    super.error.apply(this, [message, stack, context]);\n\n    this.logsService.createLog({\n      message,\n      context,\n      level: 'error',\n    });\n  }\n  warn(message: string, context?: string) {\n    super.warn.apply(this, [message, context]);\n\n    this.logsService.createLog({\n      message,\n      context,\n      level: 'error',\n    });\n  }\n  debug(message: string, context?: string) {\n    super.debug.apply(this, [message, context]);\n\n    this.logsService.createLog({\n      message,\n      context,\n      level: 'error',\n    });\n  }\n  verbose(message: string, context?: string) {\n    super.debug.apply(this, [message, context]);\n\n    this.logsService.createLog({\n      message,\n      context,\n      level: 'error',\n    });\n  }\n}\n\nexport default CustomLogger;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Customer.html":{"url":"entities/Customer.html","title":"entity - Customer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/customer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                    Public\n                                airtimeActivities\n                            \n                            \n                                    Public\n                                electricityBillActivities\n                            \n                            \n                                    Public\n                                kyc\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                merchant\n                            \n                            \n                                    Public\n                                merchantAccounts\n                            \n                            \n                                    Public\n                                mobileDataActivities\n                            \n                            \n                                    Public\n                                pin\n                            \n                            \n                                    Public\n                                receivedRequests\n                            \n                            \n                                    Public\n                                receivedTransfers\n                            \n                            \n                                    Public\n                                referralCode\n                            \n                            \n                                referrals\n                            \n                            \n                                referredBy\n                            \n                            \n                                    Public\n                                sentRequests\n                            \n                            \n                                    Public\n                                sentTransfers\n                            \n                            \n                                    Public\n                                tvSubscriptionActivities\n                            \n                            \n                                    Public\n                                wallets\n                            \n                            \n                                    Public\n                                withdrawals\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, accounts => accounts.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        airtimeActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AirtimeActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        electricityBillActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElectricityBillActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        kyc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomerKyc\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, customerKyc => customerKyc.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserLevels\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        merchant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Merchant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, merchant => merchant.userAccounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        merchantAccounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Merchant[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, merchant => merchant.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mobileDataActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MobileDataActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receivedRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, request => request.toUser)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receivedTransfers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReceiveTransfer[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, transfer => transfer.receiveUser)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referrals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Referral[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referrals => referrals.referredBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referredBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Referral\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, referrals => referrals.referred)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sentRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, request => request.fromUser)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sentTransfers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SendTransfer[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, transfer => transfer.sendUser)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tvSubscriptionActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TvSubscriptionActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, wallet => wallet.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        withdrawals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Withdrawal[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, withdrawal => withdrawal.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Account } from 'src/account/entities/account.entity';\nimport { AirtimeActivity } from 'src/activities/entities/airtime-activity.entity';\nimport { ElectricityBillActivity } from 'src/activities/entities/electricity-bill-activity.entity';\nimport { MobileDataActivity } from 'src/activities/entities/mobiledata-activity.entity';\nimport { TvSubscriptionActivity } from 'src/activities/entities/tv-subscription-activity.entity';\nimport { UserLevels, USER_LEVELS } from 'src/common/types/roles.type';\nimport { Merchant } from 'src/merchant-api/entities/merchant.entity';\nimport { Referral } from 'src/referral/entities/referral.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { ReceiveTransfer } from 'src/transfers/entities/receive-transfer.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne, OneToMany, OneToOne } from 'typeorm';\nimport { CustomerKyc } from './customer-kyc.entity';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Customer extends User {\n  @Exclude()\n  @Column({ nullable: true })\n  public pin: string;\n\n  @Column()\n  public referralCode: string;\n\n  @Column({ default: USER_LEVELS.ZERO })\n  public level: UserLevels;\n\n  @OneToOne(() => CustomerKyc, (customerKyc: CustomerKyc) => customerKyc.user)\n  public kyc: CustomerKyc;\n\n  @OneToMany(() => Account, (accounts: Account) => accounts.user)\n  public accounts: Account[];\n\n  @OneToMany(() => Referral, (referrals: Referral) => referrals.referredBy)\n  referrals: Referral[];\n\n  @OneToOne(() => Referral, (referrals: Referral) => referrals.referred)\n  referredBy: Referral;\n\n  @OneToMany(() => Withdrawal, (withdrawal: Withdrawal) => withdrawal.user)\n  public withdrawals: Withdrawal[];\n\n  @OneToMany(() => Wallet, (wallet: Wallet) => wallet.user)\n  public wallets: Wallet[];\n\n  @OneToMany(() => SendTransfer, (transfer: SendTransfer) => transfer.sendUser)\n  public sentTransfers: SendTransfer[];\n\n  @OneToMany(\n    () => ReceiveTransfer,\n    (transfer: ReceiveTransfer) => transfer.receiveUser,\n  )\n  public receivedTransfers: ReceiveTransfer[];\n\n  @OneToMany(\n    () => TransferRequest,\n    (request: TransferRequest) => request.fromUser,\n  )\n  public sentRequests: TransferRequest[];\n\n  @OneToMany(\n    () => TransferRequest,\n    (request: TransferRequest) => request.toUser,\n  )\n  public receivedRequests: TransferRequest[];\n\n  @OneToMany(\n    () => TvSubscriptionActivity,\n    (activity: TvSubscriptionActivity) => activity.user,\n  )\n  public tvSubscriptionActivities: TvSubscriptionActivity[];\n\n  @OneToMany(\n    () => MobileDataActivity,\n    (activity: MobileDataActivity) => activity.user,\n  )\n  public mobileDataActivities: MobileDataActivity[];\n\n  @OneToMany(\n    () => ElectricityBillActivity,\n    (activity: ElectricityBillActivity) => activity.user,\n  )\n  public electricityBillActivities: ElectricityBillActivity[];\n\n  @OneToMany(\n    () => AirtimeActivity,\n    (activity: AirtimeActivity) => activity.user,\n  )\n  public airtimeActivities: AirtimeActivity[];\n\n  @OneToMany(() => Merchant, (merchant: Merchant) => merchant.owner)\n  public merchantAccounts: Merchant[];\n\n  @ManyToOne(() => Merchant, (merchant: Merchant) => merchant.userAccounts)\n  public merchant: Merchant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CustomerKyc.html":{"url":"entities/CustomerKyc.html","title":"entity - CustomerKyc","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CustomerKyc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/customer-kyc.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bvn\n                            \n                            \n                                    Public\n                                bvnDob\n                            \n                            \n                                    Public\n                                bvnGender\n                            \n                            \n                                    Public\n                                bvnName\n                            \n                            \n                                    Public\n                                bvnNationality\n                            \n                            \n                                    Public\n                                kycApproved\n                            \n                            \n                                    Public\n                                kycIdDocument\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bvn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bvnDob\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bvnGender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bvnName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bvnNationality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        kycApproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        kycIdDocument\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, customer => customer.kyc)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/customer-kyc.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { type } from 'os';\nimport { EntityContainer } from 'src/common/types/entity';\nimport { KYC_STATUS, KycStatus } from 'src/common/types/status.type';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { Customer } from './customer.entity';\n\n@Entity()\nexport class CustomerKyc extends EntityContainer {\n  @Column({ nullable: true })\n  public bvnName: string;\n\n  @Column({ nullable: true })\n  public bvnDob: string;\n\n  @Column({ nullable: true })\n  public bvnNationality: string;\n\n  @Column({ nullable: true })\n  public bvnGender: string;\n\n  @Column({ nullable: true })\n  public kycIdDocument: string;\n\n  @Column({ default: KYC_STATUS.PENDING })\n  public status: KycStatus;\n\n  @Exclude()\n  @Column({ nullable: true })\n  bvn: string;\n\n  @OneToOne(() => Customer, (customer: Customer) => customer.kyc)\n  public user: Customer;\n\n  @Column()\n  public userId: number;\n\n  @Column({ default: false })\n  public kycApproved: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerKycRepository.html":{"url":"classes/CustomerKycRepository.html","title":"class - CustomerKycRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerKycRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repositories/customer-kyc.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { CustomerKyc } from '../entities/customer-kyc.entity';\n\n@EntityRepository(CustomerKyc)\nexport class CustomerKycRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerRepository.html":{"url":"classes/CustomerRepository.html","title":"class - CustomerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repositories/customer.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                findByPhoneNumber\n                            \n                            \n                                findByReferralCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repositories/customer.repository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repositories/customer.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByPhoneNumber\n                        \n                    \n                \n            \n            \n                \nfindByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repositories/customer.repository.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByReferralCode\n                        \n                    \n                \n            \n            \n                \nfindByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repositories/customer.repository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Customer } from '../entities/customer.entity';\n\n@EntityRepository(Customer)\nexport class CustomerRepository extends Repository {\n  findByEmail(email: string) {\n    return this.findOne(\n      { email: email },\n      {\n        relations: ['wallets'],\n      },\n    );\n  }\n\n  findById(id: number) {\n    return this.findOne(\n      { id: id },\n      {\n        relations: ['wallets'],\n      },\n    );\n  }\n\n  findByPhoneNumber(phoneNumber: string) {\n    return this.findOne({ phoneNumber });\n  }\n\n  findByReferralCode(referralCode: string) {\n    return this.findOne({ referralCode });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseLogger.html":{"url":"classes/DatabaseLogger.html","title":"class - DatabaseLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/database-logger.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            TypeOrmLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                            \n                                logMigration\n                            \n                            \n                                logQuery\n                            \n                            \n                                logQueryError\n                            \n                            \n                                logQuerySlow\n                            \n                            \n                                logSchemaBuild\n                            \n                            \n                                    Private\n                                stringifyParameters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NestLogger('SQL')\n                    \n                \n                    \n                        \n                                Defined in src/database/database-logger.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(level: \"log\" | \"info\" | \"warn\", message: string, queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/database-logger.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                            \"log\" | \"info\" | \"warn\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logMigration\n                        \n                    \n                \n            \n            \n                \nlogMigration(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/database-logger.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQuery\n                        \n                    \n                \n            \n            \n                \nlogQuery(query: string, parameters?: [], queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/database-logger.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQueryError\n                        \n                    \n                \n            \n            \n                \nlogQueryError(error: string, query: string, parameters?: [], queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/database-logger.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQuerySlow\n                        \n                    \n                \n            \n            \n                \nlogQuerySlow(time: number, query: string, parameters?: [], queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/database-logger.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logSchemaBuild\n                        \n                    \n                \n            \n            \n                \nlogSchemaBuild(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/database-logger.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stringifyParameters\n                        \n                    \n                \n            \n            \n                \n                    \n                    stringifyParameters(parameters?: [])\n                \n            \n\n\n            \n                \n                    Defined in src/database/database-logger.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger as TypeOrmLogger, QueryRunner } from 'typeorm';\nimport { Logger as NestLogger } from '@nestjs/common';\n\nclass DatabaseLogger implements TypeOrmLogger {\n  private readonly logger = new NestLogger('SQL');\n\n  logQuery(query: string, parameters?: unknown[], queryRunner?: QueryRunner) {\n    if (queryRunner?.data?.isCreatingLogs) {\n      return;\n    }\n    this.logger.log(\n      `${query} -- Parameters: ${this.stringifyParameters(parameters)}`,\n    );\n  }\n  logQueryError(\n    error: string,\n    query: string,\n    parameters?: unknown[],\n    queryRunner?: QueryRunner,\n  ) {\n    if (queryRunner?.data?.isCreatingLogs) {\n      return;\n    }\n    this.logger.error(\n      `${query} -- Parameters: ${this.stringifyParameters(\n        parameters,\n      )} -- ${error}`,\n    );\n  }\n  logQuerySlow(\n    time: number,\n    query: string,\n    parameters?: unknown[],\n    queryRunner?: QueryRunner,\n  ) {\n    if (queryRunner?.data?.isCreatingLogs) {\n      return;\n    }\n    this.logger.warn(\n      `Time: ${time} -- Parameters: ${this.stringifyParameters(\n        parameters,\n      )} -- ${query}`,\n    );\n  }\n  logMigration(message: string) {\n    this.logger.log(message);\n  }\n  logSchemaBuild(message: string) {\n    this.logger.log(message);\n  }\n  log(\n    level: 'log' | 'info' | 'warn',\n    message: string,\n    queryRunner?: QueryRunner,\n  ) {\n    if (queryRunner?.data?.isCreatingLogs) {\n      return;\n    }\n    if (level === 'log') {\n      return this.logger.log(message);\n    }\n    if (level === 'info') {\n      return this.logger.debug(message);\n    }\n    if (level === 'warn') {\n      return this.logger.warn(message);\n    }\n  }\n  private stringifyParameters(parameters?: unknown[]) {\n    try {\n      return JSON.stringify(parameters);\n    } catch {\n      return '';\n    }\n  }\n}\n\nexport default DatabaseLogger;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { Setting } from 'src/settings/entities/setting.entity';\nimport Log from 'src/log/entities/log.entity';\nimport DatabaseLogger from './database-logger';\nimport { ReceiveTransfer } from 'src/transfers/entities/receive-transfer.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Referral } from 'src/referral/entities/referral.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { AirtimeActivity } from 'src/activities/entities/airtime-activity.entity';\nimport { ElectricityBillActivity } from 'src/activities/entities/electricity-bill-activity.entity';\nimport { TvSubscriptionActivity } from 'src/activities/entities/tv-subscription-activity.entity';\nimport { MobileDataActivity } from 'src/activities/entities/mobiledata-activity.entity';\nimport { Deposit } from 'src/transactions/entities/deposit.entity';\nimport { Account } from 'src/account/entities/account.entity';\nimport { Merchant } from 'src/merchant-api/entities/merchant.entity';\nimport { PaymentMerchant } from 'src/settings/entities/payment-merchant.entity';\nimport { Admin } from 'src/admin/entities/admin.entity';\nimport { SeedingLogEntry } from 'src/seeding/entities/seeding.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        logger: new DatabaseLogger(),\n        host: configService.get('POSTGRES_DB_HOST'),\n        port: configService.get('POSTGRES_DB_PORT'),\n        username: configService.get('POSTGRES_USER'),\n        password: configService.get('POSTGRES_PASSWORD'),\n        database: configService.get('POSTGRES_DB'),\n        ssl: configService.get('NODE_ENV') === 'dev' ? false : true,\n        entities: [\n          Setting,\n          Log,\n          Customer,\n          Admin,\n          Wallet,\n          Withdrawal,\n          ReceiveTransfer,\n          SendTransfer,\n          TransferRequest,\n          Account,\n          Referral,\n          AirtimeActivity,\n          ElectricityBillActivity,\n          TvSubscriptionActivity,\n          MobileDataActivity,\n          Deposit,\n          Merchant,\n          PaymentMerchant,\n          SeedingLogEntry,\n        ],\n        migrations: ['dist/migrations/**/*{.ts,.js}'],\n        cli: {\n          migrationsDir: 'src/migrations',\n        },\n        synchronize: true,\n        migrationsRun: true,\n\n        autoLoadEntities: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteReceiveTransferPermission.html":{"url":"classes/DeleteReceiveTransferPermission.html","title":"class - DeleteReceiveTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteReceiveTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DELETE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSendTransferPermission.html":{"url":"classes/DeleteSendTransferPermission.html","title":"class - DeleteSendTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSendTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DELETE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SendTransfer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteTransferRequestPermission.html":{"url":"classes/DeleteTransferRequestPermission.html","title":"class - DeleteTransferRequestPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteTransferRequestPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DELETE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:120\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserPermission.html":{"url":"classes/DeleteUserPermission.html","title":"class - DeleteUserPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DELETE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Customer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteWithdrawalPermission.html":{"url":"classes/DeleteWithdrawalPermission.html","title":"class - DeleteWithdrawalPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteWithdrawalPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DELETE\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Withdrawal\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:145\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Deposit.html":{"url":"entities/Deposit.html","title":"entity - Deposit","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Deposit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/entities/deposit.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/deposit.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, customer => customer.withdrawals)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/deposit.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.withdrawals)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/deposit.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  TRANSACTION,\n  TransactionType,\n} from 'src/common/types/transaction.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Transaction } from './transaction.entity';\n\n@Entity()\nexport class Deposit extends Transaction {\n  @ManyToOne(() => Customer, (customer: Customer) => customer.withdrawals)\n  user: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.withdrawals)\n  wallet: Wallet;\n\n  @Column({ default: TRANSACTION.DEPOSIT })\n  type: TransactionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DepositRepository.html":{"url":"classes/DepositRepository.html","title":"class - DepositRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DepositRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/repositories/deposit.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByReference\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByReference\n                        \n                    \n                \n            \n            \n                \nfindByReference(reference: string)\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/repositories/deposit.repository.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Deposit } from '../entities/deposit.entity';\nimport { Withdrawal } from '../entities/withdrawal.entity';\n\n@EntityRepository(Deposit)\nexport class DepositRepository extends Repository {\n  findByReference(reference: string) {\n    return this.findOne({ reference });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditReceiveTransferPermission.html":{"url":"classes/EditReceiveTransferPermission.html","title":"class - EditReceiveTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditReceiveTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EDIT\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditSendTransferPermission.html":{"url":"classes/EditSendTransferPermission.html","title":"class - EditSendTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditSendTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EDIT\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SendTransfer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditTransferRequestPermission.html":{"url":"classes/EditTransferRequestPermission.html","title":"class - EditTransferRequestPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditTransferRequestPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EDIT\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:115\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserPermission.html":{"url":"classes/EditUserPermission.html","title":"class - EditUserPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EDIT\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Customer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditWithdrawalPermission.html":{"url":"classes/EditWithdrawalPermission.html","title":"class - EditWithdrawalPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditWithdrawalPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EDIT\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Withdrawal\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:140\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ElectricityBillActivity.html":{"url":"entities/ElectricityBillActivity.html","title":"entity - ElectricityBillActivity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ElectricityBillActivity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/entities/electricity-bill-activity.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivitiesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/electricity-bill-activity.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.electricityBillActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/electricity-bill-activity.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.mobileDataActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/electricity-bill-activity.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ACTIVITIES, ActivitiesType } from 'src/common/types/activities.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Activity } from './activity.entity';\n\n@Entity()\nexport class ElectricityBillActivity extends Activity {\n  @Column({ default: ACTIVITIES.ELECTRICITY })\n  type: ActivitiesType;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.electricityBillActivities)\n  user: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.mobileDataActivities)\n  wallet: Wallet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElectricityBillActivityRepository.html":{"url":"classes/ElectricityBillActivityRepository.html","title":"class - ElectricityBillActivityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ElectricityBillActivityRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/repositories/electricity-bill-activity.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { ElectricityBillActivity } from '../entities/electricity-bill-activity.entity';\n\n@EntityRepository(ElectricityBillActivity)\nexport class ElectricityBillActivityRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Email.html":{"url":"entities/Email.html","title":"entity - Email","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/entities/email.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                emailCode\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/entities/email.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/entities/email.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/email/entities/email.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Email {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  emailCode: string;\n\n  @Column()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailController.html":{"url":"controllers/EmailController.html","title":"controller - EmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                email\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/email/email.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { EmailService } from './email.service';\nimport { CreateEmailDto } from './dto/create-email.dto';\nimport { UpdateEmailDto } from './dto/update-email.dto';\n\n@Controller('email')\nexport class EmailController {\n  constructor(private readonly emailService: EmailService) {}\n  @Get()\n  findAll() {\n    return this.emailService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_imports\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\n\nNodemailerModule\n\nNodemailerModule\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nNodemailerModule->EmailModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NodemailerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { NodemailerModule } from 'src/nodemailer/nodemailer.module';\nimport { NodemailerService } from 'src/nodemailer/nodemailer.service';\nimport { UserModule } from 'src/user/user.module';\nimport { EmailController } from './email.controller';\nimport { EmailService } from './email.service';\nimport { Email } from './entities/email.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Email]), NodemailerModule],\n  controllers: [EmailController],\n  providers: [EmailService],\n  exports: [EmailService],\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteCode\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                sendMail\n                            \n                            \n                                    Async\n                                sendVerificationCode\n                            \n                            \n                                    Async\n                                verifyMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailRepository: Repository, nodeMailerService: NodemailerService)\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeMailerService\n                                                  \n                                                        \n                                                                        NodemailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCode(email)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(options: CreateEmailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendVerificationCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendVerificationCode(email: string, queryRunner?: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyMail(code, email)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { NodemailerService } from 'src/nodemailer/nodemailer.service';\nimport { UserService } from 'src/user/user.service';\nimport { generateVerificationCode } from 'src/utils/random-generators';\nimport { QueryRunner, Repository } from 'typeorm';\nimport { CreateEmailDto } from './dto/create-email.dto';\nimport { Email } from './entities/email.entity';\n// import sgMail from '@sendgrid/mail';\n\n@Injectable()\nexport class EmailService {\n  constructor(\n    @InjectRepository(Email) private emailRepository: Repository,\n    private readonly nodeMailerService: NodemailerService,\n  ) {}\n  async sendMail(options: CreateEmailDto) {\n    return await this.nodeMailerService.sendMail(options);\n  }\n\n  async sendVerificationCode(email: string, queryRunner?: QueryRunner) {\n    const code = await generateVerificationCode();\n\n    const existingCode = await queryRunner.manager.findOne(Email, { email });\n\n    if (existingCode) {\n      throw new HttpException(\n        'Code already crreated for email',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n    const mail = await queryRunner.manager.create(Email, {\n      email: email,\n      emailCode: code,\n    });\n\n    await queryRunner.manager.save(Email, mail);\n\n    return await this.sendMail({\n      from: 'developer.degoke@gmail.com',\n      to: email,\n      text: code,\n      subject: 'Your TapMoni verification code',\n      html: `\n      Here is your TapMoni verification code\n      \n      ${code}\n      `,\n    });\n  }\n\n  async verifyMail(code, email) {\n    try {\n      const data = await this.emailRepository.findOne({ email });\n\n      if (!data) {\n        throw new HttpException('Invalid Email', HttpStatus.BAD_REQUEST);\n      }\n\n      if (data.emailCode !== code) {\n        throw new HttpException('Invalid code', HttpStatus.BAD_REQUEST);\n      }\n\n      await this.deleteCode(email);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // async sendMail() {\n  //   try {\n  //     sgMail.setApiKey(this.configService.get('SENDGRID_API_KEY'));\n  //     const message = ''\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // }\n\n  async deleteCode(email) {\n    return await this.emailRepository.delete({ email });\n  }\n\n  async findAll() {\n    return await this.emailRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityContainer.html":{"url":"classes/EntityContainer.html","title":"class - EntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/types/entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createddate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/types/entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/types/entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/types/entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport abstract class EntityContainer {\n  @PrimaryGeneratedColumn()\n  public id: number;\n\n  @CreateDateColumn()\n  createddate: Date;\n\n  @UpdateDateColumn()\n  updateddate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FWWithdrawalDto.html":{"url":"classes/FWWithdrawalDto.html","title":"class - FWWithdrawalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FWWithdrawalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/dto/withdrawal.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account_bank\n                            \n                            \n                                account_number\n                            \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                wallet_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account_bank\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/withdrawal.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account_number\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/withdrawal.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/withdrawal.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/withdrawal.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet_id\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/withdrawal.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsNotEmpty, IsString } from 'class-validator';\n\nexport class FWWithdrawalDto {\n  @IsString()\n  @IsNotEmpty()\n  account_bank;\n\n  @IsString()\n  @IsNotEmpty()\n  account_number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  amount;\n\n  @IsString()\n  @IsNotEmpty()\n  currency;\n\n  @IsNumber()\n  @IsNotEmpty()\n  wallet_id;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FinalizeWithdrawalDto.html":{"url":"classes/FinalizeWithdrawalDto.html","title":"class - FinalizeWithdrawalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FinalizeWithdrawalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dto/finalize-withdrawal.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otp\n                            \n                            \n                                transfer_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/finalize-withdrawal.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/finalize-withdrawal.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class FinalizeWithdrawalDto {\n  @IsNotEmpty()\n  @IsString()\n  transfer_code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  otp: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Flutterwave.html":{"url":"classes/Flutterwave.html","title":"class - Flutterwave","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Flutterwave\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/entities/flutterwave.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Flutterwave {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FlutterwaveController.html":{"url":"controllers/FlutterwaveController.html","title":"controller - FlutterwaveController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FlutterwaveController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/flutterwave.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                flutterwave\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n            \n                \n                    Defined in src/flutterwave/flutterwave.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { FlutterwaveService } from './flutterwave.service';\nimport { InitiateDepositDto } from './dto/initiate-deposit.dto';\nimport { AuthorizeDepositDto } from './dto/authorize-deposit.dto';\nimport { request } from 'http';\nimport { Public } from 'src/common/decorators/jwt-auth-guard.decorator';\n\n@Controller('flutterwave')\nexport class FlutterwaveController {\n  constructor(private readonly flutterwaveService: FlutterwaveService) {}\n  @Public()\n  @Get()\n  test() {\n    return this.flutterwaveService.getNairaWalletBalance();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FlutterwaveModule.html":{"url":"modules/FlutterwaveModule.html","title":"module - FlutterwaveModule","body":"\n                   \n\n\n\n\n    Modules\n    FlutterwaveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FlutterwaveModule\n\n\n\ncluster_FlutterwaveModule_providers\n\n\n\ncluster_FlutterwaveModule_exports\n\n\n\n\nFlutterwaveService \n\nFlutterwaveService \n\n\n\nFlutterwaveModule\n\nFlutterwaveModule\n\nFlutterwaveService  -->\n\nFlutterwaveModule->FlutterwaveService \n\n\n\n\n\nFlutterwaveService\n\nFlutterwaveService\n\nFlutterwaveModule -->\n\nFlutterwaveService->FlutterwaveModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/flutterwave/flutterwave.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FlutterwaveService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FlutterwaveController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FlutterwaveService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FlutterwaveService } from './flutterwave.service';\nimport { FlutterwaveController } from './flutterwave.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [FlutterwaveController],\n  providers: [FlutterwaveService],\n  exports: [FlutterwaveService],\n})\nexport class FlutterwaveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlutterwaveService.html":{"url":"injectables/FlutterwaveService.html","title":"injectable - FlutterwaveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlutterwaveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/flutterwave.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseURI\n                            \n                            \n                                    Private\n                                encryptKey\n                            \n                            \n                                    Private\n                                flw\n                            \n                            \n                                    Private\n                                publicKey\n                            \n                            \n                                    Private\n                                requestHeaders\n                            \n                            \n                                    Private\n                                secretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getNairaWalletBalance\n                            \n                            \n                                    Async\n                                getTransferStatus\n                            \n                            \n                                    Async\n                                transfer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/flutterwave/flutterwave.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getNairaWalletBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNairaWalletBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/flutterwave/flutterwave.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTransferStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransferStatus(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/flutterwave/flutterwave.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transfer\n                        \n                    \n                \n            \n            \n                \n                    \n                    transfer(initiateWithdrawalDto: InitiateWithdrawalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/flutterwave/flutterwave.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    initiateWithdrawalDto\n                                    \n                                                InitiateWithdrawalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/flutterwave.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encryptKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/flutterwave.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flw\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flutterwave\n\n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/flutterwave.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/flutterwave.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestHeaders\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/flutterwave/flutterwave.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/flutterwave.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { HttpException, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { catchError, lastValueFrom, map } from 'rxjs';\nimport { CreateBillDto } from './dto/create-bill.dto';\nimport { InitiateDepositDto } from './dto/initiate-deposit.dto';\nimport { BillCategories } from './interfaces/bills-categories';\nimport * as crypto from 'crypto';\nimport * as forge from 'node-forge';\nimport { AuthorizeDepositDto } from './dto/authorize-deposit.dto';\nimport { ValidateDepositDto } from './dto/validate-deposit.dto';\nimport { UssdDepositData } from './interfaces/deposits.interface';\nimport { UssdDepositDto } from './dto/ussd-deposit.dto';\nimport { InitiateWithdrawalDto } from './dto/initiate-withdrawal.dto';\nimport { InitiateWithdrawalData } from './interfaces/withdrawal.interface';\nimport { getTransactionReference } from 'src/utils/random-generators';\nimport { CreateReservedAccountDto } from './dto/create-reserved-account.dto';\nimport { compare } from 'bcrypt';\nimport * as Flutterwave from 'flutterwave-node-v3';\nimport { CURRENCY } from 'src/common/types/currency.type';\n\n@Injectable()\nexport class FlutterwaveService {\n  private flw: Flutterwave;\n  private secretKey: string;\n  private publicKey: string;\n  private baseURI: string;\n  private encryptKey: string;\n  private requestHeaders;\n  constructor(\n    private readonly configService: ConfigService,\n    private httpService: HttpService,\n  ) {\n    this.secretKey = this.configService.get('FLUTTERWAVE_SECRET_KEY');\n    this.publicKey = this.configService.get('FLUTTERWAVE_PUBLIC_KEY');\n    this.encryptKey = this.configService.get('FLUTTERWAVE_ENCRYPT_KEY');\n    this.flw = new Flutterwave(this.publicKey, this.secretKey);\n    this.requestHeaders = {\n      headers: {\n        Authorization: `Bearer ${this.secretKey}`,\n      },\n    };\n  }\n\n  async transfer(initiateWithdrawalDto: InitiateWithdrawalDto) {\n    try {\n      const result = await this.flw.Transfer.initiate(initiateWithdrawalDto);\n      console.log(result);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getTransferStatus(id: number) {\n    try {\n      return await this.flw.Transfer.get_a_transfer({ id });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getNairaWalletBalance() {\n    try {\n      const result = await this.flw.Misc.bal_currency({\n        currency: CURRENCY.NAIRA,\n      });\n      return {\n        nairaWalletBalance: result.data.available_balance,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /*async getAllBillCategories(category: BillCategoryType) {\n    const response = this.httpService\n      .get(\n        `https://api.flutterwave.com/v3/bill-categories?${category}=1`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((response) => response.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n    const categories = await lastValueFrom(response);\n    if (categories.status === 'success') {\n      return categories.data.filter((category) => category.country === 'NG');\n    }\n    return categories;\n  }\n\n  async validateBillService(\n    itemCode: string,\n    customerCode: string,\n    billerCode: string,\n  ) {\n    const response = this.httpService\n      .get(\n        `https://api.flutterwave.com/v3/bill-items/${itemCode}/validate?code=${billerCode}&customer=${customerCode}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((response) => response.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n    const result = await lastValueFrom(response);\n    console.log(result);\n  }\n\n  async createBill(createBillDto: CreateBillDto) {\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/bills`,\n        createBillDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async verifyBvn(bvn: string) {\n    const response = this.httpService\n      .get(\n        `https://api.flutterwave.com/v3/kyc/bvns/${bvn}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async getBillPaymentStatus(verbose: boolean, reference: string) {\n    const response = this.httpService\n      .get(\n        `https://api.flutterwave.com/v3/bills/${reference}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async verifyAccountNumber(accountNumber: string, bankCode: string) {\n    const payload = {\n      account_number: accountNumber,\n      bank_code: bankCode,\n    };\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/accounts/resolve`,\n        payload,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async getAllBankCodes(country = 'NG') {\n    const response = this.httpService\n      .get(\n        `https://api.flutterwave.com/v3/banks/${country}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async initiateCardDeposit(initiateDepositDto: InitiateDepositDto) {\n    const reference = await getTransactionReference();\n    const initiateDepositData = { ...initiateDepositDto, tx_ref: reference };\n    const payload = {\n      client: this.encrypt(JSON.stringify(initiateDepositData)),\n    };\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/charges?type=card`,\n        payload,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    const data = await lastValueFrom(response);\n    return {\n      request: payload,\n      response: data,\n    };\n  }\n\n  async authorizeCardDeposit(authorizeDepositDto: AuthorizeDepositDto) {\n    const payload = {\n      client: this.encrypt(JSON.stringify(authorizeDepositDto)),\n    };\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/charges?type=card`,\n        payload,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async validateCardDeposit(validateDepositDto: ValidateDepositDto) {\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/validate-charge`,\n        validateDepositDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async verifyTransaction(id: string) {\n    const response = this.httpService\n      .get(\n        `https://api.flutterwave.com/v3/transactions/${id}/verify`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async initiateUssdDeposit(ussdDepositDto: UssdDepositDto) {\n    const reference = await getTransactionReference();\n    const ussdDepositData: UssdDepositData = {\n      ...ussdDepositDto,\n      tx_ref: reference,\n    };\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/charges?type=ussd`,\n        ussdDepositData,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async initiateWithdrawal(initiateWithdrawalDto: InitiateWithdrawalDto) {\n    const reference = await getTransactionReference();\n    const initiateWithdrawalData: InitiateWithdrawalData = {\n      ...initiateWithdrawalDto,\n      reference: reference,\n    };\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/transfers`,\n        initiateWithdrawalData,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async createReservedAccount(\n    createReservedAccountDto: CreateReservedAccountDto,\n  ) {\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/virtual-account-numbers`,\n        createReservedAccountDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async deleteReservedAccount(orderRef: string) {\n    const response = this.httpService\n      .post(\n        `https://api.flutterwave.com/v3/virtual-account-numbers/${orderRef}`,\n        null,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  encrypt(text: string) {\n    const cipher = forge.cipher.createCipher(\n      '3DES-ECB',\n      forge.util.createBuffer(this.encryptKey),\n    );\n    cipher.start({ iv: '' });\n    cipher.update(forge.util.createBuffer(text, 'utf-8'));\n    cipher.finish();\n    const encrypted = cipher.output;\n    return forge.util.encode64(encrypted.getBytes());\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Health.html":{"url":"classes/Health.html","title":"class - Health","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Health\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/entities/health.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Health {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheckService,\n  HealthCheck,\n  TypeOrmHealthIndicator,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from '@nestjs/terminus';\n\n@Controller('health')\nclass HealthController {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.healthCheckService.check([\n      () => this.typeOrmHealthIndicator.pingCheck('database'),\n      // the process should not use more than 300MB memory\n      () =>\n        this.memoryHealthIndicator.checkHeap('memory heap', 300 * 1024 * 1024),\n      // The process should not have more than 300MB RSS memory allocated\n      () =>\n        this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n      // the used disk storage should not exceed the 50% of the available space\n      () =>\n        this.diskHealthIndicator.checkStorage('disk health', {\n          thresholdPercent: 0.5,\n          path: '/',\n        }),\n    ]);\n  }\n}\n\nexport default HealthController;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport HealthController from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n  providers: [],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializeWithdrawalDto.html":{"url":"classes/InitializeWithdrawalDto.html","title":"class - InitializeWithdrawalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializeWithdrawalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dto/initialize-withdrawal.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                reason\n                            \n                            \n                                recipient\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/initialize-withdrawal.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/initialize-withdrawal.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recipient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/initialize-withdrawal.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/initialize-withdrawal.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class InitializeWithdrawalDto {\n  @IsString()\n  @IsNotEmpty()\n  source: string;\n\n  @IsString()\n  @IsNotEmpty()\n  reason: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  amount: number;\n\n  @IsString()\n  @IsNotEmpty()\n  recipient: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiateDepositDto.html":{"url":"classes/InitiateDepositDto.html","title":"class - InitiateDepositDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiateDepositDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/dto/initiate-deposit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                card_number\n                            \n                            \n                                currency\n                            \n                            \n                                cvv\n                            \n                            \n                                email\n                            \n                            \n                                expiry_month\n                            \n                            \n                                expiry_year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-deposit.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        card_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-deposit.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-deposit.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cvv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-deposit.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-deposit.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-deposit.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiry_year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-deposit.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class InitiateDepositDto {\n  @IsString()\n  @IsNotEmpty()\n  amount: string;\n\n  @IsString()\n  @IsNotEmpty()\n  currency: string;\n\n  @IsString()\n  @IsNotEmpty()\n  card_number: string;\n\n  @IsString()\n  @IsNotEmpty()\n  cvv: string;\n\n  @IsString()\n  @IsNotEmpty()\n  expiry_month: string;\n\n  @IsString()\n  @IsNotEmpty()\n  expiry_year: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiateMNTransferDto.html":{"url":"classes/InitiateMNTransferDto.html","title":"class - InitiateMNTransferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiateMNTransferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monnify/dto/initiate-transfer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                destinationAccountNumber\n                            \n                            \n                                destinationBankCode\n                            \n                            \n                                narration\n                            \n                            \n                                reference\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/initiate-transfer.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/initiate-transfer.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destinationAccountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/initiate-transfer.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destinationBankCode\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/initiate-transfer.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        narration\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/initiate-transfer.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/monnify/dto/initiate-transfer.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class InitiateMNTransferDto {\n  @IsNumber()\n  @IsNotEmpty()\n  amount;\n\n  @IsString()\n  @IsNotEmpty()\n  reference;\n\n  @IsString()\n  @IsNotEmpty()\n  narration;\n\n  @IsString()\n  @IsNotEmpty()\n  destinationBankCode;\n\n  @IsString()\n  @IsNotEmpty()\n  destinationAccountNumber;\n\n  @IsString()\n  @IsNotEmpty()\n  currency;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiateWithdrawalData.html":{"url":"classes/InitiateWithdrawalData.html","title":"class - InitiateWithdrawalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiateWithdrawalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/interfaces/withdrawal.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        InitiateWithdrawalDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reference\n                            \n                            \n                                account_bank\n                            \n                            \n                                account_number\n                            \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                narration\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateWithdrawalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateWithdrawalDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account_bank\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateWithdrawalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateWithdrawalDto:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account_number\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateWithdrawalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateWithdrawalDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateWithdrawalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateWithdrawalDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateWithdrawalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateWithdrawalDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        narration\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         InitiateWithdrawalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         InitiateWithdrawalDto:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { InitiateWithdrawalDto } from '../dto/initiate-withdrawal.dto';\n\nexport class InitiateWithdrawalData extends InitiateWithdrawalDto {\n  @IsString()\n  @IsNotEmpty()\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitiateWithdrawalDto.html":{"url":"classes/InitiateWithdrawalDto.html","title":"class - InitiateWithdrawalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitiateWithdrawalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/dto/initiate-withdrawal.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account_bank\n                            \n                            \n                                account_number\n                            \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                narration\n                            \n                            \n                                reference\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account_bank\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-withdrawal.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account_number\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-withdrawal.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-withdrawal.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-withdrawal.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        narration\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-withdrawal.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/initiate-withdrawal.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class InitiateWithdrawalDto {\n  @IsString()\n  @IsNotEmpty()\n  account_bank;\n\n  @IsString()\n  @IsNotEmpty()\n  account_number;\n\n  @IsString()\n  @IsNotEmpty()\n  amount;\n\n  @IsString()\n  @IsNotEmpty()\n  narration;\n\n  @IsString()\n  @IsNotEmpty()\n  reference;\n\n  @IsString()\n  @IsNotEmpty()\n  currency;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGaurd.html":{"url":"injectables/JwtAuthGaurd.html","title":"injectable - JwtAuthGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/gaurds/jwt-auth.gaurd.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/gaurds/jwt-auth.gaurd.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/gaurds/jwt-auth.gaurd.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from '../decorators/jwt-auth-guard.decorator';\n\n@Injectable()\nexport class JwtAuthGaurd extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/common/strategy/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/strategy/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UserService } from '../../user/user.service';\nimport { USER_ROLES } from '../types/roles.type';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private UserService: UserService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    const { role, sub } = payload;\n\n    if (role === USER_ROLES.CUSTOMER) {\n      const user = await this.UserService.findCustomerForJwt(sub);\n      if (!user) {\n        return null;\n      }\n      return {\n        user,\n        role,\n      };\n    }\n\n    if (role === USER_ROLES.ADMIN) {\n      const user = await this.UserService.findAdminForJwt(sub);\n      if (!user) {\n        return null;\n      }\n      return {\n        user,\n        role,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGaurd.html":{"url":"injectables/LocalAuthGaurd.html","title":"injectable - LocalAuthGaurd","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGaurd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/gaurds/local-auth.gaurd.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGaurd extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/strategy/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from 'src/auth/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string) {\n    const data = await this.authService.validateUser(email, password);\n\n    if (!data) {\n      throw new UnauthorizedException();\n    }\n\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Log.html":{"url":"entities/Log.html","title":"entity - Log","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/entities/log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                context\n                            \n                            \n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/entities/log.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/entities/log.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/entities/log.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/entities/log.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/log/entities/log.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nclass Log {\n  @PrimaryGeneratedColumn()\n  public id: number;\n\n  @Column()\n  public context: string;\n\n  @Column()\n  public message: string;\n\n  @Column()\n  public level: string;\n\n  @CreateDateColumn()\n  creationDate: Date;\n}\n\nexport default Log;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LogController.html":{"url":"controllers/LogController.html","title":"controller - LogController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LogController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                log\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { LogService } from './log.service';\nimport { CreateLogDto } from './dto/create-log.dto';\nimport { UpdateLogDto } from './dto/update-log.dto';\n\n@Controller('log')\nexport class LogController {\n  constructor(private readonly logService: LogService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogModule\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_LogModule_exports\n\n\n\n\nCustomLogger \n\nCustomLogger \n\n\n\nLogModule\n\nLogModule\n\nCustomLogger  -->\n\nLogModule->CustomLogger \n\n\n\n\n\nCustomLogger\n\nCustomLogger\n\nLogModule -->\n\nCustomLogger->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/log/log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomLogger\n                        \n                        \n                            LogService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LogController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LogService } from './log.service';\nimport { LogController } from './log.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport Log from './entities/log.entity';\nimport CustomLogger from './custom-logger';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Log])],\n  controllers: [LogController],\n  providers: [CustomLogger, LogService],\n  exports: [CustomLogger],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/log/log.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/log/log.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateLogDto } from './dto/create-log.dto';\nimport { UpdateLogDto } from './dto/update-log.dto';\nimport Log from './entities/log.entity';\n\n@Injectable()\nexport class LogService {\n  constructor(\n    @InjectRepository(Log)\n    private logsRepository: Repository,\n  ) {}\n\n  async createLog(log: CreateLogDto) {\n    const newLog = await this.logsRepository.create(log);\n    await this.logsRepository.save(newLog, {\n      data: {\n        isCreatingLogs: true,\n      },\n    });\n    return newLog;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Merchant.html":{"url":"entities/Merchant.html","title":"entity - Merchant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Merchant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/merchant-api/entities/merchant.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                userAccounts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, customer => customer.merchantAccounts)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/merchant-api/entities/merchant.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userAccounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, customer => customer.merchant)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/merchant-api/entities/merchant.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { EntityContainer } from 'src/common/types/entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Entity, ManyToOne, OneToMany } from 'typeorm';\n\n@Entity()\nexport class Merchant extends EntityContainer {\n  @ManyToOne(() => Customer, (customer: Customer) => customer.merchantAccounts)\n  public owner: Customer;\n\n  @OneToMany(() => Customer, (customer: Customer) => customer.merchant)\n  public userAccounts: Customer[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MerchantApiController.html":{"url":"controllers/MerchantApiController.html","title":"controller - MerchantApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MerchantApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/merchant-api/merchant-api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                merchant-api\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMerchantApiDto: CreateMerchantApiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/merchant-api/merchant-api.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createMerchantApiDto\n                                    \n                                                CreateMerchantApiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/merchant-api/merchant-api.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/merchant-api/merchant-api.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/merchant-api/merchant-api.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateMerchantApiDto: UpdateMerchantApiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/merchant-api/merchant-api.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateMerchantApiDto\n                                    \n                                                UpdateMerchantApiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { MerchantApiService } from './merchant-api.service';\nimport { CreateMerchantApiDto } from './dto/create-merchant-api.dto';\nimport { UpdateMerchantApiDto } from './dto/update-merchant-api.dto';\n\n@Controller('merchant-api')\nexport class MerchantApiController {\n  constructor(private readonly merchantApiService: MerchantApiService) {}\n\n  @Post()\n  create(@Body() createMerchantApiDto: CreateMerchantApiDto) {\n    return this.merchantApiService.create(createMerchantApiDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.merchantApiService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.merchantApiService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateMerchantApiDto: UpdateMerchantApiDto,\n  ) {\n    return this.merchantApiService.update(+id, updateMerchantApiDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.merchantApiService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MerchantApiModule.html":{"url":"modules/MerchantApiModule.html","title":"module - MerchantApiModule","body":"\n                   \n\n\n\n\n    Modules\n    MerchantApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MerchantApiModule\n\n\n\ncluster_MerchantApiModule_providers\n\n\n\n\nMerchantApiService\n\nMerchantApiService\n\n\n\nMerchantApiModule\n\nMerchantApiModule\n\nMerchantApiModule -->\n\nMerchantApiService->MerchantApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/merchant-api/merchant-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MerchantApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MerchantApiController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MerchantApiService } from './merchant-api.service';\nimport { MerchantApiController } from './merchant-api.controller';\n\n@Module({\n  controllers: [MerchantApiController],\n  providers: [MerchantApiService],\n})\nexport class MerchantApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MerchantApiService.html":{"url":"injectables/MerchantApiService.html","title":"injectable - MerchantApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MerchantApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/merchant-api/merchant-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMerchantApiDto: CreateMerchantApiDto)\n                \n            \n\n\n            \n                \n                    Defined in src/merchant-api/merchant-api.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createMerchantApiDto\n                                    \n                                                CreateMerchantApiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/merchant-api/merchant-api.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/merchant-api/merchant-api.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/merchant-api/merchant-api.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMerchantApiDto: UpdateMerchantApiDto)\n                \n            \n\n\n            \n                \n                    Defined in src/merchant-api/merchant-api.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateMerchantApiDto\n                                    \n                                                UpdateMerchantApiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMerchantApiDto } from './dto/create-merchant-api.dto';\nimport { UpdateMerchantApiDto } from './dto/update-merchant-api.dto';\n\n@Injectable()\nexport class MerchantApiService {\n  create(createMerchantApiDto: CreateMerchantApiDto) {\n    return 'This action adds a new merchantApi';\n  }\n\n  findAll() {\n    return `This action returns all merchantApi`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} merchantApi`;\n  }\n\n  update(id: number, updateMerchantApiDto: UpdateMerchantApiDto) {\n    return `This action updates a #${id} merchantApi`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} merchantApi`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MobileDataActivity.html":{"url":"entities/MobileDataActivity.html","title":"entity - MobileDataActivity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MobileDataActivity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/entities/mobiledata-activity.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivitiesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/mobiledata-activity.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.mobileDataActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/mobiledata-activity.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.mobileDataActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/mobiledata-activity.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ACTIVITIES, ActivitiesType } from 'src/common/types/activities.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Activity } from './activity.entity';\n\n@Entity()\nexport class MobileDataActivity extends Activity {\n  @Column({ default: ACTIVITIES.MOBILE_DATA })\n  type: ActivitiesType;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.mobileDataActivities)\n  user: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.mobileDataActivities)\n  wallet: Wallet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MobileDataActivityRepository.html":{"url":"classes/MobileDataActivityRepository.html","title":"class - MobileDataActivityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MobileDataActivityRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/repositories/mobile-data-activity.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { MobileDataActivity } from '../entities/mobiledata-activity.entity';\n\n@EntityRepository(MobileDataActivity)\nexport class MobileDataActivityRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Monnify.html":{"url":"classes/Monnify.html","title":"class - Monnify","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Monnify\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monnify/entities/monnify.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Monnify {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MonnifyController.html":{"url":"controllers/MonnifyController.html","title":"controller - MonnifyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MonnifyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monnify/monnify.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                monnify\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  CacheKey,\n  CacheTTL,\n  UseInterceptors,\n  CacheInterceptor,\n} from '@nestjs/common';\nimport { MonnifyService } from './monnify.service';\nimport { CreateMonnifyDto } from './dto/create-monnify.dto';\nimport { UpdateMonnifyDto } from './dto/update-monnify.dto';\n\n@Controller('monnify')\nexport class MonnifyController {\n  constructor(private readonly monnifyService: MonnifyService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MonnifyModule.html":{"url":"modules/MonnifyModule.html","title":"module - MonnifyModule","body":"\n                   \n\n\n\n\n    Modules\n    MonnifyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MonnifyModule\n\n\n\ncluster_MonnifyModule_providers\n\n\n\ncluster_MonnifyModule_exports\n\n\n\n\nMonnifyService \n\nMonnifyService \n\n\n\nMonnifyModule\n\nMonnifyModule\n\nMonnifyService  -->\n\nMonnifyModule->MonnifyService \n\n\n\n\n\nMonnifyService\n\nMonnifyService\n\nMonnifyModule -->\n\nMonnifyService->MonnifyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/monnify/monnify.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MonnifyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MonnifyController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MonnifyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MonnifyService } from './monnify.service';\nimport { MonnifyController } from './monnify.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [MonnifyController],\n  providers: [MonnifyService],\n  exports: [MonnifyService],\n})\nexport class MonnifyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonnifyService.html":{"url":"injectables/MonnifyService.html","title":"injectable - MonnifyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MonnifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monnify/monnify.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authToken\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                createVirtualAccount\n                            \n                            \n                                disburse\n                            \n                            \n                                getAllBanks\n                            \n                            \n                                handleWebHook\n                            \n                            \n                                validateAccountName\n                            \n                            \n                                validateAccountWithBvn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                            \n                                    Async\n                                createReservedAccount\n                            \n                            \n                                    Async\n                                deleteReservedAccount\n                            \n                            \n                                    Async\n                                getAllBankCodes\n                            \n                            \n                                    Async\n                                getReservedAccountTransactions\n                            \n                            \n                                    Async\n                                getTransactionStatus\n                            \n                            \n                                    Async\n                                getWalletBalance\n                            \n                            \n                                    Async\n                                handleResponse\n                            \n                            \n                                    Async\n                                initiateTransfers\n                            \n                            \n                                    Async\n                                listAllTransfers\n                            \n                            \n                                setRequestHeaders\n                            \n                            \n                                    Async\n                                validateAccountBvnMatch\n                            \n                            \n                                    Async\n                                validateAccountNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheManager: Cache, configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/monnify/monnify.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReservedAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReservedAccount(createReservedAccountDto: CreateReservedAccountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReservedAccountDto\n                                    \n                                                CreateReservedAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteReservedAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteReservedAccount(reference: string)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllBankCodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllBankCodes()\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getReservedAccountTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReservedAccountTransactions(reference)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactionStatus(reference)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:395\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWalletBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWalletBalance(accountNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:340\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleResponse(result)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initiateTransfers\n                        \n                    \n                \n            \n            \n                \n                    \n                    initiateTransfers(initiateTransferDto: InitiateMNTransferDto)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:308\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    initiateTransferDto\n                                    \n                                                InitiateMNTransferDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listAllTransfers\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllTransfers()\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:369\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestHeaders\n                        \n                    \n                \n            \n            \n                \nsetRequestHeaders(token)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { headers: { Authorization: string; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateAccountBvnMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAccountBvnMatch(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:424\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateAccountNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAccountNumber(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/monnify/monnify.service.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authToken\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createVirtualAccount\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disburse\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBanks\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleWebHook\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAccountName\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAccountWithBvn\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/monnify/monnify.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport {\n  CACHE_MANAGER,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { catchError, lastValueFrom, map } from 'rxjs';\nimport { Cache } from 'cache-manager';\nimport { CreateReservedAccountDto } from './dto/create-reserved-account.dto';\nimport { InitiateMNTransferDto } from './dto/initiate-transfer.dto';\nimport { TRANSACTION_STATUS } from 'src/common/types/status.type';\n\n@Injectable()\nexport class MonnifyService {\n  private authToken;\n  private baseUrl;\n  constructor(\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n    private readonly configService: ConfigService,\n    private httpService: HttpService,\n  ) {\n    this.cacheManager\n      .get('monnify_token')\n      .then((res) => (this.authToken = res));\n    this.baseUrl = this.configService.get('MONNIFY_BASE_URL');\n  }\n  getAllBanks;\n  validateAccountWithBvn;\n  validateAccountName;\n  disburse;\n  createVirtualAccount;\n  handleWebHook;\n\n  setRequestHeaders(token) {\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async authenticate() {\n    try {\n      if (this.authToken) {\n        return {\n          message: 'Token Available',\n        };\n      }\n\n      const apiKey = this.configService.get('MONNIFY_APIKEY');\n      const apiSecret = this.configService.get('MONNIFY_SECRET_KEY');\n\n      const clientIdSecretInBase64 = Buffer.from(\n        apiKey + ':' + apiSecret,\n      ).toString('base64');\n\n      const headers = {\n        headers: {\n          Authorization: `Basic ${clientIdSecretInBase64}`,\n        },\n      };\n\n      const response = this.httpService\n        .post(`${this.baseUrl}api/v1/auth/login`, null, headers)\n        .pipe(\n          map((res) => res.data),\n          catchError((error) => {\n            throw new HttpException(\n              {\n                status: error.response.status,\n                message: error.response.data.responseMessage,\n                code: error.response.data.responseCode,\n              },\n              error.response.status,\n            );\n          }),\n        );\n\n      const result = await lastValueFrom(response);\n\n      console.log('starting api call...');\n      /*await this.cacheManager.set('monnify_token', 'hi', {\n        ttl: result.responseBody.expiresIn,\n      });*/\n      this.authToken = result.responseBody.accessToken;\n\n      console.log('starting api call...');\n\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async handleResponse(result) {\n    try {\n      if (result.responseCode === '0') {\n        if (result.responseBody.status) {\n          if (\n            result.responseBody.status === 'SUCCESS' ||\n            result.responseBody.status === 'COMPLETED'\n          ) {\n            return {\n              status: TRANSACTION_STATUS.COMPLETED,\n              data: result.responseBody,\n            };\n          }\n\n          if (\n            result.responseBody.status === 'PENDING' ||\n            result.responseBody.status === 'AWAITING_PROCESSING' ||\n            result.responseBody.status === 'IN_PROGRESS'\n          ) {\n            return {\n              status: TRANSACTION_STATUS.IN_PROGRESS,\n              data: result.responseBody,\n            };\n          }\n\n          if (result.responseBody.status === 'PENDING_AUTHORIZATION') {\n            return {\n              status: TRANSACTION_STATUS.PENDING_AUTH,\n              data: result.responseBody,\n            };\n          }\n\n          if (result.responseBody.status === 'REVERSED') {\n            return {\n              status: TRANSACTION_STATUS.REVERSED,\n              data: result.responseBody,\n            };\n          }\n        }\n\n        return {\n          data: result.responseBody,\n        };\n      }\n\n      if (\n        result.responseCode === 'D01' ||\n        result.responseCode === 'D02' ||\n        result.responseCode === 'D03' ||\n        result.responseCode === 'D04'\n      ) {\n        throw new HttpException(result.responseMessage, HttpStatus.BAD_REQUEST);\n      }\n\n      if (result.responseCode === '99') {\n        return {\n          status: TRANSACTION_STATUS.PENDING_REQUERY,\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getAllBankCodes() {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .get(`${this.baseUrl}api/v1/banks`, headers)\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.status,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return result;\n  }\n\n  async validateAccountNumber({ accountNumber, bankCode }) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .get(\n        `api/v1/disbursements/account/validate?accountNumber=${accountNumber}&bankCode=${bankCode}`,\n        headers,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return await this.handleResponse(result);\n  }\n\n  async createReservedAccount(\n    createReservedAccountDto: CreateReservedAccountDto,\n  ) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .post(\n        `${this.baseUrl}api/v2/bank-transfer/reserved-accounts`,\n        createReservedAccountDto,\n        headers,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return await this.handleResponse(result);\n  }\n\n  async deleteReservedAccount(reference: string) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .delete(\n        `${this.baseUrl}api/v1/bank-transfer/reserved-accounts/reference/${reference}`,\n        headers,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return result;\n  }\n\n  async getReservedAccountTransactions(reference) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .get(\n        `${this.baseUrl}api/v1/bank-transfer/reserved-accounts/transactions\n    ?accountReference=${reference}`,\n        headers,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return result;\n  }\n\n  async initiateTransfers(initiateTransferDto: InitiateMNTransferDto) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const sourceNumber = '2953846525';\n\n    const response = this.httpService\n      .post(\n        `${this.baseUrl}api/v2/disbursements/single`,\n        { ...initiateTransferDto, sourceAccountNumber: sourceNumber },\n        headers,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return await this.handleResponse(result);\n  }\n\n  async getWalletBalance(accountNumber: string) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .get(\n        `${this.baseUrl}api/v2/disbursements/wallet-balance?accountNumber=${accountNumber}`,\n        headers,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return result.responseBody.availableBalance;\n  }\n\n  async listAllTransfers() {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .get(`${this.baseUrl}api/v2/disbursements/single/transactions`, headers)\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return result;\n  }\n\n  async getTransactionStatus(reference) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const response = this.httpService\n      .get(\n        `${this.baseUrl}/api/v2/disbursements/single/summary?reference=${reference}`,\n        headers,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return this.handleResponse(result);\n  }\n\n  async validateAccountBvnMatch({ accountNumber, bankCode, bvn }) {\n    await this.authenticate();\n\n    const headers = this.setRequestHeaders(this.authToken);\n\n    const payload = {\n      bankCode,\n      accountNumber,\n      bvn,\n    };\n\n    const response = this.httpService\n      .post(`${this.baseUrl}/api/v1/vas/bvn-account-match`, payload, headers)\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            {\n              status: error.response.status,\n              message: error.response.data.responseMessage,\n              code: error.response.data.responseCode,\n            },\n            error.response.statusCode,\n          );\n        }),\n      );\n\n    const result = await lastValueFrom(response);\n\n    return await this.handleResponse(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Nodemailer.html":{"url":"classes/Nodemailer.html","title":"class - Nodemailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Nodemailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nodemailer/entities/nodemailer.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Nodemailer {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NodemailerModule.html":{"url":"modules/NodemailerModule.html","title":"module - NodemailerModule","body":"\n                   \n\n\n\n\n    Modules\n    NodemailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NodemailerModule\n\n\n\ncluster_NodemailerModule_providers\n\n\n\ncluster_NodemailerModule_exports\n\n\n\n\nNodemailerService \n\nNodemailerService \n\n\n\nNodemailerModule\n\nNodemailerModule\n\nNodemailerService  -->\n\nNodemailerModule->NodemailerService \n\n\n\n\n\nNodemailerService\n\nNodemailerService\n\nNodemailerModule -->\n\nNodemailerService->NodemailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/nodemailer/nodemailer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NodemailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NodemailerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NodemailerService } from './nodemailer.service';\n\n@Module({\n  providers: [NodemailerService],\n  exports: [NodemailerService],\n})\nexport class NodemailerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NodemailerService.html":{"url":"injectables/NodemailerService.html","title":"injectable - NodemailerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NodemailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nodemailer/nodemailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nodemailerTransport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/nodemailer/nodemailer.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(options: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/nodemailer/nodemailer.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nodemailerTransport\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mail\n\n                    \n                \n                    \n                        \n                                Defined in src/nodemailer/nodemailer.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createTransport, createTestAccount } from 'nodemailer';\nimport * as Mail from 'nodemailer/lib/mailer';\n\n@Injectable()\nexport class NodemailerService {\n  private nodemailerTransport: Mail;\n  constructor() {\n    this.nodemailerTransport = createTransport({\n      service: 'gmail',\n      auth: {\n        user: 'developer.degoke@gmail.com',\n        pass: 'dev_email_password',\n      },\n    });\n  }\n\n  async sendMail(options: Mail.Options) {\n    try {\n      return await this.nodemailerTransport.sendMail(options);\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PaymentMerchant.html":{"url":"entities/PaymentMerchant.html","title":"entity - PaymentMerchant","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PaymentMerchant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/entities/payment-merchant.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, account => account.merchant)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/payment-merchant.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/payment-merchant.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/payment-merchant.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Account } from 'src/account/entities/account.entity';\nimport { EntityContainer } from 'src/common/types/entity';\nimport { ServiceStatus, SERVICE_STATUS } from 'src/common/types/status.type';\nimport { Column, Entity, OneToMany } from 'typeorm';\n\n@Entity()\nexport class PaymentMerchant extends EntityContainer {\n  @Column()\n  public name: string;\n\n  @Column({ default: SERVICE_STATUS.ACTIVE })\n  public status: ServiceStatus;\n\n  @OneToMany(() => Account, (account: Account) => account.merchant)\n  public accounts: Account[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Paystack.html":{"url":"classes/Paystack.html","title":"class - Paystack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Paystack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/entities/paystack.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Paystack {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaystackController.html":{"url":"controllers/PaystackController.html","title":"controller - PaystackController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaystackController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/paystack.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                paystack\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createTransferRecipient\n                            \n                            \n                                finalizeDeposit\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getBankList\n                            \n                            \n                                initializeDeposit\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                verifyAccountNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPaystackDto: CreatePaystackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaystackDto\n                                    \n                                                CreatePaystackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTransferRecipient\n                        \n                    \n                \n            \n            \n                \ncreateTransferRecipient(createTransferRecipientDto: CreateTransferRecipientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create_transfer_recipient')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTransferRecipientDto\n                                    \n                                                CreateTransferRecipientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finalizeDeposit\n                        \n                    \n                \n            \n            \n                \nfinalizeDeposit(finalizeDepositDto: FinalizeWithdrawalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/finalize_withdrawal')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalizeDepositDto\n                                    \n                                                FinalizeWithdrawalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBankList\n                        \n                    \n                \n            \n            \n                \ngetBankList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('banklist')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeDeposit\n                        \n                    \n                \n            \n            \n                \ninitializeDeposit(initializeWithdrawalDto: InitializeWithdrawalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/initialize_withdrawal')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    initializeWithdrawalDto\n                                    \n                                                InitializeWithdrawalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePaystackDto: UpdatePaystackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaystackDto\n                                    \n                                                UpdatePaystackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyAccountNumber\n                        \n                    \n                \n            \n            \n                \nverifyAccountNumber(params: VerifyAccountNumberDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify_account_number/:accountNumber/:bankID')\n                \n            \n\n            \n                \n                    Defined in src/paystack/paystack.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                VerifyAccountNumberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PaystackService } from './paystack.service';\nimport { CreatePaystackDto } from './dto/create-paystack.dto';\nimport { UpdatePaystackDto } from './dto/update-paystack.dto';\nimport { CreateTransferRecipientDto } from './dto/create-transfer-recipient.dto';\nimport { InitializeWithdrawalDto } from './dto/initialize-withdrawal.dto';\nimport { FinalizeWithdrawalDto } from './dto/finalize-withdrawal.dto';\nimport { VerifyAccountNumberDto } from './dto/verify-account-number.dto';\n\n@Controller('paystack')\nexport class PaystackController {\n  constructor(private readonly paystackService: PaystackService) {}\n\n  @Post()\n  create(@Body() createPaystackDto: CreatePaystackDto) {\n    return this.paystackService.create(createPaystackDto);\n  }\n\n  @Post('/create_transfer_recipient')\n  createTransferRecipient(\n    @Body() createTransferRecipientDto: CreateTransferRecipientDto,\n  ) {\n    return this.paystackService.createTransferRecipient(\n      createTransferRecipientDto,\n    );\n  }\n\n  @Post('/initialize_withdrawal')\n  initializeDeposit(@Body() initializeWithdrawalDto: InitializeWithdrawalDto) {\n    return this.paystackService.initializeWithdrawal(initializeWithdrawalDto);\n  }\n\n  @Post('/finalize_withdrawal')\n  finalizeDeposit(@Body() finalizeDepositDto: FinalizeWithdrawalDto) {\n    return this.paystackService.finalizeWithdrawal(finalizeDepositDto);\n  }\n\n  @Get('banklist')\n  getBankList() {\n    return this.paystackService.bankList();\n  }\n\n  @Get('verify_account_number/:accountNumber/:bankID')\n  verifyAccountNumber(@Param() params: VerifyAccountNumberDto) {\n    //    return params;\n    return this.paystackService.verifyAccountNumber(params);\n  }\n\n  @Get()\n  findAll() {\n    return this.paystackService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.paystackService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updatePaystackDto: UpdatePaystackDto,\n  ) {\n    return this.paystackService.update(+id, updatePaystackDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.paystackService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaystackModule.html":{"url":"modules/PaystackModule.html","title":"module - PaystackModule","body":"\n                   \n\n\n\n\n    Modules\n    PaystackModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_PaystackModule_exports\n\n\n\n\nPaystackService \n\nPaystackService \n\n\n\nPaystackModule\n\nPaystackModule\n\nPaystackService  -->\n\nPaystackModule->PaystackService \n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/paystack/paystack.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaystackService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaystackController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaystackService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaystackService } from './paystack.service';\nimport { PaystackController } from './paystack.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [PaystackController],\n  providers: [PaystackService],\n  exports: [PaystackService],\n})\nexport class PaystackModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaystackService.html":{"url":"injectables/PaystackService.html","title":"injectable - PaystackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaystackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/paystack.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                publicKey\n                            \n                            \n                                    Private\n                                requestHeaders\n                            \n                            \n                                    Private\n                                secretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bankList\n                            \n                            \n                                create\n                            \n                            \n                                    Async\n                                createTransferRecipient\n                            \n                            \n                                    Async\n                                finalizeWithdrawal\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                initializeTransaction\n                            \n                            \n                                    Async\n                                initializeWithdrawal\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                verifyAccountNumber\n                            \n                            \n                                    Async\n                                verifyTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/paystack/paystack.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bankList\n                        \n                    \n                \n            \n            \n                \n                    \n                    bankList()\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise>>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPaystackDto: CreatePaystackDto)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaystackDto\n                                    \n                                                CreatePaystackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTransferRecipient\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransferRecipient(createTransferRecipientDto: CreateTransferRecipientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTransferRecipientDto\n                                    \n                                                CreateTransferRecipientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        finalizeWithdrawal\n                        \n                    \n                \n            \n            \n                \n                    \n                    finalizeWithdrawal(finalizeWithdrawalDto: FinalizeWithdrawalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalizeWithdrawalDto\n                                    \n                                                FinalizeWithdrawalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeTransaction(createTransactionDto: CreateTransactionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTransactionDto\n                                    \n                                                CreateTransactionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeWithdrawal\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeWithdrawal(initializeWithdrawalDto: InitializeWithdrawalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    initializeWithdrawalDto\n                                    \n                                                InitializeWithdrawalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePaystackDto: UpdatePaystackDto)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaystackDto\n                                    \n                                                UpdatePaystackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyAccountNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyAccountNumber(params: VerifyAccountNumberDto)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                VerifyAccountNumberDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyTransaction(reference: string)\n                \n            \n\n\n            \n                \n                    Defined in src/paystack/paystack.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/paystack/paystack.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestHeaders\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/paystack/paystack.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/paystack/paystack.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { CreatePaystackDto } from './dto/create-paystack.dto';\nimport { UpdatePaystackDto } from './dto/update-paystack.dto';\nimport { HttpService } from '@nestjs/axios';\nimport { AxiosResponse } from 'axios';\nimport { Observable, map, lastValueFrom, catchError, of } from 'rxjs';\nimport { ConfigService } from '@nestjs/config';\nimport { CreateTransactionDto } from 'src/transactions/dto/create-transaction.dto';\nimport { CreateTransferRecipientDto } from './dto/create-transfer-recipient.dto';\nimport { InitializeWithdrawalDto } from './dto/initialize-withdrawal.dto';\nimport { FinalizeWithdrawalDto } from './dto/finalize-withdrawal.dto';\nimport { VerifyAccountNumberDto } from './dto/verify-account-number.dto';\n\n@Injectable()\nexport class PaystackService {\n  private secretKey: string;\n  private publicKey: string;\n  private requestHeaders;\n  constructor(\n    private readonly configService: ConfigService,\n    private httpService: HttpService,\n  ) {\n    this.secretKey = this.configService.get('PAYSTACK_SECRET_KEY');\n    this.publicKey = this.configService.get('PAYSTACK_PUBLIC_KEY');\n    this.requestHeaders = {\n      headers: {\n        Authorization: 'Bearer' + ' ' + this.secretKey,\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n  }\n\n  async bankList(): Promise>> {\n    const response = this.httpService\n      .get('https://api.paystack.co/bank/', this.requestHeaders)\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(\n            error.response.data.message.error,\n            error.response.status,\n          );\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  async initializeTransaction(\n    createTransactionDto: CreateTransactionDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://api.paystack.co/transaction/initialize',\n        createTransactionDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          throw error;\n          throw new HttpException(error.message, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async verifyTransaction(\n    reference: string,\n  ): Promise>> {\n    //    return reference;\n    const response = this.httpService\n      .get(\n        `https://api.paystack.co/transaction/verify/${reference}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          throw error;\n          throw new HttpException(error.message, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async createTransferRecipient(\n    createTransferRecipientDto: CreateTransferRecipientDto,\n  ) {\n    const response = this.httpService\n      .post(\n        'https://api.paystack.co/transferrecipient',\n        createTransferRecipientDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          throw error;\n          throw new HttpException(error.message, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async initializeWithdrawal(\n    initializeWithdrawalDto: InitializeWithdrawalDto, // : Promise>>\n  ) {\n    const response = this.httpService\n      .post(\n        'https://api.paystack.co/transfer/',\n        initializeWithdrawalDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          console.log(error);\n\n          //          throw error;\n          throw new HttpException(\n            error.response.data.message,\n            error.response.status,\n          );\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async finalizeWithdrawal(finalizeWithdrawalDto: FinalizeWithdrawalDto) {\n    const response = this.httpService\n      .post(\n        'https://api.paystack.co/transfer/finalize_transfer',\n        finalizeWithdrawalDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //        throw error;\n          throw new HttpException(error.message, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async verifyAccountNumber(params: VerifyAccountNumberDto) {\n    const { accountNumber, bankID } = params;\n\n    const response = this.httpService\n      .get(\n        `https://api.paystack.co/bank/resolve?account_number=${accountNumber}&bank_code=${bankID}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(error.message, error.response.status);\n        }),\n      );\n\n    return await lastValueFrom(response);\n  }\n\n  create(createPaystackDto: CreatePaystackDto) {\n    return 'This action adds a new paystack';\n  }\n\n  findAll() {\n    return `This action returns all paystack`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} paystack`;\n  }\n\n  update(id: number, updatePaystackDto: UpdatePaystackDto) {\n    return `This action updates a #${id} paystack`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} paystack`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryTransactionStatusDto.html":{"url":"classes/QueryTransactionStatusDto.html","title":"class - QueryTransactionStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryTransactionStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/query-transaction-status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                request_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        request_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/query-transaction-status.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class QueryTransactionStatusDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  request_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadReceiveTransferPermission.html":{"url":"classes/ReadReceiveTransferPermission.html","title":"class - ReadReceiveTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadReceiveTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n            \n                Description\n            \n            \n                receive Transfer\n\n            \n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : READ\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadSendTransferPermission.html":{"url":"classes/ReadSendTransferPermission.html","title":"class - ReadSendTransferPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadSendTransferPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n            \n                Description\n            \n            \n                Send Transfer\n\n            \n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : READ\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SendTransfer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadTransferRequestPermission.html":{"url":"classes/ReadTransferRequestPermission.html","title":"class - ReadTransferRequestPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadTransferRequestPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n            \n                Description\n            \n            \n                request Transfer\n\n            \n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : READ\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransferRequest\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:105\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadUserPermission.html":{"url":"classes/ReadUserPermission.html","title":"class - ReadUserPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadUserPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n            \n                Description\n            \n            \n                user\n\n            \n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : READ\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Customer\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadWithdrawalPermission.html":{"url":"classes/ReadWithdrawalPermission.html","title":"class - ReadWithdrawalPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadWithdrawalPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n            \n                Description\n            \n            \n                Withdrawal\n\n            \n\n\n            \n                Implements\n            \n            \n                            RequiredRule\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : READ\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Withdrawal\n                    \n                \n                    \n                        \n                                Defined in src/ability/abilities.decorator.ts:130\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReceiveTransfer.html":{"url":"entities/ReceiveTransfer.html","title":"entity - ReceiveTransfer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReceiveTransfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/entities/receive-transfer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currency\n                            \n                            \n                                    Public\n                                receiveUser\n                            \n                            \n                                    Public\n                                receiveUserId\n                            \n                            \n                                    Public\n                                receiveWallet\n                            \n                            \n                                    Public\n                                receiveWalletId\n                            \n                            \n                                    Public\n                                sendUser\n                            \n                            \n                                    Public\n                                sendUserId\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currency\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.receivedTransfers)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receiveUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receiveWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.receivedTransfers)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receiveWalletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.receivedTransfers)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/receive-transfer.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Currency } from 'src/common/types/currency.type';\nimport { TRANSFER_TYPES, TransferTypes } from 'src/common/types/transfer.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Transfer } from './transfer.entity';\n\n@Entity()\nexport class ReceiveTransfer extends Transfer {\n  @Column()\n  public currency: Currency;\n\n  @Column({ default: TRANSFER_TYPES.RECEIVE })\n  public type: TransferTypes;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.receivedTransfers)\n  public receiveUser: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.receivedTransfers)\n  public receiveWallet: Wallet;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.receivedTransfers)\n  public sendUser: Customer;\n\n  @Column()\n  public sendUserId: number;\n\n  @Column()\n  public receiveUserId: number;\n\n  @Column()\n  public receiveWalletId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceiveTransferRepository.html":{"url":"classes/ReceiveTransferRepository.html","title":"class - ReceiveTransferRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReceiveTransferRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/repositories/receive-transfer.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { ReceiveTransfer } from '../entities/receive-transfer.entity';\n\n@EntityRepository(ReceiveTransfer)\nexport class ReceiveTransferRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Referral.html":{"url":"entities/Referral.html","title":"entity - Referral","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Referral\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/referral/entities/referral.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                referred\n                            \n                            \n                                    Public\n                                referredBy\n                            \n                            \n                                    Public\n                                referredById\n                            \n                            \n                                    Public\n                                referredId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        referred\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, customer => customer.referredBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/referral/entities/referral.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        referredBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, customer => customer.referrals)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/referral/entities/referral.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        referredById\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/referral/entities/referral.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        referredId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, customer => customer.referredBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/referral/entities/referral.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { EntityContainer } from 'src/common/types/entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Column, Entity, ManyToOne, OneToOne } from 'typeorm';\n\n@Entity()\nexport class Referral extends EntityContainer {\n  @ManyToOne(() => Customer, (customer: Customer) => customer.referrals)\n  public referredBy: Customer;\n\n  @Column()\n  public referredById: number;\n\n  @OneToOne(() => Customer, (customer: Customer) => customer.referredBy)\n  public referred: Customer;\n\n  @OneToOne(() => Customer, (customer: Customer) => customer.referredBy)\n  public referredId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReferralController.html":{"url":"controllers/ReferralController.html","title":"controller - ReferralController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReferralController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/referral/referral.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                referral\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createReferralDto: CreateReferralDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/referral/referral.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReferralDto\n                                    \n                                                CreateReferralDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/referral/referral.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/referral/referral.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/referral/referral.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateReferralDto: UpdateReferralDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/referral/referral.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReferralDto\n                                    \n                                                UpdateReferralDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { ReferralService } from './referral.service';\nimport { CreateReferralDto } from './dto/create-referral.dto';\nimport { UpdateReferralDto } from './dto/update-referral.dto';\n\n@Controller('referral')\nexport class ReferralController {\n  constructor(private readonly referralService: ReferralService) {}\n\n  @Post()\n  create(@Body() createReferralDto: CreateReferralDto) {\n    return this.referralService.create(createReferralDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.referralService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.referralService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateReferralDto: UpdateReferralDto,\n  ) {\n    return this.referralService.update(+id, updateReferralDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.referralService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReferralModule.html":{"url":"modules/ReferralModule.html","title":"module - ReferralModule","body":"\n                   \n\n\n\n\n    Modules\n    ReferralModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReferralModule\n\n\n\ncluster_ReferralModule_exports\n\n\n\ncluster_ReferralModule_providers\n\n\n\n\nReferralService \n\nReferralService \n\n\n\nReferralModule\n\nReferralModule\n\nReferralService  -->\n\nReferralModule->ReferralService \n\n\n\n\n\nReferralService\n\nReferralService\n\nReferralModule -->\n\nReferralService->ReferralModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/referral/referral.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReferralService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReferralController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReferralService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReferralService } from './referral.service';\nimport { ReferralController } from './referral.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Referral } from './entities/referral.entity';\nimport { ReferralRepository } from './repositories/referral.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ReferralRepository])],\n  controllers: [ReferralController],\n  providers: [ReferralService],\n  exports: [ReferralService],\n})\nexport class ReferralModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReferralRepository.html":{"url":"classes/ReferralRepository.html","title":"class - ReferralRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReferralRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/referral/repositories/referral.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Referral } from '../entities/referral.entity';\n\n@EntityRepository(Referral)\nexport class ReferralRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferralService.html":{"url":"injectables/ReferralService.html","title":"injectable - ReferralService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReferralService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/referral/referral.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                createReferral\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referralRepository: ReferralRepository)\n                    \n                \n                        \n                            \n                                Defined in src/referral/referral.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referralRepository\n                                                  \n                                                        \n                                                                        ReferralRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createReferralDto: CreateReferralDto)\n                \n            \n\n\n            \n                \n                    Defined in src/referral/referral.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReferralDto\n                                    \n                                                CreateReferralDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReferral\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReferral(createReferralDto: CreateReferralDto)\n                \n            \n\n\n            \n                \n                    Defined in src/referral/referral.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReferralDto\n                                    \n                                                CreateReferralDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/referral/referral.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/referral/referral.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/referral/referral.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateReferralDto: UpdateReferralDto)\n                \n            \n\n\n            \n                \n                    Defined in src/referral/referral.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReferralDto\n                                    \n                                                UpdateReferralDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateReferralDto } from './dto/create-referral.dto';\nimport { UpdateReferralDto } from './dto/update-referral.dto';\nimport { ReferralRepository } from './repositories/referral.repository';\n\n@Injectable()\nexport class ReferralService {\n  constructor(\n    @InjectRepository(ReferralRepository)\n    private referralRepository: ReferralRepository,\n  ) {}\n\n  async createReferral(createReferralDto: CreateReferralDto) {\n    try {\n      const newReferral = await this.referralRepository.create(\n        createReferralDto,\n      );\n\n      await this.referralRepository.save(newReferral);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  create(createReferralDto: CreateReferralDto) {\n    return 'This action adds a new referral';\n  }\n\n  findAll() {\n    return `This action returns all referral`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} referral`;\n  }\n\n  update(id: number, updateReferralDto: UpdateReferralDto) {\n    return `This action updates a #${id} referral`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} referral`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequiredRule.html":{"url":"interfaces/RequiredRule.html","title":"interface - RequiredRule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequiredRule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ability/abilities.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         UserActions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserActions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         Subjects\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subjects\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SetMetadata } from '@nestjs/common';\nimport { UserActions, USER_ACTIONS } from 'src/common/types/permissions.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { TransferRequest } from 'src/transfers/entities/transfer-requests.entity';\nimport { Transfer } from 'src/transfers/entities/transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Subjects } from './ability.factory';\n\nconst { READ, CREATE, EDIT, DELETE, MANAGE } = USER_ACTIONS;\n\nexport interface RequiredRule {\n  action: UserActions;\n  subject: Subjects;\n}\n\nexport const CHECK_ABILITY = 'check_ability';\n\nexport const CheckAbilities = (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements);\n\n/**\n *\n * user\n */\n\nexport class ReadUserPermission implements RequiredRule {\n  action = READ;\n  subject = Customer;\n}\n\nexport class CreateUserPermission implements RequiredRule {\n  action = CREATE;\n  subject = Customer;\n}\n\nexport class EditUserPermission implements RequiredRule {\n  action = EDIT;\n  subject = Customer;\n}\n\nexport class DeleteUserPermission implements RequiredRule {\n  action = DELETE;\n  subject = Customer;\n}\n\n/**\n *\n * Send Transfer\n */\n\nexport class ReadSendTransferPermission implements RequiredRule {\n  action = READ;\n  subject = SendTransfer;\n}\n\nexport class CreateSendTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = SendTransfer;\n}\n\nexport class EditSendTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = SendTransfer;\n}\n\nexport class DeleteSendTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = SendTransfer;\n}\n\n/**\n *\n * receive Transfer\n */\n\nexport class ReadReceiveTransferPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateReceiveTransferPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditReceiveTransferPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteReceiveTransferPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * request Transfer\n */\n\nexport class ReadTransferRequestPermission implements RequiredRule {\n  action = READ;\n  subject = TransferRequest;\n}\n\nexport class CreateTransferRequestPermission implements RequiredRule {\n  action = CREATE;\n  subject = TransferRequest;\n}\n\nexport class EditTransferRequestPermission implements RequiredRule {\n  action = EDIT;\n  subject = TransferRequest;\n}\n\nexport class DeleteTransferRequestPermission implements RequiredRule {\n  action = DELETE;\n  subject = TransferRequest;\n}\n\n/**\n *\n * Withdrawal\n */\n\nexport class ReadWithdrawalPermission implements RequiredRule {\n  action = READ;\n  subject = Withdrawal;\n}\n\nexport class CreateWithdrawalPermission implements RequiredRule {\n  action = CREATE;\n  subject = Withdrawal;\n}\n\nexport class EditWithdrawalPermission implements RequiredRule {\n  action = EDIT;\n  subject = Withdrawal;\n}\n\nexport class DeleteWithdrawalPermission implements RequiredRule {\n  action = DELETE;\n  subject = Withdrawal;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnTypeContainer.html":{"url":"interfaces/ReturnTypeContainer.html","title":"interface - ReturnTypeContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnTypeContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/containers/Container.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ReturnTypeContainer {\n  message?: string;\n  data?: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SeedingLogEntry.html":{"url":"entities/SeedingLogEntry.html","title":"entity - SeedingLogEntry","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SeedingLogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeding/entities/seeding.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creationDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                reference\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seeding/entities/seeding.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seeding/entities/seeding.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seeding/entities/seeding.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class SeedingLogEntry {\n  @PrimaryGeneratedColumn()\n  public id: number;\n\n  @Column()\n  public reference: string;\n\n  @CreateDateColumn()\n  creationDate: Date;\n\n  constructor(reference: string) {\n    this.reference = reference;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeedingMiddleware.html":{"url":"injectables/SeedingMiddleware.html","title":"injectable - SeedingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeedingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeding/seeding.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isSeedingComplete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityManager: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in src/seeding/seeding.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityManager\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/seeding/seeding.middleware.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSeedingComplete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/seeding/seeding.middleware.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Admin } from 'src/admin/entities/admin.entity';\nimport { ADMIN_LEVELS } from 'src/common/types/roles.type';\nimport { EntityManager } from 'typeorm';\nimport { SeedingLogEntry } from './entities/seeding.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class SeedingMiddleware implements NestMiddleware {\n  private isSeedingComplete: Promise;\n\n  constructor(private readonly entityManager: EntityManager) {}\n\n  async use(req: any, res: any, next: () => void) {\n    if (await this.isSeedingComplete) {\n      return next();\n    }\n\n    this.isSeedingComplete = (async () => {\n      if (\n        !(await this.entityManager.findOne(SeedingLogEntry, {\n          reference: 'initialSeeding',\n        }))\n      ) {\n        await this.entityManager.transaction(\n          async (transactionalEntityManager) => {\n            await transactionalEntityManager.save(Admin, {\n              firstName: 'Tapmoni',\n              lastName: 'Admin',\n              email: 'adegoke.adewoye@skyeinnovationtech.com',\n              phoneNumber: '2349082290318',\n              password: await bcrypt.hash('tapmoniSuperadmin_password', 10),\n              level: ADMIN_LEVELS.TWO,\n            });\n            await transactionalEntityManager.save(\n              new SeedingLogEntry('initialSeeding'),\n            );\n          },\n        );\n      }\n      return true;\n    })();\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeedingModule.html":{"url":"modules/SeedingModule.html","title":"module - SeedingModule","body":"\n                   \n\n\n\n\n    Modules\n    SeedingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seeding/seeding.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/seeding/seeding.module.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { SeedingMiddleware } from './seeding.middleware';\n\n@Module({})\nexport class SeedingModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(SeedingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SendTransfer.html":{"url":"entities/SendTransfer.html","title":"entity - SendTransfer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SendTransfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/entities/send-transfer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                receiveUser\n                            \n                            \n                                    Public\n                                receiveUserId\n                            \n                            \n                                    Public\n                                sendUser\n                            \n                            \n                                    Public\n                                sendUserId\n                            \n                            \n                                    Public\n                                sendWallet\n                            \n                            \n                                    Public\n                                sendWalletId\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.sentTransfers)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/send-transfer.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receiveUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/send-transfer.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.sentTransfers)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/send-transfer.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/send-transfer.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.sentTransfers)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/send-transfer.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendWalletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/send-transfer.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/send-transfer.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { TRANSFER_TYPES, TransferTypes } from 'src/common/types/transfer.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Transfer } from './transfer.entity';\n\n@Entity()\nexport class SendTransfer extends Transfer {\n  @Column({ default: TRANSFER_TYPES.SEND })\n  public type: TransferTypes;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.sentTransfers)\n  public receiveUser: Customer;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.sentTransfers)\n  public sendUser: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.sentTransfers)\n  public sendWallet: Wallet;\n\n  @Column()\n  public sendUserId: number;\n\n  @Column()\n  public sendWalletId: number;\n\n  @Column()\n  public receiveUserId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendTransferRepository.html":{"url":"classes/SendTransferRepository.html","title":"class - SendTransferRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendTransferRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/repositories/send-transfer.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { SendTransfer } from '../entities/send-transfer.entity';\n\n@EntityRepository(SendTransfer)\nexport class SendTransferRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPinDTO.html":{"url":"classes/SetPinDTO.html","title":"class - SetPinDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPinDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/set-pin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                pin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/set-pin.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@Max(9999, {message: 'Pin must be 4 digits'})@Min(1000, {message: 'pin cannot start with 0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/set-pin.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString, Max, Min } from 'class-validator';\n\nexport class SetPinDTO {\n  @IsString()\n  @IsNotEmpty()\n  password;\n\n  @IsNumber()\n  @IsNotEmpty()\n  @Max(9999, {\n    message: 'Pin must be 4 digits',\n  })\n  @Min(1000, {\n    message: 'pin cannot start with 0',\n  })\n  pin;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Setting.html":{"url":"entities/Setting.html","title":"entity - Setting","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Setting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/entities/setting.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/setting.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/setting.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/setting.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/setting.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/setting.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServicesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/entities/setting.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ServicesType } from 'src/common/types/service.type';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Setting {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  value: ServicesType;\n\n  @Column()\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNew\n                            \n                            \n                                deleteOne\n                            \n                            \n                                getAll\n                            \n                            \n                                getByName\n                            \n                            \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNew\n                        \n                    \n                \n            \n            \n                \naddNew(createSettingDto: CreateSettingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('new')\n                \n            \n\n            \n                \n                    Defined in src/settings/settings.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSettingDto\n                                    \n                                                CreateSettingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOne\n                        \n                    \n                \n            \n            \n                \ndeleteOne(settingName: ServiceSettingsType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':settingName')\n                \n            \n\n            \n                \n                    Defined in src/settings/settings.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settingName\n                                    \n                                                ServiceSettingsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/settings/settings.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByName\n                        \n                    \n                \n            \n            \n                \ngetByName(settingName: ServiceSettingsType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':settingName')\n                \n            \n\n            \n                \n                    Defined in src/settings/settings.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settingName\n                                    \n                                                ServiceSettingsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOne\n                        \n                    \n                \n            \n            \n                \nupdateOne(settingName: ServiceSettingsType, updateSettingDto: UpdateSettingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':settingName')\n                \n            \n\n            \n                \n                    Defined in src/settings/settings.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settingName\n                                    \n                                                ServiceSettingsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSettingDto\n                                    \n                                                UpdateSettingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SettingsService } from './settings.service';\nimport { CreateSettingDto } from './dto/create-setting.dto';\nimport { UpdateSettingDto } from './dto/update-setting.dto';\nimport { ServiceSettingsType } from 'src/common/types/settings.type';\n\n@Controller('settings')\nexport class SettingsController {\n  constructor(private readonly settingsService: SettingsService) {}\n  @Get()\n  getAll() {\n    return this.settingsService.getAllSettings();\n  }\n\n  @Get(':settingName')\n  getByName(@Param('settingName') settingName: ServiceSettingsType) {\n    return this.settingsService.getSetting(settingName);\n  }\n\n  @Post('new')\n  addNew(@Body() createSettingDto: CreateSettingDto) {\n    return this.settingsService.addSetting(createSettingDto);\n  }\n\n  @Patch(':settingName')\n  updateOne(\n    @Param('settingName') settingName: ServiceSettingsType,\n    @Body() updateSettingDto: UpdateSettingDto,\n  ) {\n    return this.settingsService.updateSetting(settingName, updateSettingDto);\n  }\n\n  @Delete(':settingName')\n  deleteOne(@Param('settingName') settingName: ServiceSettingsType) {\n    return this.settingsService.deleteSetting(settingName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nSettingsService \n\nSettingsService \n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SettingsService } from './settings.service';\nimport { SettingsController } from './settings.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Setting } from './entities/setting.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Setting])],\n  controllers: [SettingsController],\n  providers: [SettingsService],\n  exports: [SettingsService],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addSetting\n                            \n                            \n                                    Async\n                                deleteSetting\n                            \n                            \n                                    Async\n                                getAllSettings\n                            \n                            \n                                    Async\n                                getSetting\n                            \n                            \n                                    Async\n                                updateSetting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settingRepository: Repository, cacheManager: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/settings/settings.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSetting(createSettingDto: CreateSettingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/settings/settings.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSettingDto\n                                    \n                                                CreateSettingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSetting(name: ServiceSettingsType)\n                \n            \n\n\n            \n                \n                    Defined in src/settings/settings.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                ServiceSettingsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/settings/settings.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSetting(name: ServiceSettingsType)\n                \n            \n\n\n            \n                \n                    Defined in src/settings/settings.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                ServiceSettingsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSetting(name: ServiceSettingsType, updateSettingDto: UpdateSettingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/settings/settings.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                ServiceSettingsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSettingDto\n                                    \n                                                UpdateSettingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CACHE_MANAGER,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport {\n  ServiceSettingsType,\n  ServicesSettings,\n} from 'src/common/types/settings.type';\nimport { Repository } from 'typeorm';\nimport { CreateSettingDto } from './dto/create-setting.dto';\nimport { UpdateSettingDto } from './dto/update-setting.dto';\nimport { Setting } from './entities/setting.entity';\nimport { Cache } from 'cache-manager';\n\n@Injectable()\nexport class SettingsService {\n  constructor(\n    @InjectRepository(Setting) private settingRepository: Repository,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n  ) {}\n  async getSetting(name: ServiceSettingsType) {\n    const result = await this.settingRepository.findOne({ name });\n\n    await this.cacheManager.set(name, result);\n\n    return result;\n  }\n\n  async getAllSettings() {\n    return await this.settingRepository.find();\n  }\n\n  async addSetting(createSettingDto: CreateSettingDto) {\n    const existingSetting = await this.settingRepository.findOne({\n      name: createSettingDto.name,\n    });\n\n    if (existingSetting) {\n      throw new HttpException('Setting currently exists', HttpStatus.CONFLICT);\n    }\n\n    const setting = await this.settingRepository.create(createSettingDto);\n    await this.settingRepository.save(setting);\n    await this.cacheManager.set(setting.name, setting);\n    return setting;\n  }\n\n  async updateSetting(\n    name: ServiceSettingsType,\n    updateSettingDto: UpdateSettingDto,\n  ) {\n    await this.settingRepository.update({ name }, updateSettingDto);\n\n    console.log(name);\n\n    await this.cacheManager.del(name);\n\n    const setting = await this.settingRepository.findOne({ name });\n\n    switch (name) {\n      case ServicesSettings.BANK_SERVICE:\n        await this.cacheManager.del('allBanks');\n    }\n\n    await this.cacheManager.set(name, setting);\n\n    return setting;\n  }\n\n  async deleteSetting(name: ServiceSettingsType) {\n    await this.settingRepository.delete({ name });\n\n    await this.cacheManager.del(name);\n\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sm.html":{"url":"classes/Sm.html","title":"class - Sm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/entities/sm.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Sm {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SmsController.html":{"url":"controllers/SmsController.html","title":"controller - SmsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SmsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sms\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Req,\n  BadRequestException,\n} from '@nestjs/common';\nimport { SmsService } from './sms.service';\nimport { ConfirmPhoneNumberDto } from './dto/confirm-phone-number.dto';\nimport { JwtAuthGaurd } from 'src/common/gaurds/jwt-auth.gaurd';\n\n@Controller('sms')\nexport class SmsController {\n  constructor(private readonly smsService: SmsService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SmsModule.html":{"url":"modules/SmsModule.html","title":"module - SmsModule","body":"\n                   \n\n\n\n\n    Modules\n    SmsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SmsModule\n\n\n\ncluster_SmsModule_imports\n\n\n\ncluster_SmsModule_exports\n\n\n\ncluster_SmsModule_providers\n\n\n\n\nTwillioModule\n\nTwillioModule\n\n\n\nSmsModule\n\nSmsModule\n\nSmsModule -->\n\nTwillioModule->SmsModule\n\n\n\n\n\nSmsService \n\nSmsService \n\nSmsService  -->\n\nSmsModule->SmsService \n\n\n\n\n\nSmsService\n\nSmsService\n\nSmsModule -->\n\nSmsService->SmsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sms/sms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SmsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SmsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TwillioModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SmsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { SmsService } from './sms.service';\nimport { SmsController } from './sms.controller';\nimport { UserModule } from 'src/user/user.module';\nimport { TwillioModule } from 'src/twillio/twillio.module';\n\n@Module({\n  imports: [TwillioModule],\n  controllers: [SmsController],\n  providers: [SmsService],\n  exports: [SmsService],\n})\nexport class SmsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmsService.html":{"url":"injectables/SmsService.html","title":"injectable - SmsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sms/sms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendPhoneNumberOtp\n                            \n                            \n                                    Async\n                                verifyPhoneNumberOtp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(twillioService: TwillioService)\n                    \n                \n                        \n                            \n                                Defined in src/sms/sms.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        twillioService\n                                                  \n                                                        \n                                                                        TwillioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPhoneNumberOtp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPhoneNumberOtp(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sms/sms.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyPhoneNumberOtp\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPhoneNumberOtp(phoneNumber: string, verificationCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/sms/sms.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    verificationCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  forwardRef,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TwillioService } from 'src/twillio/twillio.service';\nimport { UserService } from 'src/user/user.service';\nimport { Twilio } from 'twilio';\n\n@Injectable()\nexport class SmsService {\n  constructor(private readonly twillioService: TwillioService) {}\n\n  async sendPhoneNumberOtp(phoneNumber: string) {\n    try {\n      return await this.twillioService.initiatePhoneNumberVerification(\n        phoneNumber,\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyPhoneNumberOtp(phoneNumber: string, verificationCode: string) {\n    try {\n      return await this.twillioService.confirmPhoneNumber(\n        phoneNumber,\n        verificationCode,\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/entities/transaction.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityContainer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountBank\n                            \n                            \n                                    Public\n                                accountName\n                            \n                            \n                                accountNumber\n                            \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Public\n                                bankName\n                            \n                            \n                                currency\n                            \n                            \n                                    Public\n                                merchantId\n                            \n                            \n                                    Public\n                                merchantReference\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Public\n                                reference\n                            \n                            \n                                    Public\n                                remarks\n                            \n                            \n                                    Public\n                                serviceUsed\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                userId\n                            \n                            \n                                    Public\n                                walletId\n                            \n                            \n                                createddate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountBank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accountName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'real'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bankName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currency\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        merchantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        merchantReference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionModes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        remarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        serviceUsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BankServices\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        walletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/transaction.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column } from 'typeorm';\nimport { TransactionStatus } from 'src/common/types/status.type';\nimport { Currency } from 'src/common/types/currency.type';\nimport { BankServices } from 'src/common/types/service.type';\nimport { EntityContainer } from 'src/common/types/entity';\nimport { TransactionModes } from 'src/common/types/transaction.type';\n\nexport abstract class Transaction extends EntityContainer {\n  @Column()\n  public amount: number;\n\n  @Column()\n  accountNumber: string;\n\n  @Column()\n  accountBank: string;\n\n  @Column()\n  currency: Currency;\n\n  @Column()\n  public mode: TransactionModes;\n\n  @Column()\n  public reference: string;\n\n  @Column()\n  public status: TransactionStatus;\n\n  @Column()\n  public serviceUsed: BankServices;\n\n  @Column()\n  public userId: number;\n\n  @Column()\n  public walletId: number;\n\n  @Column({ type: 'real' })\n  public balance: number;\n\n  @Column()\n  public remarks: string;\n\n  @Column({ nullable: true })\n  public bankName: string;\n\n  @Column({ nullable: true })\n  public accountName: string;\n\n  @Column({ nullable: true })\n  public merchantReference: string;\n\n  @Column({ nullable: true })\n  public merchantId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionDto.html":{"url":"classes/TransactionDto.html","title":"class - TransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/dto/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                walletId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/dto/transaction.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/dto/transaction.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class TransactionDto {\n  @IsNumber()\n  @IsNotEmpty()\n  amount: number;\n\n  //   @IsEmail()\n  //  // @IsNotEmpty()\n  //   email: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  walletId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionQueryDto.html":{"url":"classes/TransactionQueryDto.html","title":"class - TransactionQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/dto/transaction-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/transaction-query.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport { TransactionType } from 'src/common/types/transaction.type';\n\nexport class TransactionQueryDto {\n  @IsString()\n  @IsOptional()\n  type: TransactionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionsController.html":{"url":"controllers/TransactionsController.html","title":"controller - TransactionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/transactions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transactions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmWithdrawalCallback\n                            \n                            \n                                getAllTransactions\n                            \n                            \n                                getCurrentUsersTransactions\n                            \n                            \n                                getTransactionById\n                            \n                            \n                                getuserTransactionsById\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmWithdrawalCallback\n                        \n                    \n                \n            \n            \n                \nconfirmWithdrawalCallback(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('/confirm-withdrawal')\n                \n            \n\n            \n                \n                    Defined in src/transactions/transactions.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTransactions\n                        \n                    \n                \n            \n            \n                \ngetAllTransactions(query: TransactionQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n            \n                \n                    Defined in src/transactions/transactions.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                TransactionQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUsersTransactions\n                        \n                    \n                \n            \n            \n                \ngetCurrentUsersTransactions(req, query: TransactionQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CheckAbilities(new ReadWithdrawalPermission())@Get('current-user')\n                \n            \n\n            \n                \n                    Defined in src/transactions/transactions.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                TransactionQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransactionById\n                        \n                    \n                \n            \n            \n                \ngetTransactionById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CheckAbilities(new ReadWithdrawalPermission())@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/transactions/transactions.controller.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getuserTransactionsById\n                        \n                    \n                \n            \n            \n                \ngetuserTransactionsById(id: number, query: TransactionQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/transactions/transactions.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                TransactionQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus(body: literal type, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update-status/:id')\n                \n            \n\n            \n                \n                    Defined in src/transactions/transactions.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Request,\n  Query,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { TransactionsService } from './transactions.service';\nimport { CreateTransactionDto } from './dto/create-transaction.dto';\nimport { UpdateTransactionDto } from './dto/update-transaction.dto';\nimport { PaystackService } from 'src/paystack/paystack.service';\nimport { VerifyTransactionDto } from './dto/verify-transaction.dto';\nimport { JwtAuthGaurd } from '../common/gaurds/jwt-auth.gaurd';\nimport { Public } from 'src/common/decorators/jwt-auth-guard.decorator';\nimport { FWWithdrawalDto } from './dto/withdrawal.dto';\nimport { BANK_SERVICES } from 'src/common/types/service.type';\nimport { TransactionStatus } from 'src/common/types/status.type';\nimport {\n  CheckAbilities,\n  CreateWithdrawalPermission,\n  ReadWithdrawalPermission,\n} from 'src/ability/abilities.decorator';\nimport { TransactionQueryDto } from './dto/transaction-query.dto';\nimport { TRANSACTION } from 'src/common/types/transaction.type';\nimport { HttpErrorByCode } from '@nestjs/common/utils/http-error-by-code.util';\n\n@Controller('transactions')\nexport class TransactionsController {\n  constructor(private readonly transactionsService: TransactionsService) {}\n\n  @Public()\n  @Post('/confirm-withdrawal')\n  confirmWithdrawalCallback(@Body() body) {\n    return body;\n  }\n\n  // @CheckAbilities(new CreateWithdrawalPermission())\n  // @Post('withdraw')\n  // initiateWithdrawal(@Body() body: FWWithdrawalDto, @Request() req) {\n  //   return this.transactionsService.initiateWithdrawal(body, req.user);\n  // }\n\n  @Post('update-status/:id')\n  updateStatus(\n    @Body() body: { status: TransactionStatus },\n    @Param('id') id: number,\n  ) {\n    return this.transactionsService.updateTransactionStatus(id, body.status);\n  }\n\n  @Public()\n  @Get()\n  getAllTransactions(@Query() query: TransactionQueryDto) {\n    let type;\n\n    if (query) {\n      if (query.type === TRANSACTION.WITHDRAWAL) {\n        type = TRANSACTION.WITHDRAWAL;\n      } else if (query.type === TRANSACTION.DEPOSIT) {\n        type = TRANSACTION.DEPOSIT;\n      } else if (!query.type) {\n        type = 'all';\n      } else {\n        throw new HttpException(\n          'Invalid query parameter',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n    }\n    if (!query) {\n      type = 'all';\n    }\n\n    return this.transactionsService.getAllTransactions(type);\n  }\n\n  @CheckAbilities(new ReadWithdrawalPermission())\n  @Get('current-user')\n  getCurrentUsersTransactions(\n    @Request() req,\n    @Query() query: TransactionQueryDto,\n  ) {\n    let type;\n\n    if (query) {\n      if (query.type === TRANSACTION.WITHDRAWAL) {\n        type = TRANSACTION.WITHDRAWAL;\n      } else if (query.type === TRANSACTION.DEPOSIT) {\n        type = TRANSACTION.DEPOSIT;\n      } else if (!query.type) {\n        type = 'all';\n      } else {\n        throw new HttpException(\n          'Invalid query parameter',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n    }\n    if (!query) {\n      type = 'all';\n    }\n    const { user } = req.user;\n    return this.transactionsService.getUserTransactions(user.id, type);\n  }\n\n  @Get('user/:id')\n  getuserTransactionsById(\n    @Param('id') id: number,\n    @Query() query: TransactionQueryDto,\n  ) {\n    let type;\n\n    if (query) {\n      if (query.type === TRANSACTION.WITHDRAWAL) {\n        type = TRANSACTION.WITHDRAWAL;\n      } else if (query.type === TRANSACTION.DEPOSIT) {\n        type = TRANSACTION.DEPOSIT;\n      } else if (!query.type) {\n        type = 'all';\n      } else {\n        throw new HttpException(\n          'Invalid query parameter',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n    }\n    if (!query) {\n      type = 'all';\n    }\n    return this.transactionsService.getUserTransactions(id, type);\n  }\n\n  @CheckAbilities(new ReadWithdrawalPermission())\n  @Get(':id')\n  getTransactionById(@Param('id') id: number) {\n    return this.transactionsService.findOneTransaction(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionsModule.html":{"url":"modules/TransactionsModule.html","title":"module - TransactionsModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_TransactionsModule_exports\n\n\n\ncluster_TransactionsModule_imports\n\n\n\n\nFlutterwaveModule\n\nFlutterwaveModule\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsModule -->\n\nFlutterwaveModule->TransactionsModule\n\n\n\n\n\nMonnifyModule\n\nMonnifyModule\n\nTransactionsModule -->\n\nMonnifyModule->TransactionsModule\n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nTransactionsModule -->\n\nPaystackModule->TransactionsModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nTransactionsModule -->\n\nSettingsModule->TransactionsModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nTransactionsModule -->\n\nWalletModule->TransactionsModule\n\n\n\n\n\nTransactionsService \n\nTransactionsService \n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transactions/transactions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FlutterwaveModule\n                        \n                        \n                            MonnifyModule\n                        \n                        \n                            PaystackModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionsService } from './transactions.service';\nimport { TransactionsController } from './transactions.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { HttpModule } from '@nestjs/axios';\nimport { PaystackModule } from '../paystack/paystack.module';\nimport { WalletModule } from 'src/wallet/wallet.module';\nimport { MonnifyModule } from 'src/monnify/monnify.module';\nimport { FlutterwaveModule } from 'src/flutterwave/flutterwave.module';\nimport { SettingsModule } from 'src/settings/settings.module';\nimport { WithdrawalRepository } from './repositories/withdrawal.repository';\nimport { DepositRepository } from './repositories/deposit.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([WithdrawalRepository, DepositRepository]),\n    HttpModule,\n    PaystackModule,\n    WalletModule,\n    FlutterwaveModule,\n    MonnifyModule,\n    SettingsModule,\n  ],\n  controllers: [TransactionsController],\n  providers: [TransactionsService],\n  exports: [TransactionsService],\n})\nexport class TransactionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionsService.html":{"url":"injectables/TransactionsService.html","title":"injectable - TransactionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/transactions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneTransaction\n                            \n                            \n                                    Async\n                                getAllTransactions\n                            \n                            \n                                    Async\n                                getTotalDepositsBalance\n                            \n                            \n                                    Async\n                                getTotalWithdrawalsBalance\n                            \n                            \n                                    Async\n                                getTransactionStatus\n                            \n                            \n                                    Async\n                                getUserTransactions\n                            \n                            \n                                    Async\n                                updateTransactionStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheManager: Cache, connection: Connection, withdrawalRepository: WithdrawalRepository, depositRepository: DepositRepository, paystackService: PaystackService, walletService: WalletService, flutterwaveService: FlutterwaveService, monnifyService: MonnifyService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/transactions/transactions.service.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        withdrawalRepository\n                                                  \n                                                        \n                                                                        WithdrawalRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        depositRepository\n                                                  \n                                                        \n                                                                        DepositRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paystackService\n                                                  \n                                                        \n                                                                        PaystackService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flutterwaveService\n                                                  \n                                                        \n                                                                        FlutterwaveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        monnifyService\n                                                  \n                                                        \n                                                                        MonnifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneTransaction(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/transactions.service.ts:409\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTransactions(type)\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/transactions.service.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTotalDepositsBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTotalDepositsBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/transactions.service.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTotalWithdrawalsBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTotalWithdrawalsBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/transactions.service.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactionStatus(reference: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/transactions.service.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTransactions(id: number, type)\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/transactions.service.ts:354\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTransactionStatus(reference: number | string, status: TransactionStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/transactions.service.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                TransactionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BankServices\n\n                    \n                \n                \n                    \n                        Default value : MONNIFY\n                    \n                \n                    \n                        \n                                Defined in src/transactions/transactions.service.ts:55\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CACHE_MANAGER,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CreateTransactionDto } from './dto/create-transaction.dto';\nimport { UpdateTransactionDto } from './dto/update-transaction.dto';\nimport { HttpService } from '@nestjs/axios';\nimport { AxiosResponse } from 'axios';\nimport { Observable, map, lastValueFrom, catchError } from 'rxjs';\nimport { ConfigService } from '@nestjs/config';\nimport { PaystackService } from 'src/paystack/paystack.service';\nimport { WalletService } from 'src/wallet/wallet.service';\nimport { Connection, Repository } from 'typeorm';\nimport { Transaction } from './entities/transaction.entity';\nimport { UserService } from 'src/user/user.service';\nimport { MonnifyService } from 'src/monnify/monnify.service';\nimport { FlutterwaveService } from 'src/flutterwave/flutterwave.service';\nimport { SettingsModule } from 'src/settings/settings.module';\nimport {\n  BankServices,\n  BANK_SERVICES,\n  Services,\n} from 'src/common/types/service.type';\nimport { ServicesSettings } from 'src/common/types/settings.type';\nimport { Cache } from 'cache-manager';\nimport { SettingsService } from 'src/settings/settings.service';\nimport { CreateVirtualAccountDto } from './dto/create-virtual-account.dto';\nimport { CreateReservedAccountDto } from 'src/flutterwave/dto/create-reserved-account.dto';\nimport { FWWithdrawalDto } from './dto/withdrawal.dto';\nimport { getTransactionReference } from 'src/utils/random-generators';\n\nimport { userInfo } from 'os';\nimport { CURRENCY } from 'src/common/types/currency.type';\nimport { InitiateMNTransferDto } from 'src/monnify/dto/initiate-transfer.dto';\nimport { Withdrawal } from './entities/withdrawal.entity';\nimport {\n  TRANSACTION_STATUS,\n  TransactionStatus,\n} from 'src/common/types/status.type';\nimport { TRANSACTION } from 'src/common/types/transaction.type';\nimport { User } from 'src/user/entities/user.entity';\nimport { WithdrawalRepository } from './repositories/withdrawal.repository';\nimport { DepositRepository } from './repositories/deposit.repository';\n\nconst { FLUTTERWAVE, MONNIFY } = BANK_SERVICES;\n\nconst { WITHDRAWAL, DEPOSIT } = TRANSACTION;\n\n@Injectable()\nexport class TransactionsService {\n  private currentService: BankServices = MONNIFY;\n  constructor(\n    @Inject(CACHE_MANAGER) private cacheManager: Cache,\n    private connection: Connection,\n    @InjectRepository(WithdrawalRepository)\n    private withdrawalRepository: WithdrawalRepository,\n    @InjectRepository(DepositRepository)\n    private depositRepository: DepositRepository,\n    private readonly paystackService: PaystackService,\n    private readonly walletService: WalletService,\n    private readonly flutterwaveService: FlutterwaveService,\n    private readonly monnifyService: MonnifyService,\n    private readonly settingsService: SettingsService,\n  ) {}\n\n  // async initiateWithdrawal(dto: FWWithdrawalDto, user: User) {\n  //   /*if (user.wallet[0].balance reference,\n        );\n\n        return await this.withdrawalRepository.update(\n          { reference: reference },\n          {\n            status: result.status,\n            bankName: result.data.destinationBankName,\n            accountName: result.data.destinationAccountName,\n            merchantReference: result.data.transactionReference,\n          },\n        );\n      }\n\n      /*if (service === FLUTTERWAVE) {\n        result = await this.flutterwaveService.getTransferStatus(\n          reference,\n        );\n\n        if (result.status !== 'success') {\n          throw new HttpException(result.message, HttpStatus.BAD_REQUEST);\n        }\n        if (result.data.status === 'SUCCESSFUL') {\n          await this.transactionRepository.update(\n            { merchantId: reference },\n            { status: TRANSACTIONSTATUS.COMPLETED },\n          );\n          return {\n            message: result.data.complete_message,\n            status: result.data.status,\n          };\n        }\n\n        if (result.status === 'PENDING') {\n          return {\n            message: result.data.complete_message,\n            status: result.data.status,\n          };\n        }\n\n        if (result.status === 'FAILED') {\n          await this.transactionRepository.update(\n            { merchantId: reference },\n            { status: TRANSACTIONSTATUS.FAILED },\n          );\n          return {\n            message: result.data.complete_message,\n            status: result.data.status,\n          };\n        }\n      }*/\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async updateTransactionStatus(\n    reference: number | string,\n    status: TransactionStatus,\n  ) {\n    try {\n      if (this.currentService === MONNIFY) {\n        return await this.withdrawalRepository.update(\n          { merchantId: reference },\n          { status },\n        );\n      }\n\n      if (this.currentService === FLUTTERWAVE) {\n        await this.withdrawalRepository.update(\n          { reference: reference },\n          { status },\n        );\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getTotalWithdrawalsBalance() {\n    try {\n      let { sum } = await this.withdrawalRepository\n        .createQueryBuilder('withdrawal')\n        .select('SUM(withdrawal.amount)', 'sum')\n        .where('withdrawal.currency = :type', { type: CURRENCY.NAIRA })\n        .getRawOne();\n      if (!sum) {\n        sum = 0;\n      }\n      return {\n        totalWithdrawals: sum,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getTotalDepositsBalance() {\n    try {\n      let { sum } = await this.depositRepository\n        .createQueryBuilder('deposit')\n        .select('SUM(deposit.amount)', 'sum')\n        .where('deposit.currency = :type', { type: CURRENCY.NAIRA })\n        .getRawOne();\n      if (!sum) {\n        sum = 0;\n      }\n\n      return {\n        totalDeposits: sum,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getAllTransactions(type) {\n    try {\n      switch (type) {\n        case 'all':\n          const depositsQuery = await this.depositRepository\n            .createQueryBuilder('deposit')\n            .select('deposit')\n            .leftJoinAndSelect('deposit.user', 'user')\n            .leftJoinAndSelect('deposit.wallet', 'wallet')\n            .getQuery();\n          const withdrawalQuery = await this.withdrawalRepository\n            .createQueryBuilder('withdrawal')\n            .select('withdrawal')\n            .leftJoinAndSelect('withdrawal.user', 'user')\n            .leftJoinAndSelect('withdrawal.wallet', 'wallet')\n            .getQuery();\n\n          const allTransactions = await this.connection.manager.query(\n            `${depositsQuery} UNION ${withdrawalQuery}`,\n          );\n\n          return {\n            message: 'Success',\n            data: {\n              transactions: allTransactions,\n            },\n          };\n\n        case WITHDRAWAL:\n          const withdrawals = await this.withdrawalRepository.find({\n            relations: ['user', 'wallet'],\n          });\n          return {\n            message: 'Success',\n            data: {\n              transactions: withdrawals,\n            },\n          };\n\n        case DEPOSIT:\n          const deposits = await this.depositRepository.find({\n            relations: ['user', 'wallet'],\n          });\n          return {\n            message: 'Success',\n            data: {\n              transactions: deposits,\n            },\n          };\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getUserTransactions(id: number, type) {\n    try {\n      switch (type) {\n        case 'all':\n          const depositsQuery = await this.depositRepository\n            .createQueryBuilder('deposit')\n            .leftJoinAndSelect('deposit.user', 'user')\n            .leftJoinAndSelect('deposit.wallet', 'wallet')\n            .where(`user.id = ${id}`)\n            .getQuery();\n          const withdrawalQuery = await this.withdrawalRepository\n            .createQueryBuilder('withdrawal')\n            .leftJoinAndSelect('withdrawal.user', 'user')\n            .leftJoinAndSelect('withdrawal.wallet', 'wallet')\n            .where(`user.id = ${id}`)\n            .getQuery();\n\n          const allTransactions = await this.connection.manager.query(\n            `${depositsQuery} UNION ${withdrawalQuery}`,\n          );\n\n          return {\n            message: 'Success',\n            data: {\n              transactions: allTransactions,\n            },\n          };\n\n        case WITHDRAWAL:\n          const withdrawals = await this.withdrawalRepository.findOne(id, {\n            relations: ['user', 'wallet'],\n          });\n          return {\n            message: 'Success',\n            data: {\n              transactions: withdrawals,\n            },\n          };\n\n        case DEPOSIT:\n          const deposits = await this.depositRepository.findOne(id, {\n            relations: ['user', 'wallet'],\n          });\n          return {\n            message: 'Success',\n            data: {\n              transactions: deposits,\n            },\n          };\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findOneTransaction(id: number) {\n    try {\n      const withdrawal = await this.withdrawalRepository.findOne(id);\n      if (withdrawal) {\n        return {\n          message: 'Success',\n          data: {\n            transaction: withdrawal,\n          },\n        };\n      }\n      const deposit = await this.depositRepository.findOne(id);\n      if (deposit) {\n        return {\n          message: 'Success',\n          data: {\n            transaction: deposit,\n          },\n        };\n      }\n\n      throw new HttpException('Transaction not found', HttpStatus.NOT_FOUND);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /*async getTotalNairaDepositsBalance() {\n    try {\n      const { sum } = await this.transactionRepository\n        .createQueryBuilder('transaction')\n        .select('SUM(transaction.amount)', 'sum')\n        .where('transaction.currency = :currency', {\n          currency: CURRENCY.NAIRA,\n        })\n        .andWhere('transaction.type = :type', { type: TRANSACTION.DEPOSIT })\n        .getRawOne();\n\n      return {\n        totalNairaDeposits: sum,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n\n  async getUserTransactions(id: number, type?: TransactionType) {\n    try {\n      if (type) {\n        return await this.transactionRepository.find({ userId: id });\n      }\n      return await this.transactionRepository.find({ userId: id, type });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findOneTransaction(id: number) {\n    try {\n      return await this.transactionRepository.findOne(id);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // create callback url/webhooks\n  // add server sent events\n  //  admin refetch transaction\n  // admin retry a transaction\n  // admin update transaction details\n  // transaction with same amount and bank(similar transactions) with created at 10 minutes ago will not be valid\n\n  /*async getCurrentService() {\n    let data;\n    data = await this.cacheManager.get(\n      ServicesSettings.TRANSACTIONS_SERVICE,\n    );\n\n    if (!data) {\n      data = await this.settingsService.getSetting(\n        ServicesSettings.TRANSACTIONS_SERVICE,\n      );\n    }\n\n    if (!data) {\n      throw new HttpException(\n        'Service currently unavailable',\n        HttpStatus.SERVICE_UNAVAILABLE,\n      );\n    }\n\n    const status = data.isActive;\n\n    if (!status) {\n      throw new HttpException(\n        'Service currently unavailable',\n        HttpStatus.SERVICE_UNAVAILABLE,\n      );\n    }\n    const service = data.value;\n\n    switch (service) {\n      case Services.FLUTTERWAVE:\n        this.currentService = this.flutterwaveService;\n        break;\n      case Services.MONNIFY:\n        this.currentService = this.monnifyService;\n    }\n  }\n\n  async createVirtualAccount(createVirtualAccountDto: CreateVirtualAccountDto) {\n    const flutterwaveData: CreateReservedAccountDto = {\n      email: createVirtualAccountDto.customerEmail,\n      tx_ref: createVirtualAccountDto.accountRecference,\n      bvn: createVirtualAccountDto.bvn,\n      is_permanent: true,\n    };\n\n    const monnifyData = removeKeyAndPropertyFromObject(\n      createVirtualAccountDto,\n      ['tx_ref'],\n    );\n    try {\n      await this.getCurrentService();\n\n      let result;\n\n      switch (this.currentService) {\n        case this.flutterwaveService:\n          result = await this.currentService.createReservedAccount(\n            flutterwaveData,\n          );\n          break;\n        case this.monnifyService:\n          result = await this.currentService.createReservedAccount(monnifyData);\n      }\n\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async withdraw(withdrawalDto: WithdrawalDto) {\n    try {\n      await this.monnifyService.initiateTransfers(withdrawalDto);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /*async completeDeposit(reference: string, user: User) {\n    const queryRunner = this.connection.createQueryRunner();\n\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const transactionStatus = await this.paystackService.verifyTransaction(\n        reference,\n      );\n\n      if (transactionStatus['data']['status'] === 'success') {\n        const email = transactionStatus['data']['customer']['email'];\n        const { amount } = transactionStatus['data'];\n        const transactionDto = { email, amount };\n        const response = await this.walletService.deposit(transactionDto);\n        const deposit = new Transaction();\n        deposit.amount = amount;\n        deposit.balance = response.data.balance;\n        deposit.user = user;\n        deposit.type = 'deposit';\n        deposit.remarks = `Paystack Deposit`;\n        await queryRunner.manager.save(deposit);\n      }\n      await queryRunner.commitTransaction();\n      return {\n        message: 'Deposit completed successfully',\n      };\n    } catch (err) {\n      // since we have errors lets rollback the changes we made\n      await queryRunner.rollbackTransaction();\n\n      throw err;\n    } finally {\n      // you need to release a queryRunner which was manually instantiated\n      await queryRunner.release();\n    }\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transfer.html":{"url":"classes/Transfer.html","title":"class - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/entities/transfer.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityContainer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Public\n                                remarks\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                createddate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'real'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'real'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        remarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column } from 'typeorm';\nimport { EntityContainer } from 'src/common/types/entity';\nimport { TransactionStatus } from 'src/common/types/status.type';\n\nexport abstract class Transfer extends EntityContainer {\n  @Column({ type: 'real' })\n  public amount: number;\n\n  @Column()\n  public remarks: string;\n\n  @Column({ type: 'real' })\n  public balance: string;\n\n  @Column()\n  public status: TransactionStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TransferRequest.html":{"url":"entities/TransferRequest.html","title":"entity - TransferRequest","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TransferRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/entities/transfer-requests.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currency\n                            \n                            \n                                    Public\n                                fromUser\n                            \n                            \n                                    Public\n                                fromUserId\n                            \n                            \n                                    Public\n                                toUser\n                            \n                            \n                                    Public\n                                toUserId\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currency\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer-requests.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.sentRequests)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer-requests.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer-requests.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.receivedRequests)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer-requests.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer-requests.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transfers/entities/transfer-requests.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Currency } from 'src/common/types/currency.type';\nimport { TRANSFER_TYPES, TransferTypes } from 'src/common/types/transfer.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Transfer } from './transfer.entity';\n\n@Entity()\nexport class TransferRequest extends Transfer {\n  @Column()\n  public currency: Currency;\n\n  @Column({ default: TRANSFER_TYPES.REQUEST })\n  public type: TransferTypes;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.sentRequests)\n  public fromUser: Customer;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.receivedRequests)\n  public toUser: Customer;\n\n  @Column()\n  public fromUserId: number;\n\n  @Column()\n  public toUserId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferRequestRepository.html":{"url":"classes/TransferRequestRepository.html","title":"class - TransferRequestRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferRequestRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/repositories/transfer-request.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { TransferRequest } from '../entities/transfer-requests.entity';\n\n@EntityRepository(TransferRequest)\nexport class TransferRequestRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransfersController.html":{"url":"controllers/TransfersController.html","title":"controller - TransfersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransfersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/transfers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transfers\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { TransfersService } from './transfers.service';\nimport { CreateTransferDto } from './dto/create-transfer.dto';\nimport { UpdateTransferDto } from './dto/update-transfer.dto';\nimport { JwtAuthGaurd } from '../common/gaurds/jwt-auth.gaurd';\n\n@Controller('transfers')\nexport class TransfersController {\n  constructor(private readonly transfersService: TransfersService) {}\n\n  /*@UseGuards(JwtAuthGaurd)\n  @Post()\n  transfer(@Body() createTransferDto, @Request() req) {\n    //return req.user.email;\n    return this.transfersService.transferFunds({\n      ...createTransferDto,\n      senderEmail: req.user.email,\n    });\n  }\n\n  @UseGuards(JwtAuthGaurd)\n  @Get('hello')\n  testguard(@Request() req) {\n    return req.user;\n  }\n\n  @Get()\n  findAll() {\n    return this.transfersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.transfersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateTransferDto: UpdateTransferDto,\n  ) {\n    return this.transfersService.update(+id, updateTransferDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.transfersService.remove(+id);\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransfersModule.html":{"url":"modules/TransfersModule.html","title":"module - TransfersModule","body":"\n                   \n\n\n\n\n    Modules\n    TransfersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransfersModule\n\n\n\ncluster_TransfersModule_providers\n\n\n\ncluster_TransfersModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nTransfersModule\n\nTransfersModule\n\nTransfersModule -->\n\nUserModule->TransfersModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nTransfersModule -->\n\nWalletModule->TransfersModule\n\n\n\n\n\nTransfersService\n\nTransfersService\n\nTransfersModule -->\n\nTransfersService->TransfersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transfers/transfers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransfersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransfersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransfersService } from './transfers.service';\nimport { TransfersController } from './transfers.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from '../user/user.module';\nimport { WalletModule } from 'src/wallet/wallet.module';\nimport { ReceiveTransferRepository } from './repositories/receive-transfer.repository';\nimport { SendTransferRepository } from './repositories/send-transfer.repository';\nimport { TransferRequestRepository } from './repositories/transfer-request.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      ReceiveTransferRepository,\n      SendTransferRepository,\n      TransferRequestRepository,\n    ]),\n    UserModule,\n    WalletModule,\n  ],\n  controllers: [TransfersController],\n  providers: [TransfersService],\n})\nexport class TransfersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransfersService.html":{"url":"injectables/TransfersService.html","title":"injectable - TransfersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransfersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/transfers.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection, receiveTransferRepository: ReceiveTransferRepository, sendTransferRepository: SendTransferRepository, transferrequestRepository: TransferRequestRepository, userService: UserService, walletService: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/transfers/transfers.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        receiveTransferRepository\n                                                  \n                                                        \n                                                                        ReceiveTransferRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sendTransferRepository\n                                                  \n                                                        \n                                                                        SendTransferRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transferrequestRepository\n                                                  \n                                                        \n                                                                        TransferRequestRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        walletService\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { CreateTransferDto } from './dto/create-transfer.dto';\nimport { UpdateTransferDto } from './dto/update-transfer.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Connection } from 'typeorm';\nimport { Transfer } from './entities/transfer.entity';\nimport { UserService } from '../user/user.service';\nimport { WalletService } from 'src/wallet/wallet.service';\nimport { ReturnTypeContainer } from 'src/common/containers/Container.entity';\nimport { ReceiveTransferRepository } from './repositories/receive-transfer.repository';\nimport { SendTransferRepository } from './repositories/send-transfer.repository';\nimport { TransferRequestRepository } from './repositories/transfer-request.repository';\n\n@Injectable()\nexport class TransfersService {\n  constructor(\n    private connection: Connection,\n    @InjectRepository(ReceiveTransferRepository)\n    private receiveTransferRepository: ReceiveTransferRepository,\n    @InjectRepository(SendTransferRepository)\n    private sendTransferRepository: SendTransferRepository,\n    @InjectRepository(TransferRequestRepository)\n    private transferrequestRepository: TransferRequestRepository,\n    private readonly userService: UserService,\n    private readonly walletService: WalletService,\n  ) {}\n\n  /*async transferFunds(\n    createTransferDto: CreateTransferDto,\n  ): Promise> {\n    const queryRunner = this.connection.createQueryRunner();\n\n    const { recipientEmail, senderEmail, amount } = createTransferDto;\n    await queryRunner.connect();\n    await queryRunner.startTransaction();\n    try {\n      const recipient = await this.userService.findByEmail(recipientEmail);\n      const sender = await this.userService.findByEmail(senderEmail);\n\n      const recipientWalletId = recipient.data.wallet.id;\n      const senderWalletId = sender.data.wallet.id;\n\n      const recipientWallet = await this.walletService.findById(\n        recipientWalletId,\n      );\n      const senderWallet = await this.walletService.findById(senderWalletId);\n\n      if (senderWallet.balance \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TvSubscriptionActivity.html":{"url":"entities/TvSubscriptionActivity.html","title":"entity - TvSubscriptionActivity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TvSubscriptionActivity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/entities/tv-subscription-activity.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                quantity\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/tv-subscription-activity.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/tv-subscription-activity.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivitiesType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/tv-subscription-activity.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.tvSubscriptionActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/tv-subscription-activity.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.tvSubscriptionActivities)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activities/entities/tv-subscription-activity.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ACTIVITIES, ActivitiesType } from 'src/common/types/activities.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Activity } from './activity.entity';\n\n@Entity()\nexport class TvSubscriptionActivity extends Activity {\n  @Column({ default: ACTIVITIES.TV_SUBSCRIPTION })\n  type: ActivitiesType;\n\n  @Column()\n  billersCode: string;\n\n  @Column()\n  quantity: number;\n\n  @ManyToOne(() => Customer, (user: Customer) => user.tvSubscriptionActivities)\n  user: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.tvSubscriptionActivities)\n  wallet: Wallet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TvSubscriptionActivityRepository.html":{"url":"classes/TvSubscriptionActivityRepository.html","title":"class - TvSubscriptionActivityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TvSubscriptionActivityRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/repositories/tv-subscription-activity.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { TvSubscriptionActivity } from '../entities/tv-subscription-activity.entity';\n\n@EntityRepository(TvSubscriptionActivity)\nexport class TvSubscriptionActivityRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Twillio.html":{"url":"classes/Twillio.html","title":"class - Twillio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Twillio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twillio/entities/twillio.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Twillio {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TwillioController.html":{"url":"controllers/TwillioController.html","title":"controller - TwillioController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TwillioController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twillio/twillio.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                twillio\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { TwillioService } from './twillio.service';\nimport { CreateTwillioDto } from './dto/create-twillio.dto';\nimport { UpdateTwillioDto } from './dto/update-twillio.dto';\n\n@Controller('twillio')\nexport class TwillioController {\n  constructor(private readonly twillioService: TwillioService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TwillioModule.html":{"url":"modules/TwillioModule.html","title":"module - TwillioModule","body":"\n                   \n\n\n\n\n    Modules\n    TwillioModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TwillioModule\n\n\n\ncluster_TwillioModule_exports\n\n\n\ncluster_TwillioModule_providers\n\n\n\n\nTwillioService \n\nTwillioService \n\n\n\nTwillioModule\n\nTwillioModule\n\nTwillioService  -->\n\nTwillioModule->TwillioService \n\n\n\n\n\nTwillioService\n\nTwillioService\n\nTwillioModule -->\n\nTwillioService->TwillioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/twillio/twillio.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TwillioService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TwillioController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TwillioService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TwillioService } from './twillio.service';\nimport { TwillioController } from './twillio.controller';\n\n@Module({\n  controllers: [TwillioController],\n  providers: [TwillioService],\n  exports: [TwillioService],\n})\nexport class TwillioModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwillioService.html":{"url":"injectables/TwillioService.html","title":"injectable - TwillioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwillioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twillio/twillio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                twilioClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmPhoneNumber\n                            \n                            \n                                    Async\n                                initiatePhoneNumberVerification\n                            \n                            \n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/twillio/twillio.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        confirmPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirmPhoneNumber(phoneNumber: string, verificationCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/twillio/twillio.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    verificationCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initiatePhoneNumberVerification\n                        \n                    \n                \n            \n            \n                \n                    \n                    initiatePhoneNumberVerification(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/twillio/twillio.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(to: string, body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/twillio/twillio.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        twilioClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Twilio\n\n                    \n                \n                    \n                        \n                                Defined in src/twillio/twillio.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Twilio } from 'twilio';\n\n@Injectable()\nexport class TwillioService {\n  private twilioClient: Twilio;\n\n  constructor(private readonly configService: ConfigService) {\n    const accountSid = configService.get('TWILLIO_ACCOUNT_SID');\n    const authToken = configService.get('TWILLIO_AUTH_TOKEN');\n\n    this.twilioClient = new Twilio(accountSid, authToken);\n  }\n\n  async initiatePhoneNumberVerification(phoneNumber: string) {\n    try {\n      const serviceSid = this.configService.get(\n        'TWILLIO_MESSAGING_SERVICE_SID',\n      );\n\n      return await this.twilioClient.verify\n        .services(serviceSid)\n        .verifications.create({ to: phoneNumber, channel: 'sms' });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async confirmPhoneNumber(phoneNumber: string, verificationCode: string) {\n    try {\n      const serviceSid = this.configService.get(\n        'TWILLIO_MESSAGING_SERVICE_SID',\n      );\n\n      const result = await this.twilioClient.verify\n        .services(serviceSid)\n        .verificationChecks.create({ to: phoneNumber, code: verificationCode });\n\n      if (!result.valid || result.status !== 'approved') {\n        throw new BadRequestException('Invalid code');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async sendMessage(to: string, body: string) {\n    const phoneNumber = this.configService.get('TWILLIO_PHONE_NUMBER');\n    try {\n      await this.twilioClient.messages.create({\n        to,\n        from: phoneNumber,\n        body: body,\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountDto.html":{"url":"classes/UpdateAccountDto.html","title":"class - UpdateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/dto/update-account.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAccountDto } from './create-account.dto';\n\nexport class UpdateAccountDto extends PartialType(CreateAccountDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateActivityDto.html":{"url":"classes/UpdateActivityDto.html","title":"class - UpdateActivityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateActivityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activities/dto/update-activity.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateActivityDto } from './create-activity.dto';\n\nexport class UpdateActivityDto extends PartialType(CreateActivityDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAirtimeDto.html":{"url":"classes/UpdateAirtimeDto.html","title":"class - UpdateAirtimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAirtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/airtime/dto/update-airtime.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAirtimeDto } from './create-airtime.dto';\n\nexport class UpdateAirtimeDto extends PartialType(CreateAirtimeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnnouncementDto.html":{"url":"classes/UpdateAnnouncementDto.html","title":"class - UpdateAnnouncementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnnouncementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/announcement/dto/update-announcement.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAnnouncementDto } from './create-announcement.dto';\n\nexport class UpdateAnnouncementDto extends PartialType(CreateAnnouncementDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElectricitybillDto.html":{"url":"classes/UpdateElectricitybillDto.html","title":"class - UpdateElectricitybillDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElectricitybillDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/electricitybill/dto/update-electricitybill.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateElectricitybillDto } from './create-electricitybill.dto';\n\nexport class UpdateElectricitybillDto extends PartialType(\n  CreateElectricitybillDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmailDto.html":{"url":"classes/UpdateEmailDto.html","title":"class - UpdateEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/dto/update-email.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateEmailDto } from './create-email.dto';\n\nexport class UpdateEmailDto extends PartialType(CreateEmailDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHealthDto.html":{"url":"classes/UpdateHealthDto.html","title":"class - UpdateHealthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHealthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/dto/update-health.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateHealthDto } from './create-health.dto';\n\nexport class UpdateHealthDto extends PartialType(CreateHealthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLogDto.html":{"url":"classes/UpdateLogDto.html","title":"class - UpdateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/dto/update-log.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateLogDto } from './create-log.dto';\n\nexport class UpdateLogDto extends PartialType(CreateLogDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMerchantApiDto.html":{"url":"classes/UpdateMerchantApiDto.html","title":"class - UpdateMerchantApiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMerchantApiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/merchant-api/dto/update-merchant-api.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateMerchantApiDto } from './create-merchant-api.dto';\n\nexport class UpdateMerchantApiDto extends PartialType(CreateMerchantApiDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMobiledatumDto.html":{"url":"classes/UpdateMobiledatumDto.html","title":"class - UpdateMobiledatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMobiledatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mobiledata/dto/update-mobiledatum.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateMobiledatumDto } from './create-mobiledatum.dto';\n\nexport class UpdateMobiledatumDto extends PartialType(CreateMobiledatumDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMonnifyDto.html":{"url":"classes/UpdateMonnifyDto.html","title":"class - UpdateMonnifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMonnifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monnify/dto/update-monnify.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateMonnifyDto } from './create-monnify.dto';\n\nexport class UpdateMonnifyDto extends PartialType(CreateMonnifyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNodemailerDto.html":{"url":"classes/UpdateNodemailerDto.html","title":"class - UpdateNodemailerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNodemailerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nodemailer/dto/update-nodemailer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateNodemailerDto } from './create-nodemailer.dto';\n\nexport class UpdateNodemailerDto extends PartialType(CreateNodemailerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaystackDto.html":{"url":"classes/UpdatePaystackDto.html","title":"class - UpdatePaystackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaystackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dto/update-paystack.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePaystackDto } from './create-paystack.dto';\n\nexport class UpdatePaystackDto extends PartialType(CreatePaystackDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReferralDto.html":{"url":"classes/UpdateReferralDto.html","title":"class - UpdateReferralDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReferralDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/referral/dto/update-referral.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateReferralDto } from './create-referral.dto';\n\nexport class UpdateReferralDto extends PartialType(CreateReferralDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSettingDto.html":{"url":"classes/UpdateSettingDto.html","title":"class - UpdateSettingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSettingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/dto/update-setting.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSettingDto } from './create-setting.dto';\n\nexport class UpdateSettingDto extends PartialType(CreateSettingDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTransactionDto.html":{"url":"classes/UpdateTransactionDto.html","title":"class - UpdateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/dto/update-transaction.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTransactionDto } from './create-transaction.dto';\n\nexport class UpdateTransactionDto extends PartialType(CreateTransactionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTransferDto.html":{"url":"classes/UpdateTransferDto.html","title":"class - UpdateTransferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTransferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transfers/dto/update-transfer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTransferDto } from './create-transfer.dto';\n\nexport class UpdateTransferDto extends PartialType(CreateTransferDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTvsubscriptionDto.html":{"url":"classes/UpdateTvsubscriptionDto.html","title":"class - UpdateTvsubscriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTvsubscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tvsubscription/dto/update-tvsubscription.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTvsubscriptionDto } from './create-tvsubscription.dto';\n\nexport class UpdateTvsubscriptionDto extends PartialType(\n  CreateTvsubscriptionDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTwillioDto.html":{"url":"classes/UpdateTwillioDto.html","title":"class - UpdateTwillioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTwillioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/twillio/dto/update-twillio.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTwillioDto } from './create-twillio.dto';\n\nexport class UpdateTwillioDto extends PartialType(CreateTwillioDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVtpassDto.html":{"url":"classes/UpdateVtpassDto.html","title":"class - UpdateVtpassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVtpassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/update-vtpass.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateVtpassDto } from './create-vtpass.dto';\n\nexport class UpdateVtpassDto extends PartialType(CreateVtpassDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWalletDto.html":{"url":"classes/UpdateWalletDto.html","title":"class - UpdateWalletDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWalletDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/dto/update-wallet.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWalletDto } from './create-wallet.dto';\n\nexport class UpdateWalletDto extends PartialType(CreateWalletDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityContainer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                            \n                                profileImage\n                            \n                            \n                                createddate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                updateddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateddate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EntityContainer\n\n                            \n                        \n                    \n                        \n                                Defined in         EntityContainer:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Column } from 'typeorm';\nimport { EntityContainer } from 'src/common/types/entity';\n\nexport abstract class User extends EntityContainer {\n  @Column()\n  public firstName: string;\n\n  @Column()\n  public lastName: string;\n\n  @Column({ unique: true })\n  public email: string;\n\n  @Column({ unique: true })\n  public phoneNumber: string;\n\n  @Exclude()\n  @Column()\n  public password: string;\n\n  @Column({ nullable: true })\n  profileImage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approvekyc\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                getPendingKyc\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserByEmail\n                            \n                            \n                                getUserById\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        approvekyc\n                        \n                    \n                \n            \n            \n                \napprovekyc(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Patch('kyc/approve')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CheckAbilities(new ReadUserPermission())@Get('current')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { user: any; role: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPendingKyc\n                        \n                    \n                \n            \n            \n                \ngetPendingKyc()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('kyc/pending')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(email)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':email')@UseGuards(JwtAuthGaurd)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byId/:id')@Public()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(verifyEmailDto: VerifyEmailDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CheckAbilities(new EditUserPermission())@Post('verifyemail')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    verifyEmailDto\n                                    \n                                                VerifyEmailDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  ParseIntPipe,\n  Request,\n  Req,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { JwtAuthGaurd } from 'src/common/gaurds/jwt-auth.gaurd';\nimport { VerifyEmailDTO } from './dto/verify-email.dto';\nimport { AddBankAccountDTO } from '../account/dto/add-bank-accoiunt.dto';\nimport { AbilitiesGuard } from 'src/ability/abilities.guard';\nimport {\n  CheckAbilities,\n  EditUserPermission,\n  ReadUserPermission,\n  ReadWithdrawalPermission,\n} from 'src/ability/abilities.decorator';\nimport { Public } from 'src/common/decorators/jwt-auth-guard.decorator';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Public()\n  @Post('signup')\n  async create(@Body() createUserDto: CreateUserDto) {\n    const user = await this.userService.createCustomer(createUserDto);\n    return {\n      user,\n    };\n  }\n\n  @CheckAbilities(new ReadUserPermission())\n  @Get('current')\n  getCurrentUser(@Request() req) {\n    return {\n      user: req.user.user,\n      role: req.user.role,\n    };\n  }\n\n  //  @UseGuards(JwtAuthGaurd)\n  @Public()\n  @Get()\n  getUser() {\n    return this.userService.find();\n  }\n\n  @Get(':email')\n  @UseGuards(JwtAuthGaurd)\n  getUserByEmail(@Param('email') email) {\n    return this.userService.findByEmail(email);\n  }\n\n  @Get('byId/:id')\n  @Public()\n  getUserById(@Param('id') id) {\n    return this.userService.findById(id);\n  }\n\n  @Public()\n  @Get('kyc/pending')\n  getPendingKyc() {\n    return this.userService.findUnapprovedKyc();\n  }\n\n  @Public()\n  @Patch('kyc/approve')\n  approvekyc(@Param('id') id) {\n    return this.userService.approveKyc(id);\n  }\n\n  @CheckAbilities(new EditUserPermission())\n  @Post('verifyemail')\n  async verifyEmail(@Body() verifyEmailDto: VerifyEmailDTO) {\n    const { email, code } = verifyEmailDto;\n    await this.userService.verifyEmail(code, email);\n    return {\n      message: 'Email verification Success',\n    };\n  }\n  /*\n  @CheckAbilities(new EditUserPermission())\n  @Post()\n  initiatePhoneVerification(@Body() body) {\n    const { phoneNumber } = body;\n    return this.userService.initiatePhoneNumberVerification(phoneNumber);\n  }\n\n  @CheckAbilities(new EditUserPermission())\n  @Post()\n  verifyPhoneOtp(@Request() req, @Body() body) {\n    const { id } = req;\n    const { phoneNumber, verificationCode } = body;\n\n    return this.userService.verifyPhoneNumberOtp(\n      phoneNumber,\n      verificationCode,\n      id,\n    );\n  }*/\n\n  // @UseGuards(JwtAuthGaurd)\n  /*@Get()\n  getUser() {\n    return this.userService.find();\n  }\n\n  @Get(':email')\n  //  @UseGuards(AbilitiesGuard)\n  //  @UseGuards(JwtAuthGaurd)\n  //@CheckAbilities(new SEND_USER_PERMSSION())\n  getUserByEmail(@Param('email') email) {\n    return this.userService.findByEmail(email);\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAbilityModule\n\nAbilityModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAbilityModule->UserModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nUserModule -->\n\nEmailModule->UserModule\n\n\n\n\n\nReferralModule\n\nReferralModule\n\nUserModule -->\n\nReferralModule->UserModule\n\n\n\n\n\nSmsModule\n\nSmsModule\n\nUserModule -->\n\nSmsModule->UserModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nUserModule -->\n\nTransactionsModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AbilityModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            ReferralModule\n                        \n                        \n                            SmsModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TransactionsModule } from 'src/transactions/transactions.module';\nimport { SmsModule } from 'src/sms/sms.module';\nimport { EmailModule } from 'src/email/email.module';\nimport { ReferralModule } from 'src/referral/referral.module';\nimport { AbilityModule } from 'src/ability/ability.module';\nimport { CustomerRepository } from './repositories/customer.repository';\nimport { CustomerKycRepository } from './repositories/customer-kyc.repository';\nimport { AdminRepository } from '../admin/repositories/admin.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      CustomerRepository,\n      AdminRepository,\n      CustomerKycRepository,\n    ]),\n    TransactionsModule,\n    SmsModule,\n    EmailModule,\n    ReferralModule,\n    AbilityModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                approveKyc\n                            \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                createCustomer\n                            \n                            \n                                    Async\n                                createReferralCode\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAdminForJwt\n                            \n                            \n                                    Async\n                                findBvnByUserId\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findCustomerForJwt\n                            \n                            \n                                    Async\n                                findKycByUserId\n                            \n                            \n                                    Async\n                                findUnapprovedKyc\n                            \n                            \n                                    Async\n                                getTotalNumberOfUsers\n                            \n                            \n                                    Async\n                                setPin\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                            \n                                    Async\n                                verifyReferralCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customerRepository: CustomerRepository, adminRepository: AdminRepository, customerKycRepository: CustomerKycRepository, smsService: SmsService, configService: ConfigService, emailService: EmailService, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerRepository\n                                                  \n                                                        \n                                                                        CustomerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminRepository\n                                                  \n                                                        \n                                                                        AdminRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customerKycRepository\n                                                  \n                                                        \n                                                                        CustomerKycRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smsService\n                                                  \n                                                        \n                                                                        SmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        approveKyc\n                        \n                    \n                \n            \n            \n                \n                    \n                    approveKyc(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:351\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCustomer\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCustomer(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReferralCode(firstName)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAdminForJwt\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAdminForJwt(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBvnByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBvnByUserId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:314\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCustomerForJwt\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCustomerForJwt(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findKycByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findKycByUserId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUnapprovedKyc\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUnapprovedKyc()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:334\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTotalNumberOfUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTotalNumberOfUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setPin\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPin(email: string, pin: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(code, email)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:359\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Connection, Not, Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport * as crypto from 'crypto';\nimport * as bcrypt from 'bcrypt';\nimport { SmsService } from 'src/sms/sms.service';\nimport { ConfigService } from '@nestjs/config';\nimport { EmailService } from 'src/email/email.service';\nimport { object } from 'joi';\nimport { AuthService } from 'src/auth/auth.service';\nimport { ReferralService } from 'src/referral/referral.service';\nimport { USER_LEVELS, USER_ROLES } from 'src/common/types/roles.type';\nimport { CustomerRepository } from './repositories/customer.repository';\nimport { AdminRepository } from '../admin/repositories/admin.repository';\nimport { CustomerKycRepository } from './repositories/customer-kyc.repository';\nimport { WALLET_TYPES } from 'src/common/types/wallet.type';\nimport { CURRENCY } from 'src/common/types/currency.type';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Customer } from './entities/customer.entity';\nimport { CustomerKyc } from './entities/customer-kyc.entity';\nimport { Referral } from 'src/referral/entities/referral.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(CustomerRepository)\n    private customerRepository: CustomerRepository,\n    @InjectRepository(AdminRepository)\n    private adminRepository: AdminRepository,\n    @InjectRepository(CustomerKycRepository)\n    private customerKycRepository: CustomerKycRepository,\n    private readonly smsService: SmsService,\n    private readonly configService: ConfigService,\n    private readonly emailService: EmailService,\n    private connection: Connection,\n  ) {}\n\n  async find() {\n    try {\n      return await this.customerRepository\n        .find\n        //{relations: ['wallets'],}\n        ();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findByEmail(email: string) {\n    try {\n      const customer = await this.customerRepository.findByEmail(email);\n\n      if (customer) {\n        return {\n          user: customer,\n          role: USER_ROLES.CUSTOMER,\n        };\n      }\n\n      const admin = await this.adminRepository.findByEmail(email);\n\n      if (admin) {\n        return {\n          user: admin,\n          role: USER_ROLES.ADMIN,\n        };\n      }\n\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findById(id: number) {\n    try {\n      const customer = await this.customerRepository.findById(id);\n\n      if (customer) {\n        return {\n          user: customer,\n          role: USER_ROLES.CUSTOMER,\n        };\n      }\n\n      const admin = await this.adminRepository.findById(id);\n\n      if (admin) {\n        return {\n          user: admin,\n          role: USER_ROLES.ADMIN,\n        };\n      }\n\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findCustomerForJwt(id: number) {\n    return await this.customerRepository.findOne(id, {\n      relations: ['wallets'],\n    });\n  }\n\n  async findAdminForJwt(id: number) {\n    return await this.adminRepository.findOne(id);\n  }\n\n  async createCustomer(createUserDto: CreateUserDto) {\n    const queryRunner = this.connection.createQueryRunner();\n    try {\n      const { email, phoneNumber, referralCode } = createUserDto;\n\n      const emailAlreadyExists = await this.customerRepository.findByEmail(\n        email,\n      );\n\n      if (emailAlreadyExists) {\n        throw new HttpException('Email Already in use', HttpStatus.CONFLICT);\n      }\n\n      const phoneNumberAlreadyExists =\n        await this.customerRepository.findByPhoneNumber(phoneNumber);\n\n      if (phoneNumberAlreadyExists) {\n        throw new HttpException(\n          'Phone Number Already in use',\n          HttpStatus.CONFLICT,\n        );\n      }\n\n      let referrerId;\n\n      if (referralCode) {\n        const user = await this.verifyReferralCode(referralCode);\n\n        referrerId = user.id;\n      }\n\n      const hashedPassword = await bcrypt.hash(createUserDto.password, 10);\n\n      const code = await this.createReferralCode(createUserDto.firstName);\n\n      await queryRunner.connect();\n      await queryRunner.startTransaction();\n\n      try {\n        const newUser = await queryRunner.manager.create(Customer, {\n          ...createUserDto,\n          password: hashedPassword,\n          referralCode: code,\n        });\n\n        const savedUser = await queryRunner.manager.save(Customer, newUser);\n\n        const wallet = await queryRunner.manager.create(Wallet, {\n          userId: savedUser.id,\n          type: WALLET_TYPES.NAIRA,\n          currency: CURRENCY.NAIRA,\n        });\n\n        await queryRunner.manager.save(Wallet, wallet);\n\n        const newKyc = await queryRunner.manager.create(CustomerKyc, {\n          userId: savedUser.id,\n        });\n\n        await queryRunner.manager.save(CustomerKyc, newKyc);\n\n        if (referralCode) {\n          const newReferral = await queryRunner.manager.create(Referral, {\n            referredById: referrerId,\n            referredId: savedUser.id,\n          });\n\n          await queryRunner.manager.save(newReferral);\n        }\n\n        await this.emailService.sendVerificationCode(\n          newUser.email,\n          queryRunner,\n        );\n        await queryRunner.commitTransaction();\n        return savedUser;\n      } catch (error) {\n        await queryRunner.rollbackTransaction();\n        throw error;\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // async createAdmin(createAdminDto: CreateAdminDto) {\n  //   const queryRunner = this.connection.createQueryRunner();\n  //   try {\n  //     const { email, phoneNumber } = createAdminDto;\n\n  //     const emailAlreadyExists = await this.adminRepository.findByEmail(email);\n\n  //     if (emailAlreadyExists) {\n  //       throw new HttpException('Email Already in use', HttpStatus.CONFLICT);\n  //     }\n  //     const phoneNumberAlreadyExists =\n  //       await this.adminRepository.findByPhoneNumber(phoneNumber);\n\n  //     if (phoneNumberAlreadyExists) {\n  //       throw new HttpException(\n  //         'Phone Number Already in use',\n  //         HttpStatus.CONFLICT,\n  //       );\n  //     }\n  //     const hashedPassword = await bcrypt.hash(createAdminDto.password, 10);\n\n  //     await queryRunner.connect();\n  //     await queryRunner.startTransaction();\n\n  //     try {\n  //       const newUser = await queryRunner.manager.create(Administrator, {\n  //         ...createAdminDto,\n  //         password: hashedPassword,\n  //       });\n\n  //       const savedAdmin = await queryRunner.manager.save(\n  //         Administrator,\n  //         newUser,\n  //       );\n\n  //       await queryRunner.commitTransaction();\n  //       return {\n  //         message: 'Admin Created Successfully',\n  //         data: {\n  //           admin: savedAdmin,\n  //         },\n  //       };\n  //     } catch (error) {\n  //       await queryRunner.rollbackTransaction();\n  //       throw error;\n  //     }\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // }\n  async createAdmin(payload) {\n    try {\n      const { email } = payload;\n\n      const emailAlreadyExists = await this.adminRepository.findByEmail(email);\n\n      if (emailAlreadyExists) {\n        throw new HttpException('Email Already in use', HttpStatus.CONFLICT);\n      }\n\n      const hashedPassword = await bcrypt.hash(payload.password, 10);\n\n      const newAdmin = await this.adminRepository.create({\n        ...payload,\n        password: hashedPassword,\n      });\n      return await this.adminRepository.save(newAdmin);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyReferralCode(referralCode: string) {\n    try {\n      const user = await this.customerRepository.findByReferralCode(\n        referralCode,\n      );\n      if (!user) {\n        throw new HttpException('Invalid referralCode', HttpStatus.BAD_REQUEST);\n      }\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async createReferralCode(firstName) {\n    try {\n      const hash = await crypto.randomBytes(4).toString('hex').substring(0, 3);\n      return `TAP_${firstName}${hash}`;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async setPin(email: string, pin: number) {\n    try {\n      const hashedPin = await bcrypt.hash(String(pin), 10);\n      return await this.customerRepository.update(\n        { email },\n        { pin: hashedPin },\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getTotalNumberOfUsers() {\n    try {\n      const totalUsers = await this.customerRepository.count();\n\n      return { totalUsers };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findBvnByUserId(id: number) {\n    try {\n      const { bvn } = await this.customerKycRepository.findOne({ userId: id });\n\n      return bvn;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findKycByUserId(id: number) {\n    try {\n      const kyc = await this.customerKycRepository.findOne({ userId: id });\n\n      return kyc;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findUnapprovedKyc() {\n    try {\n      const verifications = await this.customerKycRepository.find({\n        kycApproved: false,\n      });\n\n      return {\n        message: 'success',\n        data: {\n          verifications,\n        },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async approveKyc(id: number) {\n    try {\n      await this.customerKycRepository.update(id, { kycApproved: true });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async verifyEmail(code, email) {\n    try {\n      await this.emailService.verifyMail(code, email);\n      await this.customerRepository.update(\n        { email },\n        { level: USER_LEVELS.ONE },\n      );\n      return;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /*\n  async findByEmail(email: string): Promise> {\n    try {\n      const user = await this.userRepository.findOne(\n        { email },\n        {\n          relations: [\n            'wallet',\n            'transfers',\n            'transactions',\n            'accounts',\n            'airtimeActivities',\n            'mobileDataActivities',\n            'electricityActivities',\n            'tvSubscriptionActivities',\n          ],\n        },\n      );\n      if (!user) {\n        throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n      }\n      return {\n        message: 'na GOKE DO AM 0',\n        data: user,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n  async findById(id: number) {\n    try {\n      return await this.userRepository.findOne(id, {\n        relations: [\n          'wallet',\n          'transfers',\n          'transactions',\n          'accounts',\n          'airtimeActivities',\n          'kyc',\n        ],\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n  async find() {\n    try {\n      return await this.userRepository.find({\n        relations: ['wallet', 'accounts', 'transactions', 'transfers'],\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n  async findByPhone(phoneNumber: string): Promise> {\n    try {\n      const user = await this.userRepository.findOne(\n        { phoneNumber },\n        {\n          relations: ['wallet'],\n        },\n      );\n      if (!user) {\n        throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n      }\n      return {\n        message: 'SUCCESS',\n        data: user,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n  async findByFirstName(firstName: string): Promise> {\n    try {\n      const user = await this.userRepository.findOne(\n        { firstName },\n        {\n          relations: ['wallet'],\n        },\n      );\n      if (!user) {\n        throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n      }\n      return {\n        message: 'SUCCESS',\n        data: user,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n  async findByLastName(lastName: string): Promise> {\n    try {\n      const user = await this.userRepository.findOne(\n        { lastName },\n        {\n          relations: ['wallet'],\n        },\n      );\n      if (!user) {\n        throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n      }\n      return {\n        message: 'SUCCESS',\n        data: user,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n  async getByEmail(email) {\n    return await this.userRepository.findOne({ email });\n  }\n  async createReferralCode(firstName) {\n    try {\n      const hash = await crypto.randomBytes(4).toString('hex').substring(0, 3);\n      return `${firstName}${hash}`;\n    } catch (error) {\n      throw error;\n    }\n  }\n  // add to kyc\n  /*async markPhonenumberAsConfirmed(id) {\n    try {\n      return this.userRepository.update(id, {\n        isPhoneNumberVerified: true,\n      });\n    } catch (error) {}\n  }\n  async markEmailAsConfirmed(email) {\n    try {\n      return this.userRepository.update(\n        { email },\n        {\n          isEmailVerified: true,\n        },\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n  async verifyEmail(code, email) {\n    try {\n      await this.emailService.verifyMail(code, email);\n      await this.markEmailAsConfirmed(email);\n      return {\n        message: 'Email Verified Successfully',\n      };\n    } catch (error) {}\n  }\n  async initiatePhoneNumberVerification(phoneNumber: string) {\n    try {\n      return this.smsService.sendPhoneNumberOtp(phoneNumber);\n    } catch (error) {\n      throw error;\n    }\n  }\n  async verifyPhoneNumberOtp(\n    phoneNumber: string,\n    verificationCode: string,\n    id: number,\n  ) {\n    try {\n      const data = await this.smsService.verifyPhoneNumberOtp(\n        phoneNumber,\n        verificationCode,\n      );\n      await this.markPhonenumberAsConfirmed(id);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  \n  async delete(id) {\n    return this.userRepository.delete(id);\n  }\n  async setPin(email: string, pin: number) {\n    const hashedPin = await bcrypt.hash(String(pin), 10);\n    return await this.userRepository.update({ email }, { pin: hashedPin });\n  }\n  async verifyReferralCode(referralCode: string) {\n    try {\n      const user = await this.userRepository.findOne({ referralCode });\n      if (!user) {\n        throw new HttpException('Invalid referralCode', HttpStatus.BAD_REQUEST);\n      }\n      return user.id;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async markAsAdmin(email: string, role: AdminRoles) {\n    try {\n      await this.userRepository.update({ email }, { role });\n    } catch (error) {\n      throw error;\n    }\n  }\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UssdDepositData.html":{"url":"classes/UssdDepositData.html","title":"class - UssdDepositData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UssdDepositData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/interfaces/deposits.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UssdDepositDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tx_ref\n                            \n                            \n                                account_bank\n                            \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                email\n                            \n                            \n                                phone_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tx_ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/interfaces/deposits.interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        account_bank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UssdDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UssdDepositDto:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UssdDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UssdDepositDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UssdDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UssdDepositDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UssdDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UssdDepositDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UssdDepositDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UssdDepositDto:22\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { InitiateDepositDto } from '../dto/initiate-deposit.dto';\nimport { UssdDepositDto } from '../dto/ussd-deposit.dto';\n\nexport class AuthorizeDepositData extends InitiateDepositDto {\n  @IsString()\n  @IsNotEmpty()\n  tx_ref: string;\n}\n\nexport class UssdDepositData extends UssdDepositDto {\n  @IsString()\n  @IsNotEmpty()\n  tx_ref: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UssdDepositDto.html":{"url":"classes/UssdDepositDto.html","title":"class - UssdDepositDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UssdDepositDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/dto/ussd-deposit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account_bank\n                            \n                            \n                                amount\n                            \n                            \n                                currency\n                            \n                            \n                                email\n                            \n                            \n                                phone_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account_bank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/ussd-deposit.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/ussd-deposit.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/ussd-deposit.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/ussd-deposit.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/ussd-deposit.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UssdDepositDto {\n  @IsString()\n  @IsNotEmpty()\n  account_bank: string;\n\n  @IsString()\n  @IsNotEmpty()\n  amount: string;\n\n  @IsString()\n  @IsNotEmpty()\n  currency: string;\n\n  @IsString()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  phone_number: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateAccountDto.html":{"url":"classes/ValidateAccountDto.html","title":"class - ValidateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/dto/validate-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountNumber\n                            \n                            \n                                bankCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/account/dto/validate-account.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bankCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/account/dto/validate-account.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidateAccountDto {\n  accountNumber: string;\n  bankCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateAirtimeDto.html":{"url":"classes/ValidateAirtimeDto.html","title":"class - ValidateAirtimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateAirtimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/airtime/dto/validate-airtime.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billerCode\n                            \n                            \n                                customerCode\n                            \n                            \n                                itemCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billerCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/validate-airtime.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/validate-airtime.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/airtime/dto/validate-airtime.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidateAirtimeDto {\n  itemCode: string;\n  customerCode: string;\n  billerCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateDepositDto.html":{"url":"classes/ValidateDepositDto.html","title":"class - ValidateDepositDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateDepositDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flutterwave/dto/validate-deposit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flw_ref\n                            \n                            \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flw_ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/validate-deposit.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flutterwave/dto/validate-deposit.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ValidateDepositDto {\n  @IsString()\n  @IsNotEmpty()\n  otp: string;\n\n  @IsString()\n  @IsNotEmpty()\n  flw_ref: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyAccountNumberDto.html":{"url":"classes/VerifyAccountNumberDto.html","title":"class - VerifyAccountNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyAccountNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/dto/verify-account-number.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountNumber\n                            \n                            \n                                bankCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/bank/dto/verify-account-number.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bankCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/bank/dto/verify-account-number.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VerifyAccountNumberDto {\n  accountNumber: string;\n  bankCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyAccountNumberDto-1.html":{"url":"classes/VerifyAccountNumberDto-1.html","title":"class - VerifyAccountNumberDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyAccountNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paystack/dto/verify-account-number.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountNumber\n                            \n                            \n                                bankID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/verify-account-number.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bankID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paystack/dto/verify-account-number.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class VerifyAccountNumberDto {\n  @IsString()\n  @IsNotEmpty()\n  accountNumber: string;\n\n  @IsString()\n  @IsNotEmpty()\n  bankID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyBvnDto.html":{"url":"classes/VerifyBvnDto.html","title":"class - VerifyBvnDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyBvnDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank/dto/verify-bvn.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bvn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bvn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/bank/dto/verify-bvn.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class VerifyBvnDto {\n  bvn: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyEmailDTO.html":{"url":"classes/VerifyEmailDTO.html","title":"class - VerifyEmailDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyEmailDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/verify-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/verify-email.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/verify-email.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, Length } from 'class-validator';\n\nexport class VerifyEmailDTO {\n  @IsString()\n  @IsNotEmpty()\n  email;\n\n  @IsString()\n  @Length(6)\n  code;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifySmartCardDto.html":{"url":"classes/VerifySmartCardDto.html","title":"class - VerifySmartCardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifySmartCardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/verify-smart-card.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                serviceID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/verify-smart-card.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/verify-smart-card.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class VerifySmartCardDto {\n  @IsString()\n  @IsNotEmpty()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  serviceID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifySmileEmailDto.html":{"url":"classes/VerifySmileEmailDto.html","title":"class - VerifySmileEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifySmileEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/verify-smile-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                serviceID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/verify-smile-email.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/verify-smile-email.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class VerifySmileEmailDto {\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  serviceID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifySmilePhoneDto.html":{"url":"classes/VerifySmilePhoneDto.html","title":"class - VerifySmilePhoneDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifySmilePhoneDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/dto/verify-smile-phone.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billersCode\n                            \n                            \n                                serviceID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        billersCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/verify-smile-phone.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/vtpass/dto/verify-smile-phone.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, Matches } from 'class-validator';\n\nexport class VerifySmilePhoneDto {\n  @IsString()\n  @IsNotEmpty()\n  billersCode: string;\n\n  @IsString()\n  @IsNotEmpty()\n  serviceID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTransactionDto.html":{"url":"classes/VerifyTransactionDto.html","title":"class - VerifyTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/dto/verify-transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reference\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/dto/verify-transaction.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class VerifyTransactionDto {\n  @IsString()\n  @IsNotEmpty()\n  reference: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vtpass.html":{"url":"classes/Vtpass.html","title":"class - Vtpass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vtpass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/entities/vtpass.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Vtpass {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VtpassController.html":{"url":"controllers/VtpassController.html","title":"controller - VtpassController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VtpassController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/vtpass.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                vtpass\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buyAirtime\n                            \n                            \n                                buyData\n                            \n                            \n                                buyElectricityDto\n                            \n                            \n                                buyShowmax\n                            \n                            \n                                buyStartimes\n                            \n                            \n                                buyWAEC\n                            \n                            \n                                changeBouquet\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getServiceIds\n                            \n                            \n                                getVariationCode\n                            \n                            \n                                getVtpassServicesIdentifiers\n                            \n                            \n                                queryTransactionStatus\n                            \n                            \n                                remove\n                            \n                            \n                                renewBouquet\n                            \n                            \n                                update\n                            \n                            \n                                verifySmartCardNumber\n                            \n                            \n                                verifySmileEmail\n                            \n                            \n                                verifySmilePhone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buyAirtime\n                        \n                    \n                \n            \n            \n                \nbuyAirtime(buyAirtimeDto: BuyAirtimeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('buy_airtime')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyAirtimeDto\n                                    \n                                                BuyAirtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyData\n                        \n                    \n                \n            \n            \n                \nbuyData(buyDataDto: BuyDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('buy_data')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyDataDto\n                                    \n                                                BuyDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyElectricityDto\n                        \n                    \n                \n            \n            \n                \nbuyElectricityDto(buyElectricityDto: BuyElectricityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('buy_electricity')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyElectricityDto\n                                    \n                                                BuyElectricityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyShowmax\n                        \n                    \n                \n            \n            \n                \nbuyShowmax(buyShowmaxDto: BuyShowmaxDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('buy_showmax')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyShowmaxDto\n                                    \n                                                BuyShowmaxDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyStartimes\n                        \n                    \n                \n            \n            \n                \nbuyStartimes(buyStartimesDto: BuyStartimesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('buy_startimes')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyStartimesDto\n                                    \n                                                BuyStartimesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyWAEC\n                        \n                    \n                \n            \n            \n                \nbuyWAEC(buyWAECDto: BuyWAECDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('buy_waec')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyWAECDto\n                                    \n                                                BuyWAECDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeBouquet\n                        \n                    \n                \n            \n            \n                \nchangeBouquet(bouquetChangeDto: BouquetChangeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('bouquet_change')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bouquetChangeDto\n                                    \n                                                BouquetChangeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createVtpassDto: CreateVtpassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVtpassDto\n                                    \n                                                CreateVtpassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServiceIds\n                        \n                    \n                \n            \n            \n                \ngetServiceIds(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('vtpass_service_ids/:identifier')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVariationCode\n                        \n                    \n                \n            \n            \n                \ngetVariationCode(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get_variation_codes/:serviceID')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVtpassServicesIdentifiers\n                        \n                    \n                \n            \n            \n                \ngetVtpassServicesIdentifiers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('vtpass_services_identifiers')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryTransactionStatus\n                        \n                    \n                \n            \n            \n                \nqueryTransactionStatus(queryTransactionStatusDto: QueryTransactionStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('transaction_status')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryTransactionStatusDto\n                                    \n                                                QueryTransactionStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renewBouquet\n                        \n                    \n                \n            \n            \n                \nrenewBouquet(bouquetChangeDto: BouquetRenewalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('bouquet_renewal')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bouquetChangeDto\n                                    \n                                                BouquetRenewalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateVtpassDto: UpdateVtpassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateVtpassDto\n                                    \n                                                UpdateVtpassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifySmartCardNumber\n                        \n                    \n                \n            \n            \n                \nverifySmartCardNumber(verifySmartCardDto: VerifySmartCardDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify_smart_card')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    verifySmartCardDto\n                                    \n                                                VerifySmartCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifySmileEmail\n                        \n                    \n                \n            \n            \n                \nverifySmileEmail(verifySmileEmailDto: VerifySmileEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify_smile_email')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    verifySmileEmailDto\n                                    \n                                                VerifySmileEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifySmilePhone\n                        \n                    \n                \n            \n            \n                \nverifySmilePhone(verifySmilePhoneDto: VerifySmilePhoneDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify_smile_phone')\n                \n            \n\n            \n                \n                    Defined in src/vtpass/vtpass.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    verifySmilePhoneDto\n                                    \n                                                VerifySmilePhoneDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { VtpassService } from './vtpass.service';\nimport { CreateVtpassDto } from './dto/create-vtpass.dto';\nimport { UpdateVtpassDto } from './dto/update-vtpass.dto';\nimport { BuyAirtimeDto } from './dto/buy-airtime.dto';\nimport { BuyDataDto } from './dto/buy-data.dto';\nimport { QueryTransactionStatusDto } from './dto/query-transaction-status.dto';\nimport { VerifySmileEmailDto } from './dto/verify-smile-email.dto';\nimport { VerifySmilePhoneDto } from './dto/verify-smile-phone.dto';\nimport { VerifySmartCardDto } from './dto/verify-smart-card.dto';\nimport { BouquetChangeDto } from './dto/bouquet-change.dto';\nimport { BouquetRenewalDto } from './dto/bouquet-renewal.dto';\nimport { BuyShowmaxDto } from './dto/buy-showmax.dto';\nimport { BuyStartimesDto } from './dto/buy-startimes.dto';\nimport { BuyWAECDto } from './dto/buy-waec.dto';\nimport { BuyElectricityDto } from './dto/buy-electricity.dto';\n\n@Controller('vtpass')\nexport class VtpassController {\n  constructor(private readonly vtpassService: VtpassService) {}\n\n  @Post('buy_airtime')\n  buyAirtime(@Body() buyAirtimeDto: BuyAirtimeDto) {\n    //    return getRequestId();\n    return this.vtpassService.buyAirtime(buyAirtimeDto);\n  }\n\n  @Post('buy_data')\n  buyData(@Body() buyDataDto: BuyDataDto) {\n    return this.vtpassService.buyData(buyDataDto);\n  }\n  @Get('get_variation_codes/:serviceID')\n  getVariationCode(@Param() params) {\n    return this.vtpassService.getVariationCodes(params.serviceID);\n  }\n\n  @Get('vtpass_services_identifiers')\n  getVtpassServicesIdentifiers() {\n    return this.vtpassService.getVtpassServicesIdentifiers();\n  }\n\n  @Get('vtpass_service_ids/:identifier')\n  getServiceIds(@Param() params) {\n    return this.vtpassService.getServiceIds(params.identifier);\n  }\n\n  @Post('transaction_status')\n  queryTransactionStatus(\n    @Body() queryTransactionStatusDto: QueryTransactionStatusDto,\n  ) {\n    return this.vtpassService.queryTransactionStatus(queryTransactionStatusDto);\n  }\n\n  @Post('verify_smile_phone')\n  verifySmilePhone(@Body() verifySmilePhoneDto: VerifySmilePhoneDto) {\n    return this.vtpassService.verifySmilePhone(verifySmilePhoneDto);\n  }\n\n  @Post('verify_smile_email')\n  verifySmileEmail(@Body() verifySmileEmailDto: VerifySmileEmailDto) {\n    return this.vtpassService.verifySmileEmail(verifySmileEmailDto);\n  }\n\n  @Post('verify_smart_card')\n  verifySmartCardNumber(@Body() verifySmartCardDto: VerifySmartCardDto) {\n    return this.vtpassService.verifySmartCardNumber(verifySmartCardDto);\n  }\n\n  @Post('bouquet_change')\n  changeBouquet(@Body() bouquetChangeDto: BouquetChangeDto) {\n    return this.vtpassService.bouquetChange(bouquetChangeDto);\n  }\n\n  @Post('bouquet_renewal')\n  renewBouquet(@Body() bouquetChangeDto: BouquetRenewalDto) {\n    return this.vtpassService.bouquetRenewal(bouquetChangeDto);\n  }\n\n  @Post('buy_startimes')\n  buyStartimes(@Body() buyStartimesDto: BuyStartimesDto) {\n    return this.vtpassService.buyStartimes(buyStartimesDto);\n  }\n\n  @Post('buy_showmax')\n  buyShowmax(@Body() buyShowmaxDto: BuyShowmaxDto) {\n    return this.vtpassService.buyShowmax(buyShowmaxDto);\n  }\n\n  @Post('buy_waec')\n  buyWAEC(@Body() buyWAECDto: BuyWAECDto) {\n    return this.vtpassService.buyWAEC(buyWAECDto);\n  }\n\n  @Post('buy_electricity')\n  buyElectricityDto(@Body() buyElectricityDto: BuyElectricityDto) {\n    return this.vtpassService.buyElectricity(buyElectricityDto);\n  }\n\n  @Post()\n  create(@Body() createVtpassDto: CreateVtpassDto) {\n    return this.vtpassService.create(createVtpassDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.vtpassService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.vtpassService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateVtpassDto: UpdateVtpassDto) {\n    return this.vtpassService.update(+id, updateVtpassDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.vtpassService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VtpassModule.html":{"url":"modules/VtpassModule.html","title":"module - VtpassModule","body":"\n                   \n\n\n\n\n    Modules\n    VtpassModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VtpassModule\n\n\n\ncluster_VtpassModule_providers\n\n\n\ncluster_VtpassModule_exports\n\n\n\n\nVtpassService \n\nVtpassService \n\n\n\nVtpassModule\n\nVtpassModule\n\nVtpassService  -->\n\nVtpassModule->VtpassService \n\n\n\n\n\nVtpassService\n\nVtpassService\n\nVtpassModule -->\n\nVtpassService->VtpassModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/vtpass/vtpass.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VtpassService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VtpassController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VtpassService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VtpassService } from './vtpass.service';\nimport { VtpassController } from './vtpass.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [VtpassController],\n  providers: [VtpassService],\n  exports: [VtpassService],\n})\nexport class VtpassModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VtpassService.html":{"url":"injectables/VtpassService.html","title":"injectable - VtpassService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VtpassService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/vtpass/vtpass.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                publicKey\n                            \n                            \n                                    Private\n                                requestHeaders\n                            \n                            \n                                    Private\n                                secretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bouquetChange\n                            \n                            \n                                    Async\n                                bouquetRenewal\n                            \n                            \n                                    Async\n                                buyAirtime\n                            \n                            \n                                    Async\n                                buyData\n                            \n                            \n                                    Async\n                                buyElectricity\n                            \n                            \n                                    Async\n                                buyShowmax\n                            \n                            \n                                    Async\n                                buyStartimes\n                            \n                            \n                                    Async\n                                buyWAEC\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getServiceIds\n                            \n                            \n                                    Async\n                                getVariationCodes\n                            \n                            \n                                    Async\n                                getVtpassServicesIdentifiers\n                            \n                            \n                                    Async\n                                queryTransactionStatus\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                verifySmartCardNumber\n                            \n                            \n                                    Async\n                                verifySmileEmail\n                            \n                            \n                                    Async\n                                verifySmilePhone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/vtpass/vtpass.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bouquetChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    bouquetChange(bouquetChangeDto: BouquetChangeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bouquetChangeDto\n                                    \n                                                BouquetChangeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bouquetRenewal\n                        \n                    \n                \n            \n            \n                \n                    \n                    bouquetRenewal(bouquetRenewalDto: BouquetRenewalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bouquetRenewalDto\n                                    \n                                                BouquetRenewalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyAirtime\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyAirtime(buyAirtimeDto: BuyAirtimeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyAirtimeDto\n                                    \n                                                BuyAirtimeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyData\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyData(buyDataDto: BuyDataDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyDataDto\n                                    \n                                                BuyDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyElectricity\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyElectricity(buyElectricityDto: BuyElectricityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyElectricityDto\n                                    \n                                                BuyElectricityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyShowmax\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyShowmax(buyShowmaxDto: BuyShowmaxDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyShowmaxDto\n                                    \n                                                BuyShowmaxDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyStartimes\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyStartimes(buyStartimesDto: BuyStartimesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyStartimesDto\n                                    \n                                                BuyStartimesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        buyWAEC\n                        \n                    \n                \n            \n            \n                \n                    \n                    buyWAEC(buyWAECDto: BuyWAECDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buyWAECDto\n                                    \n                                                BuyWAECDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createVtpassDto: CreateVtpassDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:331\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createVtpassDto\n                                    \n                                                CreateVtpassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:339\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getServiceIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getServiceIds(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVariationCodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVariationCodes(serviceID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVtpassServicesIdentifiers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVtpassServicesIdentifiers()\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise>>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        queryTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTransactionStatus(queryTransactionStatusDto: QueryTransactionStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryTransactionStatusDto\n                                    \n                                                QueryTransactionStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:347\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateVtpassDto: UpdateVtpassDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:343\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateVtpassDto\n                                    \n                                                UpdateVtpassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifySmartCardNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifySmartCardNumber(verifySmartCardDto: VerifySmartCardDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    verifySmartCardDto\n                                    \n                                                VerifySmartCardDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifySmileEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifySmileEmail(verifySmileEmailDto: VerifySmileEmailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    verifySmileEmailDto\n                                    \n                                                VerifySmileEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifySmilePhone\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifySmilePhone(verifySmilePhoneDto: VerifySmilePhoneDto)\n                \n            \n\n\n            \n                \n                    Defined in src/vtpass/vtpass.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    verifySmilePhoneDto\n                                    \n                                                VerifySmilePhoneDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vtpass/vtpass.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestHeaders\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/vtpass/vtpass.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/vtpass/vtpass.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { CreateVtpassDto } from './dto/create-vtpass.dto';\nimport { UpdateVtpassDto } from './dto/update-vtpass.dto';\nimport { HttpException, Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { AxiosResponse } from 'axios';\nimport { Observable, map, lastValueFrom, catchError, of } from 'rxjs';\nimport { ConfigService } from '@nestjs/config';\nimport { BuyAirtimeDto } from './dto/buy-airtime.dto';\nimport { BuyDataDto } from './dto/buy-data.dto';\nimport { QueryTransactionStatusDto } from './dto/query-transaction-status.dto';\nimport { VerifySmilePhoneDto } from './dto/verify-smile-phone.dto';\nimport { VerifySmileEmailDto } from './dto/verify-smile-email.dto';\nimport { VerifySmartCardDto } from './dto/verify-smart-card.dto';\nimport { BouquetChangeDto } from './dto/bouquet-change.dto';\nimport { BouquetRenewalDto } from './dto/bouquet-renewal.dto';\nimport { BuyStartimesDto } from './dto/buy-startimes.dto';\nimport { BuyShowmaxDto } from './dto/buy-showmax.dto';\nimport { BuyWAECDto } from './dto/buy-waec.dto';\nimport { BuyElectricityDto } from './dto/buy-electricity.dto';\nimport { getRequestId } from 'src/utils/random-generators';\n\n@Injectable()\nexport class VtpassService {\n  private secretKey: string;\n  private publicKey: string;\n  private requestHeaders;\n  constructor(\n    private readonly configService: ConfigService,\n    private httpService: HttpService,\n  ) {\n    this.secretKey = this.configService.get('VTPASS_SECRET_KEY');\n    this.publicKey = this.configService.get('VTPASS_PUBLIC_KEY');\n    const base64encodedData = Buffer.from(\n      this.configService.get('VTPASS_EMAIL') +\n        ':' +\n        this.configService.get('VTPASS_PASSWORD'),\n    ).toString('base64');\n    this.requestHeaders = {\n      headers: {\n        Authorization: 'Basic ' + base64encodedData,\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n  }\n\n  async buyAirtime(\n    buyAirtimeDto: BuyAirtimeDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        buyAirtimeDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //        console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async getVariationCodes(\n    serviceID: string,\n  ): Promise>> {\n    const response = this.httpService\n      .get(\n        `https://sandbox.vtpass.com/api/service-variations?serviceID=${serviceID}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(error.response.data, error.response.status);\n          // throw new HttpException(\n          //   error.response.data.message.error,\n          //   error.response.status,\n          // );\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n  async getServiceIds(\n    identifier: string,\n  ): Promise>> {\n    const response = this.httpService\n      .get(\n        `https://vtpass.com/api/services?identifier=${identifier}`,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          throw error;\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async getVtpassServicesIdentifiers(): Promise>\n  > {\n    const response = this.httpService\n      .get(\n        'https://sandbox.vtpass.com/api/service-categories',\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async buyData(\n    buyDataDto: BuyDataDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        buyDataDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async queryTransactionStatus(\n    queryTransactionStatusDto: QueryTransactionStatusDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/requery',\n        queryTransactionStatusDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async verifySmilePhone(\n    verifySmilePhoneDto: VerifySmilePhoneDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/merchant-verify/smile/phone',\n        verifySmilePhoneDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async verifySmileEmail(\n    verifySmileEmailDto: VerifySmileEmailDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        ' https://sandbox.vtpass.com/api/merchant-verify/smile/email',\n        verifySmileEmailDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async verifySmartCardNumber(\n    verifySmartCardDto: VerifySmartCardDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/merchant-verify',\n        verifySmartCardDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async bouquetChange(\n    bouquetChangeDto: BouquetChangeDto,\n  ): Promise>> {\n    //    return bouquetChangeDto;\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        bouquetChangeDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async bouquetRenewal(\n    bouquetRenewalDto: BouquetRenewalDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        bouquetRenewalDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async buyStartimes(\n    buyStartimesDto: BuyStartimesDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        buyStartimesDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async buyShowmax(\n    buyShowmaxDto: BuyShowmaxDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        buyShowmaxDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async buyWAEC(\n    buyWAECDto: BuyWAECDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        buyWAECDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  async buyElectricity(\n    buyElectricityDto: BuyElectricityDto,\n  ): Promise>> {\n    const response = this.httpService\n      .post(\n        'https://sandbox.vtpass.com/api/pay',\n        buyElectricityDto,\n        this.requestHeaders,\n      )\n      .pipe(\n        map((res) => res.data),\n        catchError((error) => {\n          //          console.log(error);\n          throw new HttpException(error.response.data, error.response.status);\n        }),\n      );\n    return await lastValueFrom(response);\n  }\n\n  create(createVtpassDto: CreateVtpassDto) {\n    return 'This action adds a new vtpass';\n  }\n\n  findAll() {\n    return `This action returns all vtpass`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} vtpass`;\n  }\n\n  update(id: number, updateVtpassDto: UpdateVtpassDto) {\n    return `This action updates a #${id} vtpass`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} vtpass`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Wallet.html":{"url":"entities/Wallet.html","title":"entity - Wallet","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Wallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/entities/wallet.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                airtimeActivities\n                            \n                            \n                                    Public\n                                balance\n                            \n                            \n                                currency\n                            \n                            \n                                    Public\n                                electricityBillActivities\n                            \n                            \n                                    Public\n                                mobileDataActivities\n                            \n                            \n                                    Public\n                                receivedTransfers\n                            \n                            \n                                    Public\n                                sentTransfers\n                            \n                            \n                                    Public\n                                tvSubscriptionActivities\n                            \n                            \n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                userId\n                            \n                            \n                                    Public\n                                withdrawals\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        airtimeActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AirtimeActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.wallet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'real', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currency\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        electricityBillActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElectricityBillActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.wallet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mobileDataActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MobileDataActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.wallet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        receivedTransfers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReceiveTransfer[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, transfers => transfers.receiveWallet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sentTransfers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SendTransfer[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, transfers => transfers.sendWallet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tvSubscriptionActivities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TvSubscriptionActivity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, activity => activity.wallet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WalletTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, customer => customer.wallets)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        withdrawals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Withdrawal[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, withdrawals => withdrawals.wallet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { AirtimeActivity } from 'src/activities/entities/airtime-activity.entity';\nimport { ElectricityBillActivity } from 'src/activities/entities/electricity-bill-activity.entity';\nimport { MobileDataActivity } from 'src/activities/entities/mobiledata-activity.entity';\nimport { TvSubscriptionActivity } from 'src/activities/entities/tv-subscription-activity.entity';\nimport { Currency } from 'src/common/types/currency.type';\nimport { EntityContainer } from 'src/common/types/entity';\nimport { WalletTypes } from 'src/common/types/wallet.type';\nimport { Withdrawal } from 'src/transactions/entities/withdrawal.entity';\nimport { ReceiveTransfer } from 'src/transfers/entities/receive-transfer.entity';\nimport { SendTransfer } from 'src/transfers/entities/send-transfer.entity';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Entity, Column, ManyToOne, OneToMany } from 'typeorm';\n\n@Entity()\nexport class Wallet extends EntityContainer {\n  @Column({ type: 'real', default: 0.0 })\n  public balance: number;\n\n  @Column()\n  userId: number;\n\n  @Column()\n  type: WalletTypes;\n\n  @Column()\n  currency: Currency;\n\n  @ManyToOne(() => Customer, (customer: Customer) => customer.wallets)\n  public user: Customer;\n\n  @OneToMany(() => Withdrawal, (withdrawals: Withdrawal) => withdrawals.wallet)\n  public withdrawals: Withdrawal[];\n\n  @OneToMany(\n    () => SendTransfer,\n    (transfers: SendTransfer) => transfers.sendWallet,\n  )\n  public sentTransfers: SendTransfer[];\n\n  @OneToMany(\n    () => ReceiveTransfer,\n    (transfers: ReceiveTransfer) => transfers.receiveWallet,\n  )\n  public receivedTransfers: ReceiveTransfer[];\n\n  @OneToMany(\n    () => TvSubscriptionActivity,\n    (activity: TvSubscriptionActivity) => activity.wallet,\n  )\n  public tvSubscriptionActivities: TvSubscriptionActivity[];\n\n  @OneToMany(\n    () => MobileDataActivity,\n    (activity: MobileDataActivity) => activity.wallet,\n  )\n  public mobileDataActivities: MobileDataActivity[];\n\n  @OneToMany(\n    () => ElectricityBillActivity,\n    (activity: ElectricityBillActivity) => activity.wallet,\n  )\n  public electricityBillActivities: ElectricityBillActivity[];\n\n  @OneToMany(\n    () => AirtimeActivity,\n    (activity: AirtimeActivity) => activity.wallet,\n  )\n  public airtimeActivities: AirtimeActivity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WalletController.html":{"url":"controllers/WalletController.html","title":"controller - WalletController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WalletController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/wallet.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                wallet\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getall\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getall\n                        \n                    \n                \n            \n            \n                \ngetall()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/wallet/wallet.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { WalletService } from './wallet.service';\nimport { CreateWalletDto } from './dto/create-wallet.dto';\nimport { UpdateWalletDto } from './dto/update-wallet.dto';\nimport { TransactionDto } from './dto/transaction.dto';\n\n@Controller('wallet')\nexport class WalletController {\n  constructor(private readonly walletService: WalletService) {}\n\n  // @Post('deposit')\n  // deposit(@Body() transactionDto: TransactionDto) {\n  //   return this.walletService.deposit(transactionDto);\n  // }\n\n  @Get()\n  getall() {\n    return this.walletService.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_providers\n\n\n\ncluster_WalletModule_exports\n\n\n\n\nWalletService \n\nWalletService \n\n\n\nWalletModule\n\nWalletModule\n\nWalletService  -->\n\nWalletModule->WalletService \n\n\n\n\n\nWalletService\n\nWalletService\n\nWalletModule -->\n\nWalletService->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WalletService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WalletController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WalletService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { WalletService } from './wallet.service';\nimport { WalletController } from './wallet.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from '../user/user.module';\nimport { WalletRepository } from './repositories/wallet.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([WalletRepository])],\n  controllers: [WalletController],\n  providers: [WalletService],\n  exports: [WalletService],\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletRepository.html":{"url":"classes/WalletRepository.html","title":"class - WalletRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/repositories/wallet.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserEmail\n                        \n                    \n                \n            \n            \n                \nfindByUserEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/wallet/repositories/wallet.repository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Wallet } from '../entities/wallet.entity';\n\n@EntityRepository(Wallet)\nexport class WalletRepository extends Repository {\n  findByUserEmail(email: string) {\n    return this.findOne({\n      where: {\n        user: {\n          email: email,\n        },\n      },\n      relations: ['user'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getTotalUsersNaira\n                            \n                            \n                                    Async\n                                getWalletByOwnerId\n                            \n                            \n                                    Async\n                                removeMoney\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(walletRepository: WalletRepository)\n                    \n                \n                        \n                            \n                                Defined in src/wallet/wallet.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletRepository\n                                                  \n                                                        \n                                                                        WalletRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createWalletDto: CreateWalletDto)\n                \n            \n\n\n            \n                \n                    Defined in src/wallet/wallet.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWalletDto\n                                    \n                                                CreateWalletDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find()\n                \n            \n\n\n            \n                \n                    Defined in src/wallet/wallet.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/wallet/wallet.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTotalUsersNaira\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTotalUsersNaira()\n                \n            \n\n\n            \n                \n                    Defined in src/wallet/wallet.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getWalletByOwnerId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWalletByOwnerId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/wallet/wallet.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeMoney\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMoney(transactionDto: TransactionDto, queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/wallet/wallet.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionDto\n                                    \n                                                TransactionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { number } from 'joi';\nimport { ReturnTypeContainer } from 'src/common/containers/Container.entity';\nimport { WALLET_TYPES } from 'src/common/types/wallet.type';\nimport { Transaction } from 'src/transactions/entities/transaction.entity';\nimport { UserService } from 'src/user/user.service';\nimport { QueryRunner, Repository } from 'typeorm';\nimport { CreateWalletDto } from './dto/create-wallet.dto';\nimport { TransactionDto } from './dto/transaction.dto';\nimport { UpdateWalletDto } from './dto/update-wallet.dto';\nimport { Wallet } from './entities/wallet.entity';\nimport { WalletRepository } from './repositories/wallet.repository';\n\n@Injectable()\nexport class WalletService {\n  constructor(\n    @InjectRepository(WalletRepository)\n    private walletRepository: WalletRepository,\n  ) {}\n  async create(createWalletDto: CreateWalletDto) {\n    try {\n      const newWallet = await this.walletRepository.create(createWalletDto);\n\n      await this.walletRepository.save(newWallet);\n\n      return newWallet;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // async deposit(\n  //   transactionDto: TransactionDto,\n  // ): Promise> {\n  //   const { email, amount } = transactionDto;\n  //   // return {\n  //   //   message: 'hello',\n  //   //   data: transactionDto,\n  //   // };\n\n  //   try {\n  //     const { id: walletId } = await this.walletRepository.findByUserEmail(\n  //       email,\n  //     );\n  //     await this.walletRepository.increment(\n  //       { id: walletId },\n  //       'balance',\n  //       amount,\n  //     );\n  //     const wallet = await this.walletRepository.findOne({ id: walletId });\n  //     return {\n  //       message: 'success',\n  //       data: { balance: wallet.balance },\n  //     };\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // }\n\n  async removeMoney(\n    transactionDto: TransactionDto,\n    queryRunner: QueryRunner,\n  ): Promise> {\n    const { walletId, amount } = transactionDto;\n    try {\n      // const { id: walletId } = await this.walletRepository.findByUserEmail(\n      //   email,\n      // );\n      // const user = await this.userService.findByEmail(email);\n      //   const walletId = user.data.wallet.id;\n      // await this.walletRepository.decrement(\n      //   { id: walletId },\n      //   'balance',\n      //   amount,\n      // );\n      await queryRunner.manager.decrement(\n        Wallet,\n        { id: walletId },\n        'balance',\n        amount,\n      );\n      const wallet = await queryRunner.manager.findOne(Wallet, {\n        id: walletId,\n      });\n      return {\n        message: 'success',\n        data: { balance: wallet.balance },\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async find() {\n    return await this.walletRepository.find();\n  }\n\n  async findById(id: number) {\n    return await this.walletRepository.findOne(id);\n  }\n\n  async getWalletByOwnerId(id: number) {\n    try {\n      return await this.walletRepository.findOne({\n        relations: ['owner'],\n        where: {\n          owner: {\n            id: id,\n          },\n        },\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getTotalUsersNaira() {\n    try {\n      let { sum } = await this.walletRepository\n        .createQueryBuilder('wallet')\n        .select('SUM(wallet.balance)', 'sum')\n        .where('wallet.type = :type', { type: WALLET_TYPES.NAIRA })\n        .getRawOne();\n\n      if (!sum) {\n        sum = 0;\n      }\n\n      return {\n        totalUsersNaira: sum,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Withdrawal.html":{"url":"entities/Withdrawal.html","title":"entity - Withdrawal","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Withdrawal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/entities/withdrawal.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                wallet\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransactionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/withdrawal.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Customer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, customer => customer.withdrawals)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/withdrawal.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, wallet => wallet.withdrawals)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transactions/entities/withdrawal.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  TRANSACTION,\n  TransactionType,\n} from 'src/common/types/transaction.type';\nimport { Customer } from 'src/user/entities/customer.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { Transaction } from './transaction.entity';\n\n@Entity()\nexport class Withdrawal extends Transaction {\n  @ManyToOne(() => Customer, (customer: Customer) => customer.withdrawals)\n  user: Customer;\n\n  @ManyToOne(() => Wallet, (wallet: Wallet) => wallet.withdrawals)\n  wallet: Wallet;\n\n  @Column({ default: TRANSACTION.WITHDRAWAL })\n  type: TransactionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WithdrawalRepository.html":{"url":"classes/WithdrawalRepository.html","title":"class - WithdrawalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WithdrawalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/repositories/withdrawal.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByReference\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByReference\n                        \n                    \n                \n            \n            \n                \nfindByReference(reference: string)\n                \n            \n\n\n            \n                \n                    Defined in src/transactions/repositories/withdrawal.repository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Withdrawal } from '../entities/withdrawal.entity';\n\n@EntityRepository(Withdrawal)\nexport class WithdrawalRepository extends Repository {\n  findByReference(reference: string) {\n    return this.findOne({ reference });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.4.3\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @nestjs/axios : ^0.0.4\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/terminus : ^8.0.4\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            @sendgrid/mail : ^7.6.2\n        \n            axios : ^0.25.0\n        \n            bcrypt : ^5.0.1\n        \n            cache-manager : ^3.6.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            flutterwave-node-v3 : ^1.0.9\n        \n            joi : ^17.5.0\n        \n            node-forge : ^1.2.1\n        \n            nodemailer : ^6.7.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            twilio : ^3.73.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCOUNT_TYPES   (src/.../account.type.ts)\n                        \n                        \n                            ACTIVITIES   (src/.../activities.type.ts)\n                        \n                        \n                            ADMIN_LEVELS   (src/.../roles.type.ts)\n                        \n                        \n                            ANNOUNCEMENT_STATUS   (src/.../announcement.type.ts)\n                        \n                        \n                            BANK_SERVICES   (src/.../service.type.ts)\n                        \n                        \n                            CURRENCY   (src/.../currency.type.ts)\n                        \n                        \n                            KYC_STATUS   (src/.../status.type.ts)\n                        \n                        \n                            SERVICE_STATUS   (src/.../status.type.ts)\n                        \n                        \n                            Services   (src/.../service.type.ts)\n                        \n                        \n                            ServicesSettings   (src/.../settings.type.ts)\n                        \n                        \n                            TRANSACTION   (src/.../transaction.type.ts)\n                        \n                        \n                            TRANSACTION_MODES   (src/.../transaction.type.ts)\n                        \n                        \n                            TRANSACTION_STATUS   (src/.../status.type.ts)\n                        \n                        \n                            TRANSFER_TYPES   (src/.../transfer.type.ts)\n                        \n                        \n                            USER_ACTIONS   (src/.../permissions.type.ts)\n                        \n                        \n                            USER_LEVELS   (src/.../roles.type.ts)\n                        \n                        \n                            USER_ROLES   (src/.../roles.type.ts)\n                        \n                        \n                            WALLET_TYPES   (src/.../wallet.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/types/account.type.ts\n    \n        \n            \n                \n                    \n                        \n                        ACCOUNT_TYPES\n                    \n                \n                        \n                            \n                                 BANK_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : bank_account\n                            \n                        \n                        \n                            \n                                 VIRTUAL_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : virtual_account\n                            \n                        \n            \n        \n\n    src/common/types/activities.type.ts\n    \n        \n            \n                \n                    \n                        \n                        ACTIVITIES\n                    \n                \n                        \n                            \n                                 AIRTIME\n                            \n                        \n                        \n                            \n                                Value : airtime\n                            \n                        \n                        \n                            \n                                 TV_SUBSCRIPTION\n                            \n                        \n                        \n                            \n                                Value : tv_subscription\n                            \n                        \n                        \n                            \n                                 ELECTRICITY\n                            \n                        \n                        \n                            \n                                Value : electricity\n                            \n                        \n                        \n                            \n                                 MOBILE_DATA\n                            \n                        \n                        \n                            \n                                Value : mobile_data\n                            \n                        \n            \n        \n\n    src/common/types/roles.type.ts\n    \n        \n            \n                \n                    \n                        \n                        ADMIN_LEVELS\n                    \n                \n                        \n                            \n                                 ZERO\n                            \n                        \n                        \n                            \n                                Value : level_0\n                            \n                        \n                        \n                            \n                                 ONE\n                            \n                        \n                        \n                            \n                                Value : level_1\n                            \n                        \n                        \n                            \n                                 TWO\n                            \n                        \n                        \n                            \n                                Value : level_2\n                            \n                        \n                        \n                            \n                                 SUSPENDED\n                            \n                        \n                        \n                            \n                                Value : suspended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        USER_LEVELS\n                    \n                \n                        \n                            \n                                 ZERO\n                            \n                        \n                        \n                            \n                                Value : level_0\n                            \n                        \n                        \n                            \n                                 ONE\n                            \n                        \n                        \n                            \n                                Value : level_1\n                            \n                        \n                        \n                            \n                                 TWO\n                            \n                        \n                        \n                            \n                                Value : level_2\n                            \n                        \n                        \n                            \n                                 SUSPENDED\n                            \n                        \n                        \n                            \n                                Value : suspended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        USER_ROLES\n                    \n                \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : customer\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    src/common/types/announcement.type.ts\n    \n        \n            \n                \n                    \n                        \n                        ANNOUNCEMENT_STATUS\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/common/types/service.type.ts\n    \n        \n            \n                \n                    \n                        \n                        BANK_SERVICES\n                    \n                \n                        \n                            \n                                 MONNIFY\n                            \n                        \n                        \n                            \n                                Value : monnify\n                            \n                        \n                        \n                            \n                                 PAYSTACK\n                            \n                        \n                        \n                            \n                                Value : paystack\n                            \n                        \n                        \n                            \n                                 FLUTTERWAVE\n                            \n                        \n                        \n                            \n                                Value : flutterwave\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Services\n                    \n                \n                        \n                            \n                                 FLUTTERWAVE\n                            \n                        \n                        \n                            \n                                Value : flutterwave\n                            \n                        \n                        \n                            \n                                 TWILIO\n                            \n                        \n                        \n                            \n                                Value : twilio\n                            \n                        \n                        \n                            \n                                 PAYSTACK\n                            \n                        \n                        \n                            \n                                Value : paystack\n                            \n                        \n                        \n                            \n                                 VTPASS\n                            \n                        \n                        \n                            \n                                Value : vtpass\n                            \n                        \n                        \n                            \n                                 MONNIFY\n                            \n                        \n                        \n                            \n                                Value : monnify\n                            \n                        \n            \n        \n\n    src/common/types/currency.type.ts\n    \n        \n            \n                \n                    \n                        \n                        CURRENCY\n                    \n                \n                        \n                            \n                                 NAIRA\n                            \n                        \n                        \n                            \n                                Value : NGN\n                            \n                        \n            \n        \n\n    src/common/types/status.type.ts\n    \n        \n            \n                \n                    \n                        \n                        KYC_STATUS\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : accepted\n                            \n                        \n                        \n                            \n                                 DECLINED\n                            \n                        \n                        \n                            \n                                Value : declined\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SERVICE_STATUS\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 DORMANT\n                            \n                        \n                        \n                            \n                                Value : dormant\n                            \n                        \n                        \n                            \n                                 DEPRECATED\n                            \n                        \n                        \n                            \n                                Value : deprecated\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TRANSACTION_STATUS\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 QUEUED\n                            \n                        \n                        \n                            \n                                Value : QUEUED\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 PENDING_AUTH\n                            \n                        \n                        \n                            \n                                Value : PENDING_AUTH\n                            \n                        \n                        \n                            \n                                 REVERSED\n                            \n                        \n                        \n                            \n                                Value : REVERSED\n                            \n                        \n                        \n                            \n                                 PENDING_REQUERY\n                            \n                        \n                        \n                            \n                                Value : PENDING_REQUERY\n                            \n                        \n            \n        \n\n    src/common/types/settings.type.ts\n    \n        \n            \n                \n                    \n                        \n                        ServicesSettings\n                    \n                \n                        \n                            \n                                 BANK_SERVICE\n                            \n                        \n                        \n                            \n                                Value : BANK_SERVICE\n                            \n                        \n                        \n                            \n                                 TRANSACTIONS_SERVICE\n                            \n                        \n                        \n                            \n                                Value : TRANSACTIONS_SERVICE\n                            \n                        \n                        \n                            \n                                 DATA_SERVICE\n                            \n                        \n                        \n                            \n                                Value : DATA_SERVICE\n                            \n                        \n                        \n                            \n                                 INTERNET_SERVICE\n                            \n                        \n                        \n                            \n                                Value : INTERNET_SERVICE\n                            \n                        \n                        \n                            \n                                 AIRTIME_SERVICE\n                            \n                        \n                        \n                            \n                                Value : AIRTIME_SERVICE\n                            \n                        \n                        \n                            \n                                 ELECTRICITY_SERVICE\n                            \n                        \n                        \n                            \n                                Value : ELECTRICITY_SERVICE\n                            \n                        \n                        \n                            \n                                 CABLETV_SERVICE\n                            \n                        \n                        \n                            \n                                Value : CABLETV_SERVICE\n                            \n                        \n                        \n                            \n                                 EDUCATION_SERVICE\n                            \n                        \n                        \n                            \n                                Value : EDUCATION_SERVICE\n                            \n                        \n            \n        \n\n    src/common/types/transaction.type.ts\n    \n        \n            \n                \n                    \n                        \n                        TRANSACTION\n                    \n                \n                        \n                            \n                                 DEPOSIT\n                            \n                        \n                        \n                            \n                                Value : deposit\n                            \n                        \n                        \n                            \n                                 WITHDRAWAL\n                            \n                        \n                        \n                            \n                                Value : withdrawal\n                            \n                        \n                        \n                            \n                                 DEBIT\n                            \n                        \n                        \n                            \n                                Value : debit\n                            \n                        \n                        \n                            \n                                 CREDIT\n                            \n                        \n                        \n                            \n                                Value : credit\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TRANSACTION_MODES\n                    \n                \n                        \n                            \n                                 BANK_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : Bank Account\n                            \n                        \n            \n        \n\n    src/common/types/transfer.type.ts\n    \n        \n            \n                \n                    \n                        \n                        TRANSFER_TYPES\n                    \n                \n                        \n                            \n                                 SEND\n                            \n                        \n                        \n                            \n                                Value : send\n                            \n                        \n                        \n                            \n                                 RECEIVE\n                            \n                        \n                        \n                            \n                                Value : receive\n                            \n                        \n                        \n                            \n                                 REQUEST\n                            \n                        \n                        \n                            \n                                Value : request\n                            \n                        \n            \n        \n\n    src/common/types/permissions.type.ts\n    \n        \n            \n                \n                    \n                        \n                        USER_ACTIONS\n                    \n                \n                        \n                            \n                                 MANAGE\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n            \n        \n\n    src/common/types/wallet.type.ts\n    \n        \n            \n                \n                    \n                        \n                        WALLET_TYPES\n                    \n                \n                        \n                            \n                                 NAIRA\n                            \n                        \n                        \n                            \n                                Value : naira\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getLogLevels   (src/.../get-log-levels.ts)\n                        \n                        \n                            setTimeZone   (src/.../random-generators.ts)\n                        \n                        \n                            yyyymmdd   (src/.../random-generators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/get-log-levels.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLogLevels\n                        \n                    \n                \n            \n            \n                \ngetLogLevels(isProduction: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isProduction\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LogLevel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/random-generators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setTimeZone\n                        \n                    \n                \n            \n            \n                \nsetTimeZone(date)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yyyymmdd\n                        \n                    \n                \n            \n            \n                \nyyyymmdd()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncreate your branch based on issue title\nrun npm install \ncreate your env with the correct variables\nrun docker compose up -d\nopen pgadmin port in browser and create your database based on the env variables\nif you install any packages \nrun docker compose up -d -V --build\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AbilityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ActivitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AnnouncementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BankModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FlutterwaveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MerchantApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MonnifyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NodemailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaystackModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReferralModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeedingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SmsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransfersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TwillioModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VtpassModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AbilityModule\n\n\n\ncluster_AbilityModule_exports\n\n\n\ncluster_AbilityModule_providers\n\n\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_ActivitiesModule\n\n\n\ncluster_ActivitiesModule_imports\n\n\n\ncluster_ActivitiesModule_providers\n\n\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AnnouncementModule\n\n\n\ncluster_AnnouncementModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BankModule\n\n\n\ncluster_BankModule_exports\n\n\n\ncluster_BankModule_providers\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_FlutterwaveModule\n\n\n\ncluster_FlutterwaveModule_exports\n\n\n\ncluster_FlutterwaveModule_providers\n\n\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_MerchantApiModule\n\n\n\ncluster_MerchantApiModule_providers\n\n\n\ncluster_MonnifyModule\n\n\n\ncluster_MonnifyModule_exports\n\n\n\ncluster_MonnifyModule_providers\n\n\n\ncluster_NodemailerModule\n\n\n\ncluster_NodemailerModule_exports\n\n\n\ncluster_NodemailerModule_providers\n\n\n\ncluster_PaystackModule\n\n\n\ncluster_PaystackModule_exports\n\n\n\ncluster_PaystackModule_providers\n\n\n\ncluster_ReferralModule\n\n\n\ncluster_ReferralModule_exports\n\n\n\ncluster_ReferralModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_SmsModule\n\n\n\ncluster_SmsModule_exports\n\n\n\ncluster_SmsModule_providers\n\n\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_exports\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_TransfersModule\n\n\n\ncluster_TransfersModule_providers\n\n\n\ncluster_TwillioModule\n\n\n\ncluster_TwillioModule_exports\n\n\n\ncluster_TwillioModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_VtpassModule\n\n\n\ncluster_VtpassModule_exports\n\n\n\ncluster_VtpassModule_providers\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_exports\n\n\n\ncluster_WalletModule_providers\n\n\n\n\nAbilityFactory \n\nAbilityFactory \n\n\n\nAbilityModule\n\nAbilityModule\n\nAbilityFactory  -->\n\nAbilityModule->AbilityFactory \n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAbilityModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbilityModule->AppModule\n\n\n\n\n\nAbilityFactory\n\nAbilityFactory\n\nAbilityModule -->\n\nAbilityFactory->AbilityModule\n\n\n\n\n\nFlutterwaveModule\n\nFlutterwaveModule\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nFlutterwaveModule->AccountModule\n\n\n\n\n\nBankModule\n\nBankModule\n\nBankModule -->\n\nFlutterwaveModule->BankModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsModule -->\n\nFlutterwaveModule->TransactionsModule\n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nFlutterwaveModule->AdminModule\n\n\n\nAppModule -->\n\nFlutterwaveModule->AppModule\n\n\n\n\n\nFlutterwaveService \n\nFlutterwaveService \n\nFlutterwaveService  -->\n\nFlutterwaveModule->FlutterwaveService \n\n\n\n\n\nMonnifyModule\n\nMonnifyModule\n\nAccountModule -->\n\nMonnifyModule->AccountModule\n\n\n\nBankModule -->\n\nMonnifyModule->BankModule\n\n\n\nTransactionsModule -->\n\nMonnifyModule->TransactionsModule\n\n\n\nAppModule -->\n\nMonnifyModule->AppModule\n\n\n\n\n\nMonnifyService \n\nMonnifyService \n\nMonnifyService  -->\n\nMonnifyModule->MonnifyService \n\n\n\nAccountModule -->\n\nUserModule->AccountModule\n\n\n\nAdminModule -->\n\nUserModule->AdminModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nTransfersModule\n\nTransfersModule\n\nTransfersModule -->\n\nUserModule->TransfersModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAccountService \n\nAccountService \n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nVtpassModule\n\nVtpassModule\n\n\n\nActivitiesModule\n\nActivitiesModule\n\nActivitiesModule -->\n\nVtpassModule->ActivitiesModule\n\n\n\nAppModule -->\n\nVtpassModule->AppModule\n\n\n\n\n\nVtpassService \n\nVtpassService \n\nVtpassService  -->\n\nVtpassModule->VtpassService \n\n\n\n\n\nWalletModule\n\nWalletModule\n\nActivitiesModule -->\n\nWalletModule->ActivitiesModule\n\n\n\nTransactionsModule -->\n\nWalletModule->TransactionsModule\n\n\n\nAdminModule -->\n\nWalletModule->AdminModule\n\n\n\nTransfersModule -->\n\nWalletModule->TransfersModule\n\n\n\nAppModule -->\n\nWalletModule->AppModule\n\n\n\n\n\nWalletService \n\nWalletService \n\nWalletService  -->\n\nWalletModule->WalletService \n\n\n\nAppModule -->\n\nActivitiesModule->AppModule\n\n\n\n\n\nActivitiesService\n\nActivitiesService\n\nActivitiesModule -->\n\nActivitiesService->ActivitiesModule\n\n\n\nAdminModule -->\n\nBankModule->AdminModule\n\n\n\nAppModule -->\n\nBankModule->AppModule\n\n\n\n\n\nBankService \n\nBankService \n\nBankService  -->\n\nBankModule->BankService \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nBankModule -->\n\nSettingsModule->BankModule\n\n\n\nTransactionsModule -->\n\nSettingsModule->TransactionsModule\n\n\n\nAdminModule -->\n\nSettingsModule->AdminModule\n\n\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\nUserModule -->\n\nTransactionsModule->UserModule\n\n\n\nAdminModule -->\n\nTransactionsModule->AdminModule\n\n\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nTransactionsService \n\nTransactionsService \n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAnnouncementService\n\nAnnouncementService\n\n\n\nAnnouncementModule\n\nAnnouncementModule\n\nAnnouncementModule -->\n\nAnnouncementService->AnnouncementModule\n\n\n\nAppModule -->\n\nAnnouncementModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nUserModule -->\n\nEmailModule->UserModule\n\n\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nAppModule -->\n\nLogModule->AppModule\n\n\n\n\n\nCustomLogger \n\nCustomLogger \n\nCustomLogger  -->\n\nLogModule->CustomLogger \n\n\n\n\n\nMerchantApiModule\n\nMerchantApiModule\n\nAppModule -->\n\nMerchantApiModule->AppModule\n\n\n\n\n\nNodemailerModule\n\nNodemailerModule\n\nEmailModule -->\n\nNodemailerModule->EmailModule\n\n\n\nAppModule -->\n\nNodemailerModule->AppModule\n\n\n\n\n\nNodemailerService \n\nNodemailerService \n\nNodemailerService  -->\n\nNodemailerModule->NodemailerService \n\n\n\n\n\nPaystackModule\n\nPaystackModule\n\nTransactionsModule -->\n\nPaystackModule->TransactionsModule\n\n\n\nAppModule -->\n\nPaystackModule->AppModule\n\n\n\n\n\nPaystackService \n\nPaystackService \n\nPaystackService  -->\n\nPaystackModule->PaystackService \n\n\n\n\n\nReferralModule\n\nReferralModule\n\nUserModule -->\n\nReferralModule->UserModule\n\n\n\nAppModule -->\n\nReferralModule->AppModule\n\n\n\n\n\nReferralService \n\nReferralService \n\nReferralService  -->\n\nReferralModule->ReferralService \n\n\n\n\n\nSeedingModule\n\nSeedingModule\n\nAppModule -->\n\nSeedingModule->AppModule\n\n\n\n\n\nSmsModule\n\nSmsModule\n\nUserModule -->\n\nSmsModule->UserModule\n\n\n\nAppModule -->\n\nSmsModule->AppModule\n\n\n\n\n\nSmsService \n\nSmsService \n\nSmsService  -->\n\nSmsModule->SmsService \n\n\n\nAppModule -->\n\nTransfersModule->AppModule\n\n\n\n\n\nTwillioModule\n\nTwillioModule\n\nSmsModule -->\n\nTwillioModule->SmsModule\n\n\n\nAppModule -->\n\nTwillioModule->AppModule\n\n\n\n\n\nTwillioService \n\nTwillioService \n\nTwillioService  -->\n\nTwillioModule->TwillioService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nBankService\n\nBankService\n\nBankModule -->\n\nBankService->BankModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\nFlutterwaveService\n\nFlutterwaveService\n\nFlutterwaveModule -->\n\nFlutterwaveService->FlutterwaveModule\n\n\n\n\n\nCustomLogger\n\nCustomLogger\n\nLogModule -->\n\nCustomLogger->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\nMerchantApiService\n\nMerchantApiService\n\nMerchantApiModule -->\n\nMerchantApiService->MerchantApiModule\n\n\n\n\n\nMonnifyService\n\nMonnifyService\n\nMonnifyModule -->\n\nMonnifyService->MonnifyModule\n\n\n\n\n\nNodemailerService\n\nNodemailerService\n\nNodemailerModule -->\n\nNodemailerService->NodemailerModule\n\n\n\n\n\nPaystackService\n\nPaystackService\n\nPaystackModule -->\n\nPaystackService->PaystackModule\n\n\n\n\n\nReferralService\n\nReferralService\n\nReferralModule -->\n\nReferralService->ReferralModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSmsService\n\nSmsService\n\nSmsModule -->\n\nSmsService->SmsModule\n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\nTransfersService\n\nTransfersService\n\nTransfersModule -->\n\nTransfersService->TransfersModule\n\n\n\n\n\nTwillioService\n\nTwillioService\n\nTwillioModule -->\n\nTwillioService->TwillioModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nVtpassService\n\nVtpassService\n\nVtpassModule -->\n\nVtpassService->VtpassModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nWalletModule -->\n\nWalletService->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        27 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    29 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    153 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountTypes   (src/.../account.type.ts)\n                        \n                        \n                            ActivitiesType   (src/.../activities.type.ts)\n                        \n                        \n                            AdminLevels   (src/.../roles.type.ts)\n                        \n                        \n                            AnnouncementStatus   (src/.../announcement.type.ts)\n                        \n                        \n                            AppAbility   (src/.../ability.factory.ts)\n                        \n                        \n                            BankServices   (src/.../service.type.ts)\n                        \n                        \n                            BillCategories   (src/.../bills-categories.ts)\n                        \n                        \n                            Currency   (src/.../currency.type.ts)\n                        \n                        \n                            InferredTypes   (src/.../ability.factory.ts)\n                        \n                        \n                            KycStatus   (src/.../status.type.ts)\n                        \n                        \n                            ServiceSettingsType   (src/.../settings.type.ts)\n                        \n                        \n                            ServiceStatus   (src/.../status.type.ts)\n                        \n                        \n                            ServicesType   (src/.../service.type.ts)\n                        \n                        \n                            Subjects   (src/.../ability.factory.ts)\n                        \n                        \n                            TransactionModes   (src/.../transaction.type.ts)\n                        \n                        \n                            TransactionStatus   (src/.../status.type.ts)\n                        \n                        \n                            TransactionType   (src/.../transaction.type.ts)\n                        \n                        \n                            TransferTypes   (src/.../transfer.type.ts)\n                        \n                        \n                            UserActions   (src/.../permissions.type.ts)\n                        \n                        \n                            UserLevels   (src/.../roles.type.ts)\n                        \n                        \n                            UserRoles   (src/.../roles.type.ts)\n                        \n                        \n                            WalletTypes   (src/.../wallet.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/types/account.type.ts\n    \n    \n        \n            \n                \n                    \n                    AccountTypes\n                \n            \n            \n                \n                            ACCOUNT_TYPES\n\n                \n            \n        \n    \n    src/common/types/activities.type.ts\n    \n    \n        \n            \n                \n                    \n                    ActivitiesType\n                \n            \n            \n                \n                            ACTIVITIES\n\n                \n            \n        \n    \n    src/common/types/roles.type.ts\n    \n    \n        \n            \n                \n                    \n                    AdminLevels\n                \n            \n            \n                \n                            ADMIN_LEVELS\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserLevels\n                \n            \n            \n                \n                            USER_LEVELS\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserRoles\n                \n            \n            \n                \n                            USER_ROLES\n\n                \n            \n        \n    \n    src/common/types/announcement.type.ts\n    \n    \n        \n            \n                \n                    \n                    AnnouncementStatus\n                \n            \n            \n                \n                            ANNOUNCEMENT_STATUS\n\n                \n            \n        \n    \n    src/ability/ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InferredTypes\n                \n            \n            \n                \n                         |  |  |  |  | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                        InferSubjects | \"all\"\n\n                \n            \n        \n    \n    src/common/types/service.type.ts\n    \n    \n        \n            \n                \n                    \n                    BankServices\n                \n            \n            \n                \n                            BANK_SERVICES\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServicesType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/flutterwave/interfaces/bills-categories.ts\n    \n    \n        \n            \n                \n                    \n                    BillCategories\n                \n            \n            \n                \n                        \"airtime\" | \"data_bundle\" | \"power\" | \"internet\" | \"cables\"\n\n                \n            \n        \n    \n    src/common/types/currency.type.ts\n    \n    \n        \n            \n                \n                    \n                    Currency\n                \n            \n            \n                \n                            CURRENCY\n\n                \n            \n        \n    \n    src/common/types/status.type.ts\n    \n    \n        \n            \n                \n                    \n                    KycStatus\n                \n            \n            \n                \n                            KYC_STATUS\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceStatus\n                \n            \n            \n                \n                            SERVICE_STATUS\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TransactionStatus\n                \n            \n            \n                \n                            TRANSACTION_STATUS\n\n                \n            \n        \n    \n    src/common/types/settings.type.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceSettingsType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/types/transaction.type.ts\n    \n    \n        \n            \n                \n                    \n                    TransactionModes\n                \n            \n            \n                \n                            TRANSACTION_MODES\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TransactionType\n                \n            \n            \n                \n                            TRANSACTION\n\n                \n            \n        \n    \n    src/common/types/transfer.type.ts\n    \n    \n        \n            \n                \n                    \n                    TransferTypes\n                \n            \n            \n                \n                            TRANSFER_TYPES\n\n                \n            \n        \n    \n    src/common/types/permissions.type.ts\n    \n    \n        \n            \n                \n                    \n                    UserActions\n                \n            \n            \n                \n                            USER_ACTIONS\n\n                \n            \n        \n    \n    src/common/types/wallet.type.ts\n    \n    \n        \n            \n                \n                    \n                    WalletTypes\n                \n            \n            \n                \n                            WALLET_TYPES\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiSuccessResponse   (src/.../apiSuccessresponse.ts)\n                        \n                        \n                            CHECK_ABILITY   (src/.../abilities.decorator.ts)\n                        \n                        \n                            CheckAbilities   (src/.../abilities.decorator.ts)\n                        \n                        \n                            config   (src/.../ormconfig.ts)\n                        \n                        \n                            generateVerificationCode   (src/.../random-generators.ts)\n                        \n                        \n                            getRequestId   (src/.../random-generators.ts)\n                        \n                        \n                            getTransactionReference   (src/.../random-generators.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../jwt-auth-guard.decorator.ts)\n                        \n                        \n                            mockedConfigService   (src/.../config.service.ts)\n                        \n                        \n                            mockedJwtService   (src/.../jwt.service.ts)\n                        \n                        \n                            PinGaurd   (src/.../pin.gaurd.ts)\n                        \n                        \n                            Public   (src/.../jwt-auth-guard.decorator.ts)\n                        \n                        \n                            removeKeyAndPropertyFromObject   (src/.../removeKeyAndPropertyFromObject.ts)\n                        \n                        \n                            runMigrations   (src/.../main.ts)\n                        \n                        \n                               (src/.../account.service.ts)\n                        \n                        \n                               (src/.../bank.service.ts)\n                        \n                        \n                               (src/.../ability.factory.ts)\n                        \n                        \n                               (src/.../announcement.controller.ts)\n                        \n                        \n                               (src/.../announcement.service.ts)\n                        \n                        \n                               (src/.../abilities.decorator.ts)\n                        \n                        \n                               (src/.../transactions.service.ts)\n                        \n                        \n                               (src/.../transactions.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/apiSuccessresponse.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiSuccessResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (data: T): ApiSuccessResponse => {\n  return {\n    message: 'Success',\n    data,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/ability/abilities.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECK_ABILITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'check_ability'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckAbilities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...requirements: RequiredRule[]) =>\n  SetMetadata(CHECK_ABILITY, requirements)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : USER_ACTIONS\n                    \n                \n\n\n        \n    \n\n    src/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectionOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: process.env.POSTGRES_DB_HOST,\n  port: Number(process.env.POSTGRES_DB_PORT),\n  username: process.env.POSTGRES_USER,\n  password: process.env.POSTGRES_PASSWORD,\n  database: process.env.POSTGRES_DB,\n  entities: [__dirname + '/**/*.entity{.ts,.js}'],\n\n  synchronize: false,\n\n  migrationsRun: true,\n  logging: true,\n  logger: 'file',\n\n  migrations: ['dist/migrations/**/*{.ts,.js}'],\n  cli: {\n    migrationsDir: 'src/migrations',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/random-generators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateVerificationCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const hash = await crypto.randomBytes(4).toString('hex').substring(0, 6);\n  return hash;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRequestId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const date = yyyymmdd();\n  //  return date;\n  const hash = await crypto.randomBytes(4).toString('hex').substring(0, 9);\n  return `${date}${hash}`;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransactionReference\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const hash = await crypto.randomBytes(4).toString('hex').substring(0, 12);\n  return `TM-${hash}`;\n}\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/jwt-auth-guard.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/utils/mocks/config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  get(key: string) {\n    switch (key) {\n      case 'JWT_EXPIRATION':\n        return '12000';\n      case 'JWT_SECRET':\n        return 'secret';\n    }\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/mocks/jwt.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedJwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  sign: () => '',\n}\n                    \n                \n\n\n        \n    \n\n    src/common/gaurds/pin.gaurd.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PinGaurd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Type => {\n  class PinGaurdMixin extends JwtAuthGaurd {\n    async canActivate(context: ExecutionContext) {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const userPin = request.user.pin;\n\n      const bodyPin = request.body.pin;\n\n      return userPin === bodyPin;\n    }\n  }\n\n  return mixin(PinGaurdMixin);\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/removeKeyAndPropertyFromObject.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeKeyAndPropertyFromObject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (object: any, keys: string[]) => {\n  const newObject = { ...object };\n  keys.forEach((key) => {\n    delete newObject[key];\n  });\n  return newObject;\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        runMigrations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return new Promise((resolve, reject) => {\n    exec('npm run typeorm:migrate && npm run typeorm:run', (err, stdout) => {\n      if (err) {\n        reject(err);\n      }\n      console.log(stdout);\n      resolve();\n    });\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/account/account.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : BANK_SERVICES\n                    \n                \n\n\n        \n    \n\n    src/bank/bank.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : BANK_SERVICES\n                    \n                \n\n\n        \n    \n\n    src/ability/ability.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : USER_ACTIONS\n                    \n                \n\n\n        \n    \n\n    src/announcement/announcement.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : ANNOUNCEMENT_STATUS\n                    \n                \n\n\n        \n    \n\n    src/announcement/announcement.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : ANNOUNCEMENT_STATUS\n                    \n                \n\n\n        \n    \n\n    src/transactions/transactions.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : BANK_SERVICES\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : TRANSACTION\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
